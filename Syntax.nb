(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3454001,      77557]
NotebookOptionsPosition[   3447746,      77446]
NotebookOutlinePosition[   3448183,      77463]
CellTagsIndexPosition[   3448140,      77460]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Syntax", "Title",
 CellChangeTimes->{{3.8701842432722235`*^9, 
  3.8701842442426844`*^9}},ExpressionUUID->"ef7afc9a-a405-4fec-bb62-\
56bca82d332b"],

Cell["f[x,y]", "CodeText",
 CellChangeTimes->{{3.870184253548558*^9, 
  3.8701842629360685`*^9}},ExpressionUUID->"84594cf8-f889-4f79-9297-\
5be37a19a2a8"],

Cell["\<\
Exp, Do. Symbol and function names begin with a capital letter and are fully \
spelled out except for cases like
Exp, Mod, Det, Tr, etc. Sometimes there are numbers like Plot3D. In addition, \
there are a few acryonyms like WolframCloudUUID. A basic function would be \
ExampleFunctionCapitalization. Other possibilities include ExampleFunction3D \
and ExampleFunctionCAP and ExampleFunction ExampleFunctionCAP3DRequestData.
Some of the functions are named after people.\
\>", "CodeText",
 CellChangeTimes->{{3.8701842659372377`*^9, 
  3.870184410997018*^9}},ExpressionUUID->"0d70c5aa-9a47-498d-a415-\
2c7436503e16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.87018441176997*^9, 3.870184415125272*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"18594ac4-4460-48db-aa0a-79de2f994a04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"attributes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Attributes\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Attributes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"character count\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CharacterCount\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CharacterCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cloud support notes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CloudSupportNotes\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CloudSupportNotes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cloud support status\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CloudSupportStatus\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CloudSupportStatus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"common option values\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CommonOptionValues\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CommonOptionValues\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"date introduced\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateIntroduced\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateIntroduced\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"date last modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateLastModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateLastModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dates modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DatesModified\""}], "]"}],
      "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"DatesModified\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation basic examples\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationBasicExamples\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation example counts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleCounts\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleCounts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation example inputs\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleInputs\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleInputs\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation example text\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleText\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleText\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"entity classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EntityClasses\""}], "]"}],
      "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"EntityClasses\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"eponymous people\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
       "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"equal\[Hyphen]precedence symbols\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"EqualPrecedenceSymbols\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EqualPrecedenceSymbols\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"frequencies of usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Frequencies\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Frequencies\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full version introduced\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FullVersionIntroduced\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionIntroduced\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full version last modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FullVersionLastModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionLastModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full versions modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FullVersionsModified\""}],
        "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionsModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"functionality areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbol background\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionEssay\""}], "]"}],
      "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"FunctionEssay\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"keyboard shortcuts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KeyboardShortcuts\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"KeyboardShortcuts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"link trails\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LinkTrails\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"LinkTrails\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"memberships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Memberships\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Memberships\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"option names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"OptionNames\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"OptionNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"options\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Options\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Options\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"plaintext usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlaintextUsage\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PlaintextUsage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"precedence ranks\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PrecedenceRanks\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PrecedenceRanks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ranks of usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ranks\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Ranks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related entities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedEntities\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedEntities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related guide pages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedGuidePages\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedGuidePages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related links\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedLinks\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedLinks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related symbols\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedSymbols\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedSymbols\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"relationship community graph\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"RelationshipCommunityGraph\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipCommunityGraph\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"relationship graph\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelationshipGraph\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipGraph\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"short notations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShortNotations\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"ShortNotations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"subject classifications\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SubjectClassifications\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SubjectClassifications\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbols linking to\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SymbolsLinkingTo\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsLinkingTo\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbols using as attribute\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsAttribute\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsAttribute\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbols using as option\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsOption\""}],
        "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsOption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"text strings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TextStrings\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"TextStrings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"timeline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Timeline\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Timeline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"timeline events\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TimelineEvents\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TimelineEvents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"translations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Translations\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Translations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typeset usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TypesetUsage\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TypesetUsage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typeset usage notes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TypesetUsageNotes\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TypesetUsageNotes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"URL\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"URL\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"URL\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"version introduced\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionIntroduced\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionIntroduced\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"version last modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionLastModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionLastModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"versions modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionsModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionsModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Wolfram documentation link\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WolframDocumentationLink\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"WolframDocumentationLink\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.870184416417552*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"dfee45f8-56a6-47de-8d1d-aa3daa15b5de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalName", "[", 
  TemplateBox[{"\"eponymous people\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
      "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
   "EntityProperty"], "]"}]], "Input",
 CellChangeTimes->{{3.8701844255513096`*^9, 3.8701844272523775`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3e2eb532-9339-4e6e-8dfa-3035ae40ff91"],

Cell[BoxData["\<\"EponymousPeople\"\>"], "Output",
 CellChangeTimes->{3.8701844275799*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"08ac3305-c275-4b9d-9dcb-783713c8cc8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", 
  RowBox[{"\"\<SpearmanRho\>\"", ",", 
   RowBox[{"CanonicalName", "[", 
    TemplateBox[{"\"eponymous people\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
        "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
     "EntityProperty"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8701844294733505`*^9, 3.8701844356391068`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"c531d379-8a5b-4624-b6eb-baa46b3fa3ac"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"Charles Spearman\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Person\"", ",", "\"CharlesSpearman::46v5p\""}], "]"}], 
    "\"Entity[\\\"Person\\\", \\\"CharlesSpearman::46v5p\\\"]\"", 
    "\"person\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{3.870184436329693*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"a3b869bd-9d3c-46a0-b21a-a61d23f4c069"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"WolframLanguageData", "[", 
    RowBox[{"\"\<SpearmanRho\>\"", ",", 
     RowBox[{"CanonicalName", "[", 
      TemplateBox[{"\"eponymous people\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
          "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
       "EntityProperty"], "]"}]}], "]"}], ",", 
   "\"\<NonMissingPropertyAssociation\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8701844458964443`*^9, 3.8701844579851847`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"aae703e7-4244-407f-92ed-6c2ee3f4a656"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{
     TemplateBox[{"\"other names\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"AlternateNames\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"AlternateNames\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     RowBox[{"{", "\<\"C Spearman\"\>", "}"}]}], ",", 
    RowBox[{
     TemplateBox[{"\"astrological sign\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"AstrologicalSign\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"AstrologicalSign\\\"]\""},
      "EntityProperty"], "\[Rule]", "\<\"Virgo\"\>"}], ",", 
    RowBox[{
     TemplateBox[{"\"date of birth\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"BirthDate\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"BirthDate\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     TemplateBox[{
       RowBox[{"\"Thu 10 Sep 1863\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1863", ",", "9", ",", "10"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{
     TemplateBox[{"\"place of birth\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"BirthPlace\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"BirthPlace\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     TemplateBox[{"\"London\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"London\"", ",", "\"GreaterLondon\"", ",", 
               "\"UnitedKingdom\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"London\\\", \\\"GreaterLondon\\\", \
\\\"UnitedKingdom\\\"}]\"", "\"city\""},
      "Entity"]}], ",", 
    RowBox[{
     TemplateBox[{"\"Chinese zodiac sign\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"ChineseZodiacSign\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"ChineseZodiacSign\\\"]\""},
      "EntityProperty"], "\[Rule]", "\<\"Pig (Yin Water)\"\>"}], ",", 
    RowBox[{
     TemplateBox[{"\"date of death\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"DeathDate\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"DeathDate\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     TemplateBox[{
       RowBox[{"\"Mon 17 Sep 1945\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"1945", ",", "9", ",", "17"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{
     TemplateBox[{"\"place of death\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"DeathPlace\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"DeathPlace\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     TemplateBox[{"\"London\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"London\"", ",", "\"GreaterLondon\"", ",", 
               "\"UnitedKingdom\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"London\\\", \\\"GreaterLondon\\\", \
\\\"UnitedKingdom\\\"}]\"", "\"city\""},
      "Entity"]}], ",", 
    RowBox[{
     TemplateBox[{"\"gender\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"Gender\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"Gender\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     TemplateBox[{"\"male\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Gender\"", ",", "\"Male\""}], "]"}], 
       "\"Entity[\\\"Gender\\\", \\\"Male\\\"]\"", "\"gender\""},
      "Entity"]}], ",", 
    RowBox[{
     TemplateBox[{"\"husbands\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"Husbands\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"Husbands\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{
     TemplateBox[{"\"name\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"Name\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"Name\\\"]\""},
      "EntityProperty"], "\[Rule]", "\<\"Charles Spearman\"\>"}], ",", 
    RowBox[{
     TemplateBox[{"\"nationality\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"NationalityCountries\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"NationalityCountries\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     RowBox[{"{", 
      TemplateBox[{"\"United Kingdom\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"", "\"country\""},
       "Entity"], "}"}]}], ",", 
    RowBox[{
     TemplateBox[{"\"occupation\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"Occupation\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"Occupation\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\<\"psychologist\"\>", ",", "\<\"university teacher\"\>", 
       ",", "\<\"statistician\"\>"}], "}"}]}], ",", 
    RowBox[{
     TemplateBox[{"\"wives\"", 
       RowBox[{"EntityProperty", "[", 
         RowBox[{"\"Person\"", ",", "\"Wives\""}], "]"}], 
       "\"EntityProperty[\\\"Person\\\", \\\"Wives\\\"]\""},
      "EntityProperty"], "\[Rule]", 
     RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{3.8701844597500772`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"91516e31-31cf-4044-b3ea-8a0f54ab97fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", 
  RowBox[{"\"\<List\>\"", ",", "\"\<EponymousPeople\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8701844831877823`*^9, 3.8701844883859515`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"7f826ced-5e98-45a6-b14e-4dc04123f73c"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8701844889359827`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"72670abd-a43e-41a7-8ce1-99d99aff10e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", 
  RowBox[{"\"\<SpearmanRho\>\"", ",", "\"\<EponymousPeople\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8701844831877823`*^9, 3.87018449559427*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"82afabcb-2bf8-47f8-bcf3-f11bed3ae4a4"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"Charles Spearman\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Person\"", ",", "\"CharlesSpearman::46v5p\""}], "]"}], 
    "\"Entity[\\\"Person\\\", \\\"CharlesSpearman::46v5p\\\"]\"", 
    "\"person\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{3.8701844958662953`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"c0b5d9e3-f69d-4ef3-95d7-d7ddd90de8ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Q*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.870184499381996*^9, 3.870184512447526*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"67b31af8-efa6-4298-adb6-bf3c3fe96a93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AcyclicGraphQ\"\>", ",", "\<\"AlgebraicIntegerQ\"\>", 
   ",", "\<\"AlgebraicUnitQ\"\>", ",", "\<\"AntihermitianMatrixQ\"\>", 
   ",", "\<\"AntisymmetricMatrixQ\"\>", ",", "\<\"ArgumentCountQ\"\>", 
   ",", "\<\"ArrayQ\"\>", ",", "\<\"AskedQ\"\>", ",", "\<\"AssociationQ\"\>", 
   ",", "\<\"AtomQ\"\>", ",", "\<\"AudioInstanceQ\"\>", ",", "\<\"AudioQ\"\>",
    ",", "\<\"AutoQuoteCharacters\"\>", ",", "\<\"BinaryImageQ\"\>", 
   ",", "\<\"BioSequenceQ\"\>", ",", "\<\"BipartiteGraphQ\"\>", 
   ",", "\<\"BondQ\"\>", ",", "\<\"BooleanQ\"\>", 
   ",", "\<\"BoundaryMeshRegionQ\"\>", ",", "\<\"BoundedRegionQ\"\>", 
   ",", "\<\"BusinessDayQ\"\>", ",", "\<\"ByteArrayFormatQ\"\>", 
   ",", "\<\"ByteArrayQ\"\>", 
   ",", "\<\"CircularQuaternionMatrixDistribution\"\>", ",", "\<\"ColorQ\"\>",
    ",", "\<\"ColorQuantize\"\>", ",", "\<\"CompatibleUnitQ\"\>", 
   ",", "\<\"CompleteGraphQ\"\>", ",", "\<\"CompositeQ\"\>", 
   ",", "\<\"ConfirmQuiet\"\>", ",", "\<\"ConnectedGraphQ\"\>", 
   ",", "\<\"ConnectedMoleculeQ\"\>", ",", "\<\"ConstantRegionQ\"\>", 
   ",", "\<\"ContinuousTimeModelQ\"\>", ",", "\<\"ControllableModelQ\"\>", 
   ",", "\<\"ConvexPolygonQ\"\>", ",", "\<\"ConvexPolyhedronQ\"\>", 
   ",", "\<\"ConvexRegionQ\"\>", ",", "\<\"CoprimeQ\"\>", 
   ",", "\<\"CSGRegionQ\"\>", ",", "\<\"CurlyDoubleQuote\"\>", 
   ",", "\<\"CurlyQuote\"\>", ",", "\<\"DataStructureQ\"\>", 
   ",", "\<\"DateObjectQ\"\>", ",", "\<\"DateOverlapsQ\"\>", 
   ",", "\<\"DateWithinQ\"\>", ",", "\<\"DaylightQ\"\>", 
   ",", "\<\"DayMatchQ\"\>", ",", "\<\"DeviceOpenQ\"\>", 
   ",", "\<\"DiagonalizableMatrixQ\"\>", ",", "\<\"DiagonalMatrixQ\"\>", 
   ",", "\<\"DictionaryWordQ\"\>", ",", "\<\"DifferenceQuotient\"\>", 
   ",", "\<\"DigitQ\"\>", ",", "\<\"DirectedGraphQ\"\>", 
   ",", "\<\"DirectoryQ\"\>", ",", "\<\"DiscreteLQEstimatorGains\"\>", 
   ",", "\<\"DiscreteLQRegulatorGains\"\>", ",", "\<\"DiscreteTimeModelQ\"\>",
    ",", "\<\"DisjointQ\"\>", ",", "\<\"DispatchQ\"\>", 
   ",", "\<\"DistributionParameterQ\"\>", ",", "\<\"docQueryString\"\>", 
   ",", "\<\"DuplicateFreeQ\"\>", ",", "\<\"EdgeCoverQ\"\>", 
   ",", "\<\"EdgeQ\"\>", ",", "\<\"EdgeTaggedGraphQ\"\>", 
   ",", "\<\"EdgeTransitiveGraphQ\"\>", ",", "\<\"EdgeWeightedGraphQ\"\>", 
   ",", "\<\"EllipticNomeQ\"\>", ",", "\<\"EmbeddedSQLEntityClass\"\>", 
   ",", "\<\"EmbeddedSQLExpression\"\>", ",", "\<\"EmptyGraphQ\"\>", 
   ",", "\<\"EulerianGraphQ\"\>", ",", "\<\"EvenQ\"\>", 
   ",", "\<\"ExactNumberQ\"\>", ",", "\<\"ExcludedPhysicalQuantities\"\>", 
   ",", "\<\"FailureQ\"\>", ",", "\<\"FileExistsQ\"\>", 
   ",", "\<\"FileFormatQ\"\>", ",", "\<\"FreeQ\"\>", 
   ",", "\<\"GeneratedQuantityMagnitudes\"\>", ",", "\<\"GeoWithinQ\"\>", 
   ",", "\<\"GraphQ\"\>", ",", "\<\"GroupElementQ\"\>", 
   ",", "\<\"HamiltonianGraphQ\"\>", ",", "\<\"HermitianMatrixQ\"\>", 
   ",", "\<\"HypergeometricPFQ\"\>", 
   ",", "\<\"HypergeometricPFQRegularized\"\>", ",", "\<\"ImageContainsQ\"\>",
    ",", "\<\"ImageInstanceQ\"\>", ",", "\<\"ImageQ\"\>", 
   ",", "\<\"IncludeQuantities\"\>", ",", "\<\"IndefiniteMatrixQ\"\>", 
   ",", "\<\"IndependentEdgeSetQ\"\>", 
   ",", "\<\"IndependentPhysicalQuantity\"\>", 
   ",", "\<\"IndependentVertexSetQ\"\>", ",", "\<\"InexactNumberQ\"\>", 
   ",", "\<\"IntegerQ\"\>", ",", "\<\"IntersectingQ\"\>", 
   ",", "\<\"IntervalMemberQ\"\>", ",", "\<\"InverseEllipticNomeQ\"\>", 
   ",", "\<\"IrreduciblePolynomialQ\"\>", ",", "\<\"IsomorphicGraphQ\"\>", 
   ",", "\<\"IsomorphicSubgraphQ\"\>", ",", "\<\"KEdgeConnectedGraphQ\"\>", 
   ",", "\<\"KeyExistsQ\"\>", ",", "\<\"KeyFreeQ\"\>", 
   ",", "\<\"KeyMemberQ\"\>", ",", "\<\"KnownUnitQ\"\>", 
   ",", "\<\"KVertexConnectedGraphQ\"\>", ",", "\<\"LeapYearQ\"\>", 
   ",", "\<\"LegendreQ\"\>", ",", "\<\"LetterQ\"\>", 
   ",", "\<\"LinkConnectedQ\"\>", ",", "\<\"LinkReadyQ\"\>", 
   ",", "\<\"ListQ\"\>", ",", "\<\"LoopFreeGraphQ\"\>", 
   ",", "\<\"LowerCaseQ\"\>", ",", "\<\"LowerTriangularMatrixQ\"\>", 
   ",", "\<\"LQEstimatorGains\"\>", ",", "\<\"LQGRegulator\"\>", 
   ",", "\<\"LQOutputRegulatorGains\"\>", ",", "\<\"LQRegulatorGains\"\>", 
   ",", "\<\"MachineNumberQ\"\>", ",", "\<\"ManagedLibraryExpressionQ\"\>", 
   ",", "\<\"MandelbrotSetMemberQ\"\>", ",", "\<\"MarcumQ\"\>", 
   ",", "\<\"MatchLocalNameQ\"\>", ",", "\<\"MatchQ\"\>", 
   ",", "\<\"MatrixQ\"\>", ",", "\<\"MemberQ\"\>", 
   ",", "\<\"MersennePrimeExponentQ\"\>", ",", "\<\"MeshCellQuality\"\>", 
   ",", "\<\"MeshQualityGoal\"\>", ",", "\<\"MeshRegionQ\"\>", 
   ",", "\<\"MinkowskiQuestionMark\"\>", ",", "\<\"MissingQ\"\>", 
   ",", "\<\"MixedGraphQ\"\>", ",", "\<\"MixedRadixQuantity\"\>", 
   ",", "\<\"MoleculeContainsQ\"\>", ",", "\<\"MoleculeEquivalentQ\"\>", 
   ",", "\<\"MoleculeFreeQ\"\>", ",", "\<\"MoleculeMatchQ\"\>", 
   ",", "\<\"MoleculeQ\"\>", ",", "\<\"MultigraphQ\"\>", ",", "\<\"NameQ\"\>",
    ",", "\<\"NegativeDefiniteMatrixQ\"\>", 
   ",", "\<\"NegativeSemidefiniteMatrixQ\"\>", ",", "\<\"NormalMatrixQ\"\>", 
   ",", "\<\"NumberQ\"\>", ",", "\<\"NumericArrayQ\"\>", 
   ",", "\<\"NumericQ\"\>", ",", "\<\"ObjectExistsQ\"\>", 
   ",", "\<\"ObservableModelQ\"\>", ",", "\<\"OddQ\"\>", 
   ",", "\<\"OptionQ\"\>", ",", "\<\"OrderedQ\"\>", 
   ",", "\<\"OrthogonalMatrixQ\"\>", ",", "\<\"OutputControllableModelQ\"\>", 
   ",", "\<\"PacletNewerQ\"\>", ",", "\<\"PacletObjectQ\"\>", 
   ",", "\<\"PalindromeQ\"\>", ",", "\<\"PartitionsQ\"\>", 
   ",", "\<\"PasteAutoQuoteCharacters\"\>", ",", "\<\"PathGraphQ\"\>", 
   ",", "\<\"PerfectNumberQ\"\>", ",", "\<\"PermissionsGroupMemberQ\"\>", 
   ",", "\<\"PermutationCyclesQ\"\>", ",", "\<\"PermutationListQ\"\>", 
   ",", "\<\"PlanarGraphQ\"\>", ",", "\<\"PointProcessParameterQ\"\>", 
   ",", "\<\"PolynomialExpressionQ\"\>", ",", "\<\"PolynomialQ\"\>", 
   ",", "\<\"PolynomialQuotient\"\>", 
   ",", "\<\"PolynomialQuotientRemainder\"\>", 
   ",", "\<\"PositiveDefiniteMatrixQ\"\>", 
   ",", "\<\"PositiveSemidefiniteMatrixQ\"\>", ",", "\<\"PossibleZeroQ\"\>", 
   ",", "\<\"PrimePowerQ\"\>", ",", "\<\"PrimeQ\"\>", 
   ",", "\<\"PrimitivePolynomialQ\"\>", ",", "\<\"PrintableASCIIQ\"\>", 
   ",", "\<\"ProcessParameterQ\"\>", ",", "\<\"QBinomial\"\>", 
   ",", "\<\"QFactorial\"\>", ",", "\<\"QGamma\"\>", 
   ",", "\<\"QHypergeometricPFQ\"\>", ",", "\<\"QnDispersion\"\>", 
   ",", "\<\"QPochhammer\"\>", ",", "\<\"QPolyGamma\"\>", 
   ",", "\<\"QRDecomposition\"\>", ",", "\<\"QuadraticIrrationalQ\"\>", 
   ",", "\<\"QuadraticOptimization\"\>", ",", "\<\"Quantile\"\>", 
   ",", "\<\"QuantilePlot\"\>", ",", "\<\"Quantity\"\>", 
   ",", "\<\"QuantityArray\"\>", ",", "\<\"QuantityDistribution\"\>", 
   ",", "\<\"QuantityForm\"\>", ",", "\<\"QuantityMagnitude\"\>", 
   ",", "\<\"QuantityQ\"\>", ",", "\<\"QuantityUnit\"\>", 
   ",", "\<\"QuantityVariable\"\>", 
   ",", "\<\"QuantityVariableCanonicalUnit\"\>", 
   ",", "\<\"QuantityVariableDimensions\"\>", 
   ",", "\<\"QuantityVariableIdentifier\"\>", 
   ",", "\<\"QuantityVariablePhysicalQuantity\"\>", ",", "\<\"Quartics\"\>", 
   ",", "\<\"QuartileDeviation\"\>", ",", "\<\"Quartiles\"\>", 
   ",", "\<\"QuartileSkewness\"\>", ",", "\<\"Query\"\>", 
   ",", "\<\"QuestionGenerator\"\>", ",", "\<\"QuestionInterface\"\>", 
   ",", "\<\"QuestionObject\"\>", ",", "\<\"QuestionSelector\"\>", 
   ",", "\<\"QueueingNetworkProcess\"\>", ",", "\<\"QueueingProcess\"\>", 
   ",", "\<\"QueueProperties\"\>", ",", "\<\"Quiet\"\>", 
   ",", "\<\"QuietEcho\"\>", ",", "\<\"Quit\"\>", ",", "\<\"Quotient\"\>", 
   ",", "\<\"QuotientRemainder\"\>", ",", "\<\"RationalExpressionQ\"\>", 
   ",", "\<\"ReactionBalancedQ\"\>", ",", "\<\"RegionQ\"\>", 
   ",", "\<\"RegularlySampledQ\"\>", 
   ",", "\<\"RequiredPhysicalQuantities\"\>", ",", "\<\"RootOfUnityQ\"\>", 
   ",", "\<\"SameQ\"\>", ",", "\<\"SatisfiableQ\"\>", 
   ",", "\<\"ScheduledTaskActiveQ\"\>", ",", "\<\"SearchQueryString\"\>", 
   ",", "\<\"SimpleGraphQ\"\>", ",", "\<\"SimplePolygonQ\"\>", 
   ",", "\<\"SimplePolyhedronQ\"\>", ",", "\<\"SocketReadyQ\"\>", 
   ",", "\<\"SolidRegionQ\"\>", ",", "\<\"SparseArrayQ\"\>", 
   ",", "\<\"SpatialObservationRegionQ\"\>", ",", "\<\"SpeakerMatchQ\"\>", 
   ",", "\<\"SpheroidalQS\"\>", ",", "\<\"SpheroidalQSPrime\"\>", 
   ",", "\<\"SquareFreeQ\"\>", ",", "\<\"SquareMatrixQ\"\>", 
   ",", "\<\"StringContainsQ\"\>", ",", "\<\"StringEndsQ\"\>", 
   ",", "\<\"StringFormatQ\"\>", ",", "\<\"StringFreeQ\"\>", 
   ",", "\<\"StringMatchQ\"\>", ",", "\<\"StringQ\"\>", 
   ",", "\<\"StringStartsQ\"\>", ",", "\<\"StructuredArrayHeadQ\"\>", 
   ",", "\<\"SubsetQ\"\>", ",", "\<\"SymmetricMatrixQ\"\>", 
   ",", "\<\"SyntaxQ\"\>", ",", "\<\"TautologyQ\"\>", ",", "\<\"TensorQ\"\>", 
   ",", "\<\"TimeObjectQ\"\>", ",", "\<\"TreeGraphQ\"\>", 
   ",", "\<\"TreeLeafQ\"\>", ",", "\<\"TreeQ\"\>", ",", "\<\"TrueQ\"\>", 
   ",", "\<\"TsallisQExponentialDistribution\"\>", 
   ",", "\<\"TsallisQGaussianDistribution\"\>", ",", "\<\"UnateQ\"\>", 
   ",", "\<\"UndirectedGraphQ\"\>", ",", "\<\"UnitaryMatrixQ\"\>", 
   ",", "\<\"UnsameQ\"\>", ",", "\<\"UpperCaseQ\"\>", 
   ",", "\<\"UpperTriangularMatrixQ\"\>", ",", "\<\"URLQueryDecode\"\>", 
   ",", "\<\"URLQueryEncode\"\>", ",", "\<\"ValueQ\"\>", 
   ",", "\<\"VectorQ\"\>", ",", "\<\"VertexCoverQ\"\>", 
   ",", "\<\"VertexQ\"\>", ",", "\<\"VertexTransitiveGraphQ\"\>", 
   ",", "\<\"VertexWeightedGraphQ\"\>", ",", "\<\"VideoQ\"\>", 
   ",", "\<\"WeaklyConnectedGraphQ\"\>", ",", "\<\"WeightedGraphQ\"\>", 
   ",", "\<\"WolframAlphaQuantity\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.870184512876484*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"33bd3754-2a02-4a5b-8360-0f55afb73dcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", "\"\<*Q\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.870184516853469*^9, 3.870184529954261*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"220c2409-a1ae-4c94-b92e-728df9245eea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AcyclicGraphQ",
                ButtonNote->"paclet:ref/AcyclicGraphQ"],
               "\"paclet:ref/AcyclicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AcyclicGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an acyclic graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/AcyclicGraphQ",
                     "paclet:ref/AcyclicGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AcyclicGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/AcyclicGraphQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AcyclicGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AcyclicGraphQ",
                ButtonNote->"paclet:ref/AcyclicGraphQ"],
               "\"paclet:ref/AcyclicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AcyclicGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an acyclic graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AcyclicGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is an \
acyclic graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AcyclicGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AcyclicGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`AcyclicGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AlgebraicIntegerQ",
                ButtonNote->"paclet:ref/AlgebraicIntegerQ"],
               "\"paclet:ref/AlgebraicIntegerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AlgebraicIntegerQ\\\", \\\"[\
\\\", StyleBox[\\\"a\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) is an algebraic integer, and \
yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/AlgebraicIntegerQ", 
                    "paclet:ref/AlgebraicIntegerQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
AlgebraicIntegerQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
AlgebraicIntegerQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AlgebraicIntegerQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AlgebraicIntegerQ",
                ButtonNote->"paclet:ref/AlgebraicIntegerQ"],
               "\"paclet:ref/AlgebraicIntegerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AlgebraicIntegerQ\\\", \\\"[\
\\\", StyleBox[\\\"a\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) is an algebraic integer, and \
yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AlgebraicIntegerQ\", \"[\", StyleBox[\"a\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"a\", \"TI\"]\) is an algebraic \
integer, and yields False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AlgebraicIntegerQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AlgebraicIntegerQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`AlgebraicIntegerQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AlgebraicUnitQ",
                ButtonNote->"paclet:ref/AlgebraicUnitQ"],
               "\"paclet:ref/AlgebraicUnitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AlgebraicUnitQ\\\", \
\\\"[\\\", StyleBox[\\\"a\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) is an algebraic unit, and yields \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/AlgebraicUnitQ", "paclet:ref/AlgebraicUnitQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AlgebraicUnitQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/AlgebraicUnitQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AlgebraicUnitQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AlgebraicUnitQ",
                ButtonNote->"paclet:ref/AlgebraicUnitQ"],
               "\"paclet:ref/AlgebraicUnitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AlgebraicUnitQ\\\", \
\\\"[\\\", StyleBox[\\\"a\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \\!\
\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) is an algebraic unit, and yields \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AlgebraicUnitQ\", \"[\", StyleBox[\"a\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"a\", \"TI\"]\) is an algebraic \
unit, and yields False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AlgebraicUnitQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AlgebraicUnitQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`AlgebraicUnitQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AntihermitianMatrixQ",
                ButtonNote->"paclet:ref/AntihermitianMatrixQ"],
               "\"paclet:ref/AntihermitianMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AntihermitianMatrixQ\\\", \\\
\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\\(\
\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly antihermitian, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/AntihermitianMatrixQ", 
                    "paclet:ref/AntihermitianMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
AntihermitianMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
AntihermitianMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AntihermitianMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AntihermitianMatrixQ",
                ButtonNote->"paclet:ref/AntihermitianMatrixQ"],
               "\"paclet:ref/AntihermitianMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AntihermitianMatrixQ\\\", \\\
\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\\(\
\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly antihermitian, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AntihermitianMatrixQ\", \"[\", StyleBox[\"m\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is \
explicitly antihermitian, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AntihermitianMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AntihermitianMatrixQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> {SameTest -> Automatic, Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> 
      "System`AntihermitianMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AntisymmetricMatrixQ",
                ButtonNote->"paclet:ref/AntisymmetricMatrixQ"],
               "\"paclet:ref/AntisymmetricMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AntisymmetricMatrixQ\\\", \\\
\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\\(\
\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly antisymmetric, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/AntisymmetricMatrixQ", 
                    "paclet:ref/AntisymmetricMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
AntisymmetricMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
AntisymmetricMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AntisymmetricMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AntisymmetricMatrixQ",
                ButtonNote->"paclet:ref/AntisymmetricMatrixQ"],
               "\"paclet:ref/AntisymmetricMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AntisymmetricMatrixQ\\\", \\\
\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\\(\
\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly antisymmetric, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AntisymmetricMatrixQ\", \"[\", StyleBox[\"m\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is \
explicitly antisymmetric, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AntisymmetricMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AntisymmetricMatrixQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> {SameTest -> Automatic, Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> 
      "System`AntisymmetricMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ArgumentCountQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"head\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"len\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"min\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether the number \
\\!\\(\\*StyleBox[\\\"len\\\", \\\"TI\\\"]\\) of arguments of a function \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\) is between \
\\!\\(\\*StyleBox[\\\"min\\\", \\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"max\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ArgumentCountQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"head\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"len\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], StyleBox[\\\",\\\", \\\"TR\\\"], SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TR\\\"]]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) tests whether the number \\!\\(\\*StyleBox[\\\"len\\\", \\\"TI\
\\\"]\\) of arguments of a function \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\) is one of the \\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\
\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ArgumentCountQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/ArgumentCountQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ArgumentCountQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"head\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"len\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"min\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether the number \
\\!\\(\\*StyleBox[\\\"len\\\", \\\"TI\\\"]\\) of arguments of a function \
\\!\\(\\*StyleBox[\\\"head\\\", \\\"TI\\\"]\\) is between \
\\!\\(\\*StyleBox[\\\"min\\\", \\\"TI\\\"]\\) and \\!\\(\\*StyleBox[\\\"max\\\
\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ArgumentCountQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"head\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"len\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], StyleBox[\\\",\\\", \\\"TR\\\"], SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TR\\\"]]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) tests whether the number \\!\\(\\*StyleBox[\\\"len\\\", \\\"TI\
\\\"]\\) of arguments of a function \\!\\(\\*StyleBox[\\\"head\\\", \
\\\"TI\\\"]\\) is one of the \\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\
\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ArgumentCountQ\", \"[\", RowBox[{StyleBox[\"head\", \
\"TI\"], \",\", \" \", StyleBox[\"len\", \"TI\"], \",\", \" \", \
StyleBox[\"min\", \"TI\"], \",\", \" \", StyleBox[\"max\", \"TI\"]}], \"]\"}]\
\) tests whether the number \!\(\*StyleBox[\"len\", \"TI\"]\) of arguments of \
a function \!\(\*StyleBox[\"head\", \"TI\"]\) is between \!\(\*StyleBox[\"min\
\", \"TI\"]\) and \!\(\*StyleBox[\"max\", \"TI\"]\).\n\
\!\(\*RowBox[{\"ArgumentCountQ\", \"[\", RowBox[{StyleBox[\"head\", \"TI\"], \
\",\", StyleBox[\"len\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"m\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"m\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"], StyleBox[\",\", \"TR\"], \
SubscriptBox[StyleBox[\"m\", \"TI\"], StyleBox[\"i\", \"TR\"]]}], \"}\"}]}], \
\"]\"}]\) tests whether the number \!\(\*StyleBox[\"len\", \"TI\"]\) of \
arguments of a function \!\(\*StyleBox[\"head\", \"TI\"]\) is one of the \!\(\
\*SubscriptBox[StyleBox[\"m\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).", 
      "Documentation" -> <|
       "Web" -> 
        "http://reference.wolfram.com/language/ref/ArgumentCountQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ArgumentCountQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ArrayQ",
                ButtonNote->"paclet:ref/ArrayQ"],
               "\"paclet:ref/ArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ArrayQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a full array or a \
SparseArray object, and gives False otherwise. \\n\\!\\(\\*RowBox[{\\\"ArrayQ\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) requires \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) to be a full array with a \
depth that matches the pattern \\!\\(\\*StyleBox[\\\"patt\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"ArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"patt\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
requires also that \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) yield True \
when applied to each of the array elements in \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ArrayQ", 
                    "paclet:ref/ArrayQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ArrayQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/ArrayQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ArrayQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ArrayQ",
                ButtonNote->"paclet:ref/ArrayQ"],
               "\"paclet:ref/ArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ArrayQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a full array or a \
SparseArray object, and gives False otherwise. \\n\\!\\(\\*RowBox[{\\\"ArrayQ\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) requires \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) to be a full array with a \
depth that matches the pattern \\!\\(\\*StyleBox[\\\"patt\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"ArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"patt\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
requires also that \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) yield True \
when applied to each of the array elements in \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ArrayQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a full array or a \
SparseArray object, and gives False otherwise. \n\!\(\*RowBox[{\"ArrayQ\", \
\"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"patt\", \
\"TI\"]}], \"]\"}]\) requires \!\(\*StyleBox[\"expr\", \"TI\"]\) to be a full \
array with a depth that matches the pattern \!\(\*StyleBox[\"patt\", \
\"TI\"]\). \n\!\(\*RowBox[{\"ArrayQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\
\"], \",\", StyleBox[\"patt\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"]}], \
\"]\"}]\) requires also that \!\(\*StyleBox[\"test\", \"TI\"]\) yield True \
when applied to each of the array elements in \!\(\*StyleBox[\"expr\", \
\"TI\"]\). ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ArrayQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ArrayQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ArrayQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AskedQ",
                ButtonNote->"paclet:ref/AskedQ"],
               "\"paclet:ref/AskedQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AskedQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"key\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) is a \
construct for use inside AskFunction that gives True if a value is currently \
associated with \\!\\(\\*StyleBox[\\\"key\\\", \\\"TI\\\"]\\), and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/AskedQ", 
                    "paclet:ref/AskedQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AskedQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/AskedQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AskedQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AskedQ",
                ButtonNote->"paclet:ref/AskedQ"],
               "\"paclet:ref/AskedQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AskedQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"key\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) is a \
construct for use inside AskFunction that gives True if a value is currently \
associated with \\!\\(\\*StyleBox[\\\"key\\\", \\\"TI\\\"]\\), and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AskedQ\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"key\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) is a construct for use inside \
AskFunction that gives True if a value is currently associated with \
\!\(\*StyleBox[\"key\", \"TI\"]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AskedQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AskedQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`AskedQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AssociationQ",
                ButtonNote->"paclet:ref/AssociationQ"],
               "\"paclet:ref/AssociationQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AssociationQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid Association object, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/AssociationQ", 
                    "paclet:ref/AssociationQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AssociationQ.\
html"], None}, "http://reference.wolfram.com/language/ref/AssociationQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AssociationQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AssociationQ",
                ButtonNote->"paclet:ref/AssociationQ"],
               "\"paclet:ref/AssociationQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AssociationQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid Association object, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AssociationQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\
\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a valid \
Association object, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AssociationQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AssociationQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`AssociationQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AtomQ",
                ButtonNote->"paclet:ref/AtomQ"],
               "\"paclet:ref/AtomQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AtomQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an expression which cannot \
be divided into subexpressions, and yields False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/AtomQ", 
                    "paclet:ref/AtomQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AtomQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/AtomQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AtomQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AtomQ",
                ButtonNote->"paclet:ref/AtomQ"],
               "\"paclet:ref/AtomQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AtomQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an expression which cannot \
be divided into subexpressions, and yields False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AtomQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
yields True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an expression which \
cannot be divided into subexpressions, and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AtomQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AtomQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`AtomQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AudioInstanceQ",
                ButtonNote->"paclet:ref/AudioInstanceQ"],
               "\"paclet:ref/AudioInstanceQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AudioInstanceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"obj\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) sounds to be an instance of \
the object \\!\\(\\*StyleBox[\\\"obj\\\", \\\"TI\\\"]\\), and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"AudioInstanceQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"obj\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"cat\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
assumes that \\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) is the sound of \
something in the category \\!\\(\\*StyleBox[\\\"cat\\\", \\\"TI\\\"]\\).\"\>",
                "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/AudioInstanceQ", "paclet:ref/AudioInstanceQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AudioInstanceQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/AudioInstanceQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AudioInstanceQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AudioInstanceQ",
                ButtonNote->"paclet:ref/AudioInstanceQ"],
               "\"paclet:ref/AudioInstanceQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AudioInstanceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"obj\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) sounds to be an instance of \
the object \\!\\(\\*StyleBox[\\\"obj\\\", \\\"TI\\\"]\\), and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"AudioInstanceQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"obj\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"cat\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
assumes that \\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) is the sound of \
something in the category \\!\\(\\*StyleBox[\\\"cat\\\", \\\"TI\\\"]\\).\"\>",
                "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AudioInstanceQ\", \"[\", RowBox[{StyleBox[\"audio\", \
\"TI\"], \",\", StyleBox[\"obj\", \"TI\"]}], \"]\"}]\) gives True if \
\!\(\*StyleBox[\"audio\", \"TI\"]\) sounds to be an instance of the object \!\
\(\*StyleBox[\"obj\", \"TI\"]\), and gives False otherwise.\n\
\!\(\*RowBox[{\"AudioInstanceQ\", \"[\", RowBox[{StyleBox[\"audio\", \"TI\"], \
\",\", StyleBox[\"obj\", \"TI\"], \",\", StyleBox[\"cat\", \"TI\"]}], \"]\"}]\
\) assumes that \!\(\*StyleBox[\"audio\", \"TI\"]\) is the sound of something \
in the category \!\(\*StyleBox[\"cat\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AudioInstanceQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AudioInstanceQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`AudioInstanceQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AudioQ",
                ButtonNote->"paclet:ref/AudioQ"],
               "\"paclet:ref/AudioQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AudioQ\\\", \\\"[\\\", \
StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) has the form of a valid Audio \
object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/AudioQ", 
                    "paclet:ref/AudioQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/AudioQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/AudioQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`AudioQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/AudioQ",
                ButtonNote->"paclet:ref/AudioQ"],
               "\"paclet:ref/AudioQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"AudioQ\\\", \\\"[\\\", \
StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) has the form of a valid Audio \
object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"AudioQ\", \"[\", StyleBox[\"audio\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"audio\", \"TI\"]\) has the form of \
a valid Audio object, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/AudioQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/AudioQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`AudioQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BinaryImageQ",
                ButtonNote->"paclet:ref/BinaryImageQ"],
               "\"paclet:ref/BinaryImageQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BinaryImageQ\\\", \\\"[\\\", \
StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) has the form of a binary \
Image or Image3D object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/BinaryImageQ", 
                    "paclet:ref/BinaryImageQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BinaryImageQ.\
html"], None}, "http://reference.wolfram.com/language/ref/BinaryImageQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BinaryImageQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BinaryImageQ",
                ButtonNote->"paclet:ref/BinaryImageQ"],
               "\"paclet:ref/BinaryImageQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BinaryImageQ\\\", \\\"[\\\", \
StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) has the form of a binary \
Image or Image3D object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BinaryImageQ\", \"[\", StyleBox[\"image\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"image\", \"TI\"]\) has the form of \
a binary Image or Image3D object, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BinaryImageQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BinaryImageQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`BinaryImageQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BioSequenceQ",
                ButtonNote->"paclet:ref/BioSequenceQ"],
               "\"paclet:ref/BioSequenceQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BioSequenceQ\\\", \\\"[\\\", \
StyleBox[\\\"bioseq\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"bioseq\\\", \\\"TI\\\"]\\) is a valid BioSequence \
expression, and False otherwise.\\n\\!\\(\\*RowBox[{\\\"BioSequenceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"bioseq\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"spec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"bioseq\\\", \\\"TI\\\"]\\) is a valid BioSequence \
expression matching a specification \\!\\(\\*StyleBox[\\\"spec\\\", \
\\\"TI\\\"]\\), and False otherwise.\\n\\!\\(\\*RowBox[{\\\"BioSequenceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"bioseq\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{StyleBox[SubscriptBox[\\\"spec\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"], \\\"|\\\", StyleBox[SubscriptBox[\\\"spec\\\", \\\"2\\\"], \
\\\"TI\\\"], StyleBox[\\\"|\\\", \\\"TI\\\"], StyleBox[\\\"...\\\", \
\\\"TI\\\"]}]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"bioseq\\\", \\\"TI\\\"]\\) is a valid BioSequence \
expression matching any of the \\!\\(\\*SubscriptBox[StyleBox[\\\"spec\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/BioSequenceQ", 
                    "paclet:ref/BioSequenceQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BioSequenceQ.\
html"], None}, "http://reference.wolfram.com/language/ref/BioSequenceQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BioSequenceQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BioSequenceQ",
                ButtonNote->"paclet:ref/BioSequenceQ"],
               "\"paclet:ref/BioSequenceQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BioSequenceQ\\\", \\\"[\\\", \
StyleBox[\\\"bioseq\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"bioseq\\\", \\\"TI\\\"]\\) is a valid BioSequence \
expression, and False otherwise.\\n\\!\\(\\*RowBox[{\\\"BioSequenceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"bioseq\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"spec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"bioseq\\\", \\\"TI\\\"]\\) is a valid BioSequence \
expression matching a specification \\!\\(\\*StyleBox[\\\"spec\\\", \
\\\"TI\\\"]\\), and False otherwise.\\n\\!\\(\\*RowBox[{\\\"BioSequenceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"bioseq\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{StyleBox[SubscriptBox[\\\"spec\\\", StyleBox[\\\"1\\\", \\\"TR\\\"]], \
\\\"TI\\\"], \\\"|\\\", StyleBox[SubscriptBox[\\\"spec\\\", \\\"2\\\"], \
\\\"TI\\\"], StyleBox[\\\"|\\\", \\\"TI\\\"], StyleBox[\\\"...\\\", \
\\\"TI\\\"]}]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"bioseq\\\", \\\"TI\\\"]\\) is a valid BioSequence \
expression matching any of the \\!\\(\\*SubscriptBox[StyleBox[\\\"spec\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BioSequenceQ\", \"[\", StyleBox[\"bioseq\", \"TI\"], \
\"]\"}]\) returns True if \!\(\*StyleBox[\"bioseq\", \"TI\"]\) is a valid \
BioSequence expression, and False otherwise.\n\!\(\*RowBox[{\"BioSequenceQ\", \
\"[\", RowBox[{StyleBox[\"bioseq\", \"TI\"], \",\", StyleBox[\"spec\", \
\"TI\"]}], \"]\"}]\) returns True if \!\(\*StyleBox[\"bioseq\", \"TI\"]\) is \
a valid BioSequence expression matching a specification \!\(\*StyleBox[\"spec\
\", \"TI\"]\), and False otherwise.\n\!\(\*RowBox[{\"BioSequenceQ\", \"[\", \
RowBox[{StyleBox[\"bioseq\", \"TI\"], \",\", \
RowBox[{StyleBox[SubscriptBox[\"spec\", StyleBox[\"1\", \"TR\"]], \"TI\"], \
\"|\", StyleBox[SubscriptBox[\"spec\", \"2\"], \"TI\"], StyleBox[\"|\", \
\"TI\"], StyleBox[\"...\", \"TI\"]}]}], \"]\"}]\) returns True if \
\!\(\*StyleBox[\"bioseq\", \"TI\"]\) is a valid BioSequence expression \
matching any of the \!\(\*SubscriptBox[StyleBox[\"spec\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BioSequenceQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BioSequenceQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`BioSequenceQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BipartiteGraphQ",
                ButtonNote->"paclet:ref/BipartiteGraphQ"],
               "\"paclet:ref/BipartiteGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BipartiteGraphQ\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a bipartite graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/BipartiteGraphQ", 
                    "paclet:ref/BipartiteGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
BipartiteGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
BipartiteGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BipartiteGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BipartiteGraphQ",
                ButtonNote->"paclet:ref/BipartiteGraphQ"],
               "\"paclet:ref/BipartiteGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BipartiteGraphQ\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a bipartite graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BipartiteGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \"]\
\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a \
bipartite graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BipartiteGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BipartiteGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`BipartiteGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BondQ",
                ButtonNote->"paclet:ref/BondQ"],
               "\"paclet:ref/BondQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BondQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"bond\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"bond\\\", \
\\\"TI\\\"]\\) is a bond in the molecule \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\), and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/BondQ", 
                    "paclet:ref/BondQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BondQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/BondQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BondQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BondQ",
                ButtonNote->"paclet:ref/BondQ"],
               "\"paclet:ref/BondQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BondQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"bond\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"bond\\\", \
\\\"TI\\\"]\\) is a bond in the molecule \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\), and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BondQ\", \"[\", RowBox[{StyleBox[\"m\", \"TI\"], \
\",\", StyleBox[\"bond\", \"TI\"]}], \"]\"}]\) gives True if \
\!\(\*StyleBox[\"bond\", \"TI\"]\) is a bond in the molecule \
\!\(\*StyleBox[\"m\", \"TI\"]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BondQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BondQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`BondQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BooleanQ",
                ButtonNote->"paclet:ref/BooleanQ"],
               "\"paclet:ref/BooleanQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BooleanQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is either True or False.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/BooleanQ", 
                    "paclet:ref/BooleanQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BooleanQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/BooleanQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BooleanQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BooleanQ",
                ButtonNote->"paclet:ref/BooleanQ"],
               "\"paclet:ref/BooleanQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BooleanQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is either True or False.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BooleanQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\
\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is either True or \
False.", "Documentation" -> <|
       "Local" -> "paclet:ref/BooleanQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BooleanQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`BooleanQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BoundaryMeshRegionQ",
                ButtonNote->"paclet:ref/BoundaryMeshRegionQ"],
               "\"paclet:ref/BoundaryMeshRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BoundaryMeshRegionQ\\\", \
\\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
the region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid \
BoundaryMeshRegion object and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/BoundaryMeshRegionQ", 
                    "paclet:ref/BoundaryMeshRegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
BoundaryMeshRegionQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
BoundaryMeshRegionQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BoundaryMeshRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BoundaryMeshRegionQ",
                ButtonNote->"paclet:ref/BoundaryMeshRegionQ"],
               "\"paclet:ref/BoundaryMeshRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BoundaryMeshRegionQ\\\", \
\\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
the region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid \
BoundaryMeshRegion object and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BoundaryMeshRegionQ\", \"[\", StyleBox[\"reg\", \
\"TI\"], \"]\"}]\) yields True if the region \!\(\*StyleBox[\"reg\", \
\"TI\"]\) is a valid BoundaryMeshRegion object and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BoundaryMeshRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BoundaryMeshRegionQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`BoundaryMeshRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BoundedRegionQ",
                ButtonNote->"paclet:ref/BoundedRegionQ"],
               "\"paclet:ref/BoundedRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BoundedRegionQ\\\", \
\\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a bounded region and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/BoundedRegionQ", "paclet:ref/BoundedRegionQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BoundedRegionQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/BoundedRegionQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BoundedRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BoundedRegionQ",
                ButtonNote->"paclet:ref/BoundedRegionQ"],
               "\"paclet:ref/BoundedRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BoundedRegionQ\\\", \
\\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a bounded region and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BoundedRegionQ\", \"[\", StyleBox[\"reg\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"reg\", \"TI\"]\) is a bounded region \
and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BoundedRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BoundedRegionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`BoundedRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BusinessDayQ",
                ButtonNote->"paclet:ref/BusinessDayQ"],
               "\"paclet:ref/BusinessDayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BusinessDayQ\\\", \\\"[\\\", \
StyleBox[\\\"date\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the date \
is a business day and returns False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/BusinessDayQ", 
                    "paclet:ref/BusinessDayQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BusinessDayQ.\
html"], None}, "http://reference.wolfram.com/language/ref/BusinessDayQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"HolidayCalendar", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"UnitedStates\"\>", ",", "\<\"Default\"\>"}], 
                    "}"}]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BusinessDayQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BusinessDayQ",
                ButtonNote->"paclet:ref/BusinessDayQ"],
               "\"paclet:ref/BusinessDayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BusinessDayQ\\\", \\\"[\\\", \
StyleBox[\\\"date\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the date \
is a business day and returns False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BusinessDayQ\", \"[\", StyleBox[\"date\", \"TI\"], \"]\
\"}]\) returns True if the date is a business day and returns False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BusinessDayQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/BusinessDayQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, 
        HolidayCalendar -> {"UnitedStates", "Default"}}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`BusinessDayQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ByteArrayFormatQ",
                ButtonNote->"paclet:ref/ByteArrayFormatQ"],
               "\"paclet:ref/ByteArrayFormatQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ByteArrayFormatQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"ba\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"fmt\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\
\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives True if the \
ByteArray object \\!\\(\\*StyleBox[\\\"ba\\\", \\\"TI\\\"]\\) might be \
imported as format \\\"\\!\\(\\*StyleBox[\\\"fmt\\\", \\\"TI\\\"]\\)\\\" and \
gives False otherwise.\\n\\!\\(\\*RowBox[{\\\"ByteArrayFormatQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"ba\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"ba\\\", \
\\\"TI\\\"]\\) might be imported as one of \
\\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ByteArrayFormatQ", 
                    "paclet:ref/ByteArrayFormatQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ByteArrayFormatQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ByteArrayFormatQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ByteArrayFormatQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ByteArrayFormatQ",
                ButtonNote->"paclet:ref/ByteArrayFormatQ"],
               "\"paclet:ref/ByteArrayFormatQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ByteArrayFormatQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"ba\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"fmt\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\
\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives True if the \
ByteArray object \\!\\(\\*StyleBox[\\\"ba\\\", \\\"TI\\\"]\\) might be \
imported as format \\\"\\!\\(\\*StyleBox[\\\"fmt\\\", \\\"TI\\\"]\\)\\\" and \
gives False otherwise.\\n\\!\\(\\*RowBox[{\\\"ByteArrayFormatQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"ba\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"ba\\\", \
\\\"TI\\\"]\\) might be imported as one of \
\\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ByteArrayFormatQ\", \"[\", RowBox[{StyleBox[\"ba\", \
\"TI\"], \",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"fmt\\\",\\\"TI\\\"]\\)\\\
\"\", ShowStringCharacters->True]}], \"]\"}]\) gives True if the ByteArray \
object \!\(\*StyleBox[\"ba\", \"TI\"]\) might be imported as format \
\"\!\(\*StyleBox[\"fmt\", \"TI\"]\)\" and gives False otherwise.\n\
\!\(\*RowBox[{\"ByteArrayFormatQ\", \"[\", RowBox[{StyleBox[\"ba\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"fmt\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"fmt\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) gives True if \!\(\*StyleBox[\"ba\", \"TI\"]\) might be \
imported as one of \"\!\(\*SubscriptBox[StyleBox[\"fmt\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\)\".", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ByteArrayFormatQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ByteArrayFormatQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ByteArrayFormatQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ByteArrayQ",
                ButtonNote->"paclet:ref/ByteArrayQ"],
               "\"paclet:ref/ByteArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ByteArrayQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid ByteArray object, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ByteArrayQ", 
                    "paclet:ref/ByteArrayQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ByteArrayQ.\
html"], None}, "http://reference.wolfram.com/language/ref/ByteArrayQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ByteArrayQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ByteArrayQ",
                ButtonNote->"paclet:ref/ByteArrayQ"],
               "\"paclet:ref/ByteArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ByteArrayQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid ByteArray object, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ByteArrayQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a valid \
ByteArray object, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ByteArrayQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ByteArrayQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ByteArrayQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ColorQ",
                ButtonNote->"paclet:ref/ColorQ"],
               "\"paclet:ref/ColorQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ColorQ\\\", \\\"[\\\", \
StyleBox[\\\"color\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"color\\\", \\\"TI\\\"]\\) is a valid color directive \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ColorQ", 
                    "paclet:ref/ColorQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ColorQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/ColorQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ColorQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ColorQ",
                ButtonNote->"paclet:ref/ColorQ"],
               "\"paclet:ref/ColorQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ColorQ\\\", \\\"[\\\", \
StyleBox[\\\"color\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"color\\\", \\\"TI\\\"]\\) is a valid color directive \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ColorQ\", \"[\", StyleBox[\"color\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"color\", \"TI\"]\) is a valid color \
directive and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ColorQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ColorQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ColorQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CompatibleUnitQ",
                ButtonNote->"paclet:ref/CompatibleUnitQ"],
               "\"paclet:ref/CompatibleUnitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CompatibleUnitQ\\\", \\\"[\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) have compatible units, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/CompatibleUnitQ", 
                    "paclet:ref/CompatibleUnitQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
CompatibleUnitQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
CompatibleUnitQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CompatibleUnitQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CompatibleUnitQ",
                ButtonNote->"paclet:ref/CompatibleUnitQ"],
               "\"paclet:ref/CompatibleUnitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CompatibleUnitQ\\\", \\\"[\\\
\", RowBox[{SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"quantity\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) have compatible units, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"CompatibleUnitQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"quantity\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"quantity\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"]\"}]\) returns True if \
\!\(\*SubscriptBox[StyleBox[\"quantity\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) \
and \!\(\*SubscriptBox[StyleBox[\"quantity\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\) have compatible units, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/CompatibleUnitQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/CompatibleUnitQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`CompatibleUnitQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CompleteGraphQ",
                ButtonNote->"paclet:ref/CompleteGraphQ"],
               "\"paclet:ref/CompleteGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CompleteGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a complete graph, and \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"CompleteGraphQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the subgraph induced by \
\\!\\(\\*StyleBox[\\\"vlist\\\", \\\"TI\\\"]\\) is a complete graph, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/CompleteGraphQ", "paclet:ref/CompleteGraphQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CompleteGraphQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/CompleteGraphQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CompleteGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CompleteGraphQ",
                ButtonNote->"paclet:ref/CompleteGraphQ"],
               "\"paclet:ref/CompleteGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CompleteGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a complete graph, and \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"CompleteGraphQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the subgraph induced by \
\\!\\(\\*StyleBox[\\\"vlist\\\", \\\"TI\\\"]\\) is a complete graph, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"CompleteGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a \
complete graph, and False otherwise.\n\!\(\*RowBox[{\"CompleteGraphQ\", \
\"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", StyleBox[\"vlist\", \"TI\"]}], \
\"]\"}]\) yields True if the subgraph induced by \!\(\*StyleBox[\"vlist\", \
\"TI\"]\) is a complete graph, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/CompleteGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/CompleteGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`CompleteGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CompositeQ",
                ButtonNote->"paclet:ref/CompositeQ"],
               "\"paclet:ref/CompositeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CompositeQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a composite number, and yields \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/CompositeQ", 
                    "paclet:ref/CompositeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CompositeQ.\
html"], None}, "http://reference.wolfram.com/language/ref/CompositeQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"GaussianIntegers", "\[Rule]", "False"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CompositeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CompositeQ",
                ButtonNote->"paclet:ref/CompositeQ"],
               "\"paclet:ref/CompositeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CompositeQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a composite number, and yields \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"CompositeQ\", \"[\", StyleBox[\"n\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"n\", \"TI\"]\) is a composite \
number, and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/CompositeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/CompositeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {GaussianIntegers -> False}, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`CompositeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConnectedGraphQ",
                ButtonNote->"paclet:ref/ConnectedGraphQ"],
               "\"paclet:ref/ConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConnectedGraphQ\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is connected, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ConnectedGraphQ", 
                    "paclet:ref/ConnectedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ConnectedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ConnectedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConnectedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConnectedGraphQ",
                ButtonNote->"paclet:ref/ConnectedGraphQ"],
               "\"paclet:ref/ConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConnectedGraphQ\\\", \\\"[\\\
\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is connected, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ConnectedGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \"]\
\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is connected, \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ConnectedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ConnectedGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ConnectedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConnectedMoleculeQ",
                ButtonNote->"paclet:ref/ConnectedMoleculeQ"],
               "\"paclet:ref/ConnectedMoleculeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConnectedMoleculeQ\\\", \
\\\"[\\\", StyleBox[\\\"mol\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
the atoms in \\!\\(\\*StyleBox[\\\"mol\\\", \\\"TI\\\"]\\) form are connected \
by bonds, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ConnectedMoleculeQ", 
                    "paclet:ref/ConnectedMoleculeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ConnectedMoleculeQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ConnectedMoleculeQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConnectedMoleculeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConnectedMoleculeQ",
                ButtonNote->"paclet:ref/ConnectedMoleculeQ"],
               "\"paclet:ref/ConnectedMoleculeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConnectedMoleculeQ\\\", \
\\\"[\\\", StyleBox[\\\"mol\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
the atoms in \\!\\(\\*StyleBox[\\\"mol\\\", \\\"TI\\\"]\\) form are connected \
by bonds, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ConnectedMoleculeQ\", \"[\", StyleBox[\"mol\", \
\"TI\"], \"]\"}]\) returns True if the atoms in \!\(\*StyleBox[\"mol\", \
\"TI\"]\) form are connected by bonds, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ConnectedMoleculeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ConnectedMoleculeQ.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ConnectedMoleculeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConstantRegionQ",
                ButtonNote->"paclet:ref/ConstantRegionQ"],
               "\"paclet:ref/ConstantRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstantRegionQ\\\", \\\"[\\\
\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a constant region and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ConstantRegionQ", 
                    "paclet:ref/ConstantRegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ConstantRegionQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ConstantRegionQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConstantRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConstantRegionQ",
                ButtonNote->"paclet:ref/ConstantRegionQ"],
               "\"paclet:ref/ConstantRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConstantRegionQ\\\", \\\"[\\\
\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a constant region and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ConstantRegionQ\", \"[\", StyleBox[\"reg\", \"TI\"], \
\"]\"}]\) gives True if the \!\(\*StyleBox[\"reg\", \"TI\"]\) is a constant \
region and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ConstantRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ConstantRegionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`ConstantRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ContinuousTimeModelQ",
                ButtonNote->"paclet:ref/ContinuousTimeModelQ"],
               "\"paclet:ref/ContinuousTimeModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ContinuousTimeModelQ\\\", \\\
\"[\\\", StyleBox[\\\"lsys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\
\\(\\*StyleBox[\\\"lsys\\\", \\\"TI\\\"]\\) is a continuous-time systems \
model, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ContinuousTimeModelQ", 
                    "paclet:ref/ContinuousTimeModelQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ContinuousTimeModelQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ContinuousTimeModelQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ContinuousTimeModelQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ContinuousTimeModelQ",
                ButtonNote->"paclet:ref/ContinuousTimeModelQ"],
               "\"paclet:ref/ContinuousTimeModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ContinuousTimeModelQ\\\", \\\
\"[\\\", StyleBox[\\\"lsys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\
\\(\\*StyleBox[\\\"lsys\\\", \\\"TI\\\"]\\) is a continuous-time systems \
model, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ContinuousTimeModelQ\", \"[\", StyleBox[\"lsys\", \"TI\
\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"lsys\", \"TI\"]\) is a \
continuous-time systems model, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ContinuousTimeModelQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ContinuousTimeModelQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`ContinuousTimeModelQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ControllableModelQ",
                ButtonNote->"paclet:ref/ControllableModelQ"],
               "\"paclet:ref/ControllableModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ControllableModelQ\\\", \
\\\"[\\\", StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
the state-space model \\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\"]\\) is \
controllable, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"ControllableModelQ\\\", \\\"[\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"sub\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields True \
if the subsystem \\!\\(\\*StyleBox[\\\"sub\\\", \\\"TI\\\"]\\) is \
controllable.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ControllableModelQ", 
                    "paclet:ref/ControllableModelQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ControllableModelQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ControllableModelQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ControllableModelQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ControllableModelQ",
                ButtonNote->"paclet:ref/ControllableModelQ"],
               "\"paclet:ref/ControllableModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ControllableModelQ\\\", \
\\\"[\\\", StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
the state-space model \\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\"]\\) is \
controllable, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"ControllableModelQ\\\", \\\"[\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"sub\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) yields True \
if the subsystem \\!\\(\\*StyleBox[\\\"sub\\\", \\\"TI\\\"]\\) is \
controllable.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ControllableModelQ\", \"[\", StyleBox[\"sys\", \
\"TI\"], \"]\"}]\) yields True if the state-space model \
\!\(\*StyleBox[\"sys\", \"TI\"]\) is controllable, and False otherwise.\n\!\(\
\*RowBox[{\"ControllableModelQ\", \"[\", RowBox[{\"{\", \
RowBox[{StyleBox[\"sys\", \"TI\"], \",\", StyleBox[\"sub\", \"TI\"]}], \
\"}\"}], \"]\"}]\) yields True if the subsystem \!\(\*StyleBox[\"sub\", \
\"TI\"]\) is controllable.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ControllableModelQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ControllableModelQ.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ControllableModelQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConvexPolygonQ",
                ButtonNote->"paclet:ref/ConvexPolygonQ"],
               "\"paclet:ref/ConvexPolygonQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvexPolygonQ\\\", \
\\\"[\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the polygon \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is convex, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ConvexPolygonQ", "paclet:ref/ConvexPolygonQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ConvexPolygonQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/ConvexPolygonQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConvexPolygonQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConvexPolygonQ",
                ButtonNote->"paclet:ref/ConvexPolygonQ"],
               "\"paclet:ref/ConvexPolygonQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvexPolygonQ\\\", \
\\\"[\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the polygon \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is convex, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ConvexPolygonQ\", \"[\", StyleBox[\"poly\", \"TI\"], \
\"]\"}]\) gives True if the polygon \!\(\*StyleBox[\"poly\", \"TI\"]\) is \
convex, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ConvexPolygonQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ConvexPolygonQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ConvexPolygonQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConvexPolyhedronQ",
                ButtonNote->"paclet:ref/ConvexPolyhedronQ"],
               "\"paclet:ref/ConvexPolyhedronQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvexPolyhedronQ\\\", \\\"[\
\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the \
polyhedron \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is convex, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ConvexPolyhedronQ", 
                    "paclet:ref/ConvexPolyhedronQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ConvexPolyhedronQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ConvexPolyhedronQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConvexPolyhedronQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConvexPolyhedronQ",
                ButtonNote->"paclet:ref/ConvexPolyhedronQ"],
               "\"paclet:ref/ConvexPolyhedronQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvexPolyhedronQ\\\", \\\"[\
\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the \
polyhedron \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is convex, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ConvexPolyhedronQ\", \"[\", StyleBox[\"poly\", \
\"TI\"], \"]\"}]\) gives True if the polyhedron \!\(\*StyleBox[\"poly\", \"TI\
\"]\) is convex, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ConvexPolyhedronQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ConvexPolyhedronQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ConvexPolyhedronQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConvexRegionQ",
                ButtonNote->"paclet:ref/ConvexRegionQ"],
               "\"paclet:ref/ConvexRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvexRegionQ\\\", \
\\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a convex region and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ConvexRegionQ",
                     "paclet:ref/ConvexRegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ConvexRegionQ.\
html"], None}, "http://reference.wolfram.com/language/ref/ConvexRegionQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ConvexRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ConvexRegionQ",
                ButtonNote->"paclet:ref/ConvexRegionQ"],
               "\"paclet:ref/ConvexRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ConvexRegionQ\\\", \
\\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a convex region and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ConvexRegionQ\", \"[\", StyleBox[\"reg\", \"TI\"], \"]\
\"}]\) gives True if \!\(\*StyleBox[\"reg\", \"TI\"]\) is a convex region and \
False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ConvexRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ConvexRegionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ConvexRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CoprimeQ",
                ButtonNote->"paclet:ref/CoprimeQ"],
               "\"paclet:ref/CoprimeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CoprimeQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) are relatively prime, and yields False \
otherwise. \\n\\!\\(\\*RowBox[{\\\"CoprimeQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\\) yields True if all pairs of the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) are relatively prime, and yields False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/CoprimeQ", 
                    "paclet:ref/CoprimeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CoprimeQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/CoprimeQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Orderless", ",", "Protected"}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CoprimeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CoprimeQ",
                ButtonNote->"paclet:ref/CoprimeQ"],
               "\"paclet:ref/CoprimeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CoprimeQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) are relatively prime, and yields False \
otherwise. \\n\\!\\(\\*RowBox[{\\\"CoprimeQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}]\\) yields True if all pairs of the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) are relatively prime, and yields False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"CoprimeQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\) are relatively prime, and yields False otherwise. \
\n\!\(\*RowBox[{\"CoprimeQ\", \"[\", RowBox[{SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"]\"}]\) yields True if all pairs of the \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) are \
relatively prime, and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/CoprimeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/CoprimeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Orderless, Protected}, "FullName" -> 
      "System`CoprimeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CSGRegionQ",
                ButtonNote->"paclet:ref/CSGRegionQ"],
               "\"paclet:ref/CSGRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CSGRegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the region \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid CSGRegion object and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/CSGRegionQ", 
                    "paclet:ref/CSGRegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/CSGRegionQ.\
html"], None}, "http://reference.wolfram.com/language/ref/CSGRegionQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CSGRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/CSGRegionQ",
                ButtonNote->"paclet:ref/CSGRegionQ"],
               "\"paclet:ref/CSGRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CSGRegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the region \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid CSGRegion object and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"CSGRegionQ\", \"[\", StyleBox[\"reg\", \"TI\"], \
\"]\"}]\) yields True if the region \!\(\*StyleBox[\"reg\", \"TI\"]\) is a \
valid CSGRegion object and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/CSGRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/CSGRegionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`CSGRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DataStructureQ",
                ButtonNote->"paclet:ref/DataStructureQ"],
               "\"paclet:ref/DataStructureQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DataStructureQ\\\", \
\\\"[\\\", StyleBox[\\\"ds\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"ds\\\", \\\"TI\\\"]\\) is a valid data structure and \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"DataStructureQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"ds\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"type\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"ds\\\", \\\
\"TI\\\"]\\) is a valid data structure of the specified type and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DataStructureQ", "paclet:ref/DataStructureQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DataStructureQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/DataStructureQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DataStructureQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DataStructureQ",
                ButtonNote->"paclet:ref/DataStructureQ"],
               "\"paclet:ref/DataStructureQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DataStructureQ\\\", \
\\\"[\\\", StyleBox[\\\"ds\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"ds\\\", \\\"TI\\\"]\\) is a valid data structure and \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"DataStructureQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"ds\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"type\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"ds\\\", \\\
\"TI\\\"]\\) is a valid data structure of the specified type and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DataStructureQ\", \"[\", StyleBox[\"ds\", \"TI\"], \"]\
\"}]\) yields True if \!\(\*StyleBox[\"ds\", \"TI\"]\) is a valid data \
structure and False otherwise.\n\!\(\*RowBox[{\"DataStructureQ\", \"[\", \
RowBox[{StyleBox[\"ds\", \"TI\"], \",\", StyleBox[\"type\", \"TI\"]}], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"ds\", \"TI\"]\) is a valid data \
structure of the specified type and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DataStructureQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DataStructureQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DataStructureQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateObjectQ",
                ButtonNote->"paclet:ref/DateObjectQ"],
               "\"paclet:ref/DateObjectQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateObjectQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a DateObject with valid \
arguments, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DateObjectQ", 
                    "paclet:ref/DateObjectQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DateObjectQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DateObjectQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DateObjectQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateObjectQ",
                ButtonNote->"paclet:ref/DateObjectQ"],
               "\"paclet:ref/DateObjectQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateObjectQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a DateObject with valid \
arguments, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DateObjectQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a DateObject \
with valid arguments, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DateObjectQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DateObjectQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`DateObjectQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateOverlapsQ",
                ButtonNote->"paclet:ref/DateOverlapsQ"],
               "\"paclet:ref/DateOverlapsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateOverlapsQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) returns True \
if the calendar dates \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\) overlap, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DateOverlapsQ",
                     "paclet:ref/DateOverlapsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DateOverlapsQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DateOverlapsQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DateOverlapsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateOverlapsQ",
                ButtonNote->"paclet:ref/DateOverlapsQ"],
               "\"paclet:ref/DateOverlapsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateOverlapsQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) returns True \
if the calendar dates \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\) overlap, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DateOverlapsQ\", \"[\", RowBox[{SubscriptBox[StyleBox[\
\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) returns True if the calendar dates \
\!\(\*SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) and \
\!\(\*SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) \
overlap, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DateOverlapsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DateOverlapsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DateOverlapsQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateWithinQ",
                ButtonNote->"paclet:ref/DateWithinQ"],
               "\"paclet:ref/DateWithinQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateWithinQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) returns True if the \
calendar date \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) is entirely contained within \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DateWithinQ", 
                    "paclet:ref/DateWithinQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DateWithinQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DateWithinQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DateWithinQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateWithinQ",
                ButtonNote->"paclet:ref/DateWithinQ"],
               "\"paclet:ref/DateWithinQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateWithinQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) returns True if the \
calendar date \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) is entirely contained within \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DateWithinQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) returns True if the calendar date \
\!\(\*SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) is \
entirely contained within \!\(\*SubscriptBox[StyleBox[\"date\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DateWithinQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DateWithinQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DateWithinQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DaylightQ",
                ButtonNote->"paclet:ref/DaylightQ"],
               "\"paclet:ref/DaylightQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \\\
\"]\\\"}]\\) gives True if it is currently daylight from the user's location.\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"datespec\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is daylight from the user's \
location on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"locationspec\\\
\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is currently daylight from \
the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is \
daylight from the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\) on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives True if it is daylight from the specified \
locations and dates.\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"inclusionspec\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is daylight from the \
specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \\\"TI\\\"]\\) on the \
specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\) taking \
\\!\\(\\*StyleBox[\\\"inclusionspec\\\", \\\"TI\\\"]\\) into account.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DaylightQ", 
                    "paclet:ref/DaylightQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DaylightQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DaylightQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DaylightQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DaylightQ",
                ButtonNote->"paclet:ref/DaylightQ"],
               "\"paclet:ref/DaylightQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \\\
\"]\\\"}]\\) gives True if it is currently daylight from the user's location.\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"datespec\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is daylight from the user's \
location on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"locationspec\\\
\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is currently daylight from \
the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is \
daylight from the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\) on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives True if it is daylight from the specified \
locations and dates.\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"inclusionspec\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is daylight from the \
specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \\\"TI\\\"]\\) on the \
specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\) taking \
\\!\\(\\*StyleBox[\\\"inclusionspec\\\", \\\"TI\\\"]\\) into account.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DaylightQ\", \"[\", \"]\"}]\) gives True if it is \
currently daylight from the user's location.\n\!\(\*RowBox[{\"DaylightQ\", \
\"[\", StyleBox[\"datespec\", \"TI\"], \"]\"}]\) gives True if it is daylight \
from the user's location on the specified \!\(\*StyleBox[\"datespec\", \
\"TI\"]\).\n\!\(\*RowBox[{\"DaylightQ\", \"[\", StyleBox[\"locationspec\", \
\"TI\"], \"]\"}]\) gives True if it is currently daylight from the specified \
\!\(\*StyleBox[\"locationspec\", \"TI\"]\).\n\!\(\*RowBox[{\"DaylightQ\", \"[\
\", RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"]}], \"]\"}]\) gives True if it is daylight from the specified \
\!\(\*StyleBox[\"locationspec\", \"TI\"]\) on the specified \
\!\(\*StyleBox[\"datespec\", \"TI\"]\).\n\!\(\*RowBox[{\"DaylightQ\", \"[\", \
RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\
\"}]\) gives True if it is daylight from the specified locations and dates.\n\
\!\(\*RowBox[{\"DaylightQ\", \"[\", RowBox[{StyleBox[\"locationspec\", \
\"TI\"], \",\", StyleBox[\"datespec\", \"TI\"], \",\", \
StyleBox[\"inclusionspec\", \"TI\"]}], \"]\"}]\) gives True if it is daylight \
from the specified \!\(\*StyleBox[\"locationspec\", \"TI\"]\) on the \
specified \!\(\*StyleBox[\"datespec\", \"TI\"]\) taking \
\!\(\*StyleBox[\"inclusionspec\", \"TI\"]\) into account.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DaylightQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DaylightQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DaylightQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayMatchQ",
                ButtonNote->"paclet:ref/DayMatchQ"],
               "\"paclet:ref/DayMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayMatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the date matches the \\!\\(\
\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\) specification and returns False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DayMatchQ", 
                    "paclet:ref/DayMatchQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DayMatchQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DayMatchQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"HolidayCalendar", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"UnitedStates\"\>", ",", "\<\"Default\"\>"}], 
                    "}"}]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DayMatchQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayMatchQ",
                ButtonNote->"paclet:ref/DayMatchQ"],
               "\"paclet:ref/DayMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayMatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the date matches the \\!\\(\
\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\) specification and returns False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DayMatchQ\", \"[\", RowBox[{StyleBox[\"date\", \
\"TI\"], \",\", StyleBox[\"daytype\", \"TI\"]}], \"]\"}]\) returns True if \
the date matches the \!\(\*StyleBox[\"daytype\", \"TI\"]\) specification and \
returns False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DayMatchQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DayMatchQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, 
        HolidayCalendar -> {"UnitedStates", "Default"}}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DayMatchQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/DeviceOpenQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/DeviceOpenQ.html"],
               
               "\"http://reference.wolfram.com/language/ref/DeviceOpenQ.html\"\
"],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`DeviceOpenQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DeviceOpenQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DeviceOpenQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DeviceOpenQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/DeviceOpenQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/DeviceOpenQ.html"],
               
               "\"http://reference.wolfram.com/language/ref/DeviceOpenQ.html\"\
"],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`DeviceOpenQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "System`DeviceOpenQ", 
      "Documentation" -> <|
       "Web" -> 
        "http://reference.wolfram.com/language/ref/DeviceOpenQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DeviceOpenQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DiagonalizableMatrixQ",
                ButtonNote->"paclet:ref/DiagonalizableMatrixQ"],
               "\"paclet:ref/DiagonalizableMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DiagonalizableMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is diagonalizable, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DiagonalizableMatrixQ", 
                    "paclet:ref/DiagonalizableMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DiagonalizableMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DiagonalizableMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DiagonalizableMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DiagonalizableMatrixQ",
                ButtonNote->"paclet:ref/DiagonalizableMatrixQ"],
               "\"paclet:ref/DiagonalizableMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DiagonalizableMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is diagonalizable, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DiagonalizableMatrixQ\", \"[\", StyleBox[\"m\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is \
diagonalizable, and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DiagonalizableMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DiagonalizableMatrixQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> 
      "System`DiagonalizableMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DiagonalMatrixQ",
                ButtonNote->"paclet:ref/DiagonalMatrixQ"],
               "\"paclet:ref/DiagonalMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DiagonalMatrixQ\\\", \\\"[\\\
\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is diagonal, and False otherwise.\
\\n\\!\\(\\*RowBox[{\\\"DiagonalMatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) has nonzero elements only on the \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) \
diagonal, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DiagonalMatrixQ", 
                    "paclet:ref/DiagonalMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DiagonalMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DiagonalMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ZeroTest", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DiagonalMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DiagonalMatrixQ",
                ButtonNote->"paclet:ref/DiagonalMatrixQ"],
               "\"paclet:ref/DiagonalMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DiagonalMatrixQ\\\", \\\"[\\\
\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is diagonal, and False otherwise.\
\\n\\!\\(\\*RowBox[{\\\"DiagonalMatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) has nonzero elements only on the \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) \
diagonal, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DiagonalMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \"]\
\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is diagonal, and False \
otherwise.\n\!\(\*RowBox[{\"DiagonalMatrixQ\", \"[\", RowBox[{StyleBox[\"m\", \
\"TI\"], \",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) gives True if \
\!\(\*StyleBox[\"m\", \"TI\"]\) has nonzero elements only on the \
\!\(\*StyleBox[\"k\", \"TI\"]\)\!\(\*SuperscriptBox[\"\[Null]\", \"th\"]\) \
diagonal, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DiagonalMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DiagonalMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Tolerance -> Automatic, ZeroTest -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`DiagonalMatrixQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DictionaryWordQ",
                ButtonNote->"paclet:ref/DictionaryWordQ"],
               "\"paclet:ref/DictionaryWordQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DictionaryWordQ\\\", \\\"[\\\
\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"word\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) \
tests whether \\\"\\!\\(\\*\\nStyleBox[\\\"word\\\", \\\"TI\\\"]\\)\\\" is a \
recognized dictionary word.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DictionaryWordQ", 
                    "paclet:ref/DictionaryWordQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DictionaryWordQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DictionaryWordQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DictionaryWordQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DictionaryWordQ",
                ButtonNote->"paclet:ref/DictionaryWordQ"],
               "\"paclet:ref/DictionaryWordQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DictionaryWordQ\\\", \\\"[\\\
\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"word\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) \
tests whether \\\"\\!\\(\\*\\nStyleBox[\\\"word\\\", \\\"TI\\\"]\\)\\\" is a \
recognized dictionary word.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DictionaryWordQ\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"word\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) tests whether \"\!\(\*\n\
StyleBox[\"word\", \"TI\"]\)\" is a recognized dictionary word.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DictionaryWordQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DictionaryWordQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DictionaryWordQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DigitQ",
                ButtonNote->"paclet:ref/DigitQ"],
               "\"paclet:ref/DigitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DigitQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are digits in the range 0 through 9, and yields \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DigitQ", 
                    "paclet:ref/DigitQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DigitQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/DigitQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DigitQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DigitQ",
                ButtonNote->"paclet:ref/DigitQ"],
               "\"paclet:ref/DigitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DigitQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are digits in the range 0 through 9, and yields \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DigitQ\", \"[\", StyleBox[\"string\", \"TI\"], \"]\"}]\
\) yields True if all the characters in the string are digits in the range 0 \
through 9, and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DigitQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DigitQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`DigitQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DirectedGraphQ",
                ButtonNote->"paclet:ref/DirectedGraphQ"],
               "\"paclet:ref/DirectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DirectedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a directed graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DirectedGraphQ", "paclet:ref/DirectedGraphQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DirectedGraphQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/DirectedGraphQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DirectedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DirectedGraphQ",
                ButtonNote->"paclet:ref/DirectedGraphQ"],
               "\"paclet:ref/DirectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DirectedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a directed graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DirectedGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a \
directed graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DirectedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DirectedGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`DirectedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DirectoryQ",
                ButtonNote->"paclet:ref/DirectoryQ"],
               "\"paclet:ref/DirectoryQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DirectoryQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) gives \
True if the directory with the specified name exists, and gives False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DirectoryQ", 
                    "paclet:ref/DirectoryQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DirectoryQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DirectoryQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DirectoryQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DirectoryQ",
                ButtonNote->"paclet:ref/DirectoryQ"],
               "\"paclet:ref/DirectoryQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DirectoryQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) gives \
True if the directory with the specified name exists, and gives False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DirectoryQ\", \"[\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\
\\\"name\\\",\\\"TI\\\"]\\)\\\"\", ShowStringCharacters->True], \"]\"}]\) \
gives True if the directory with the specified name exists, and gives False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DirectoryQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DirectoryQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`DirectoryQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DiscreteTimeModelQ",
                ButtonNote->"paclet:ref/DiscreteTimeModelQ"],
               "\"paclet:ref/DiscreteTimeModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DiscreteTimeModelQ\\\", \
\\\"[\\\", StyleBox[\\\"lsys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"lsys\\\", \\\"TI\\\"]\\) is a discrete-time systems \
model, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DiscreteTimeModelQ", 
                    "paclet:ref/DiscreteTimeModelQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DiscreteTimeModelQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DiscreteTimeModelQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DiscreteTimeModelQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DiscreteTimeModelQ",
                ButtonNote->"paclet:ref/DiscreteTimeModelQ"],
               "\"paclet:ref/DiscreteTimeModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DiscreteTimeModelQ\\\", \
\\\"[\\\", StyleBox[\\\"lsys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"lsys\\\", \\\"TI\\\"]\\) is a discrete-time systems \
model, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DiscreteTimeModelQ\", \"[\", StyleBox[\"lsys\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"lsys\", \"TI\"]\) is a \
discrete-time systems model, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DiscreteTimeModelQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DiscreteTimeModelQ.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DiscreteTimeModelQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DisjointQ",
                ButtonNote->"paclet:ref/DisjointQ"],
               "\"paclet:ref/DisjointQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DisjointQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) do not share any common elements, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DisjointQ", 
                    "paclet:ref/DisjointQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DisjointQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DisjointQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DisjointQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DisjointQ",
                ButtonNote->"paclet:ref/DisjointQ"],
               "\"paclet:ref/DisjointQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DisjointQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) do not share any common elements, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DisjointQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if \!\(\*SubscriptBox[StyleBox[\"list\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"list\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\) do not share any common elements, and False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DisjointQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DisjointQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {SameTest -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DisjointQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/DispatchQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/DispatchQ.html"],
               "\"http://reference.wolfram.com/language/ref/DispatchQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`DispatchQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DispatchQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DispatchQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DispatchQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/DispatchQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/DispatchQ.html"],
               "\"http://reference.wolfram.com/language/ref/DispatchQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`DispatchQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "System`DispatchQ", 
      "Documentation" -> <|
       "Web" -> "http://reference.wolfram.com/language/ref/DispatchQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`DispatchQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DistributionParameterQ",
                ButtonNote->"paclet:ref/DistributionParameterQ"],
               "\"paclet:ref/DistributionParameterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DistributionParameterQ\\\", \
\\\"[\\\", StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"dist\\\", \\\"TI\\\"]\\) is a valid distribution, and \
yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DistributionParameterQ", 
                    "paclet:ref/DistributionParameterQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
DistributionParameterQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
DistributionParameterQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DistributionParameterQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DistributionParameterQ",
                ButtonNote->"paclet:ref/DistributionParameterQ"],
               "\"paclet:ref/DistributionParameterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DistributionParameterQ\\\", \
\\\"[\\\", StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"dist\\\", \\\"TI\\\"]\\) is a valid distribution, and \
yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DistributionParameterQ\", \"[\", StyleBox[\"dist\", \
\"TI\"], \"]\"}]\) yields True if \!\(\*StyleBox[\"dist\", \"TI\"]\) is a \
valid distribution, and yields False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DistributionParameterQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DistributionParameterQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DistributionParameterQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DuplicateFreeQ",
                ButtonNote->"paclet:ref/DuplicateFreeQ"],
               "\"paclet:ref/DuplicateFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DuplicateFreeQ\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) has no duplicates, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"DuplicateFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\) to pairs of elements to determine whether they should be \
considered duplicates.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DuplicateFreeQ", "paclet:ref/DuplicateFreeQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DuplicateFreeQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/DuplicateFreeQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DuplicateFreeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DuplicateFreeQ",
                ButtonNote->"paclet:ref/DuplicateFreeQ"],
               "\"paclet:ref/DuplicateFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DuplicateFreeQ\\\", \
\\\"[\\\", StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) has no duplicates, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"DuplicateFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\) to pairs of elements to determine whether they should be \
considered duplicates.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DuplicateFreeQ\", \"[\", StyleBox[\"list\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"list\", \"TI\"]\) has no duplicates, \
and False otherwise.\n\!\(\*RowBox[{\"DuplicateFreeQ\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"]}], \
\"]\"}]\) applies \!\(\*StyleBox[\"test\", \"TI\"]\) to pairs of elements to \
determine whether they should be considered duplicates.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DuplicateFreeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DuplicateFreeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`DuplicateFreeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeCoverQ",
                ButtonNote->"paclet:ref/EdgeCoverQ"],
               "\"paclet:ref/EdgeCoverQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeCoverQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"elist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the edge list \\!\\(\\*StyleBox[\
\\\"elist\\\", \\\"TI\\\"]\\) is an edge cover of the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/EdgeCoverQ", 
                    "paclet:ref/EdgeCoverQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/EdgeCoverQ.\
html"], None}, "http://reference.wolfram.com/language/ref/EdgeCoverQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EdgeCoverQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeCoverQ",
                ButtonNote->"paclet:ref/EdgeCoverQ"],
               "\"paclet:ref/EdgeCoverQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeCoverQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"elist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the edge list \\!\\(\\*StyleBox[\
\\\"elist\\\", \\\"TI\\\"]\\) is an edge cover of the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EdgeCoverQ\", \"[\", RowBox[{StyleBox[\"g\", \"TI\"], \
\",\", StyleBox[\"elist\", \"TI\"]}], \"]\"}]\) yields True if the edge list \
\!\(\*StyleBox[\"elist\", \"TI\"]\) is an edge cover of the graph \
\!\(\*StyleBox[\"g\", \"TI\"]\) and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EdgeCoverQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EdgeCoverQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`EdgeCoverQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeQ",
                ButtonNote->"paclet:ref/EdgeQ"],
               "\"paclet:ref/EdgeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"e\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"e\\\", \
\\\"TI\\\"]\\) is an edge in the graph \\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\) and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/EdgeQ", 
                    "paclet:ref/EdgeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/EdgeQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/EdgeQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EdgeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeQ",
                ButtonNote->"paclet:ref/EdgeQ"],
               "\"paclet:ref/EdgeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"e\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"e\\\", \
\\\"TI\\\"]\\) is an edge in the graph \\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\) and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EdgeQ\", \"[\", RowBox[{StyleBox[\"g\", \"TI\"], \
\",\", StyleBox[\"e\", \"TI\"]}], \"]\"}]\) yields True if \!\(\*StyleBox[\"e\
\", \"TI\"]\) is an edge in the graph \!\(\*StyleBox[\"g\", \"TI\"]\) and \
False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EdgeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EdgeQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`EdgeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeTaggedGraphQ",
                ButtonNote->"paclet:ref/EdgeTaggedGraphQ"],
               "\"paclet:ref/EdgeTaggedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeTaggedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) has edges tagged and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/EdgeTaggedGraphQ", 
                    "paclet:ref/EdgeTaggedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
EdgeTaggedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
EdgeTaggedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EdgeTaggedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeTaggedGraphQ",
                ButtonNote->"paclet:ref/EdgeTaggedGraphQ"],
               "\"paclet:ref/EdgeTaggedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeTaggedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) has edges tagged and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EdgeTaggedGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) has edges \
tagged and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EdgeTaggedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EdgeTaggedGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`EdgeTaggedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeTransitiveGraphQ",
                ButtonNote->"paclet:ref/EdgeTransitiveGraphQ"],
               "\"paclet:ref/EdgeTransitiveGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeTransitiveGraphQ\\\", \\\
\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a edge-transitive graph \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/EdgeTransitiveGraphQ", 
                    "paclet:ref/EdgeTransitiveGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
EdgeTransitiveGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
EdgeTransitiveGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EdgeTransitiveGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeTransitiveGraphQ",
                ButtonNote->"paclet:ref/EdgeTransitiveGraphQ"],
               "\"paclet:ref/EdgeTransitiveGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeTransitiveGraphQ\\\", \\\
\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a edge-transitive graph \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EdgeTransitiveGraphQ\", \"[\", StyleBox[\"g\", \
\"TI\"], \"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) \
is a edge-transitive graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EdgeTransitiveGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EdgeTransitiveGraphQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`EdgeTransitiveGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeWeightedGraphQ",
                ButtonNote->"paclet:ref/EdgeWeightedGraphQ"],
               "\"paclet:ref/EdgeWeightedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeWeightedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an edge-weighted graph \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/EdgeWeightedGraphQ", 
                    "paclet:ref/EdgeWeightedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
EdgeWeightedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
EdgeWeightedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EdgeWeightedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EdgeWeightedGraphQ",
                ButtonNote->"paclet:ref/EdgeWeightedGraphQ"],
               "\"paclet:ref/EdgeWeightedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EdgeWeightedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an edge-weighted graph \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EdgeWeightedGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is an \
edge-weighted graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EdgeWeightedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EdgeWeightedGraphQ.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`EdgeWeightedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EllipticNomeQ",
                ButtonNote->"paclet:ref/EllipticNomeQ"],
               "\"paclet:ref/EllipticNomeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EllipticNomeQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the nome \\!\
\\(\\*StyleBox[\\\"q\\\", \\\"TI\\\"]\\) corresponding to the parameter \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) in an elliptic function. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/EllipticNomeQ",
                     "paclet:ref/EllipticNomeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/EllipticNomeQ.\
html"], None}, "http://reference.wolfram.com/language/ref/EllipticNomeQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected", ",",
                     "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EllipticNomeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EllipticNomeQ",
                ButtonNote->"paclet:ref/EllipticNomeQ"],
               "\"paclet:ref/EllipticNomeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EllipticNomeQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the nome \\!\
\\(\\*StyleBox[\\\"q\\\", \\\"TI\\\"]\\) corresponding to the parameter \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) in an elliptic function. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EllipticNomeQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives the nome \!\(\*StyleBox[\"q\", \"TI\"]\) corresponding to the \
parameter \!\(\*StyleBox[\"m\", \"TI\"]\) in an elliptic function. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EllipticNomeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EllipticNomeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, NumericFunction, Protected, ReadProtected}, 
      "FullName" -> "System`EllipticNomeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EmptyGraphQ",
                ButtonNote->"paclet:ref/EmptyGraphQ"],
               "\"paclet:ref/EmptyGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EmptyGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an empty graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/EmptyGraphQ", 
                    "paclet:ref/EmptyGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/EmptyGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/EmptyGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EmptyGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EmptyGraphQ",
                ButtonNote->"paclet:ref/EmptyGraphQ"],
               "\"paclet:ref/EmptyGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EmptyGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an empty graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EmptyGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \"]\"}]\
\) yields True if \!\(\*StyleBox[\"g\", \"TI\"]\) is an empty graph and False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EmptyGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EmptyGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`EmptyGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EulerianGraphQ",
                ButtonNote->"paclet:ref/EulerianGraphQ"],
               "\"paclet:ref/EulerianGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EulerianGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is Eulerian, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/EulerianGraphQ", "paclet:ref/EulerianGraphQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/EulerianGraphQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/EulerianGraphQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EulerianGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EulerianGraphQ",
                ButtonNote->"paclet:ref/EulerianGraphQ"],
               "\"paclet:ref/EulerianGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EulerianGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is Eulerian, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EulerianGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is \
Eulerian, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EulerianGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EulerianGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`EulerianGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EvenQ",
                ButtonNote->"paclet:ref/EvenQ"],
               "\"paclet:ref/EvenQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EvenQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an even integer, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/EvenQ", 
                    "paclet:ref/EvenQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/EvenQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/EvenQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`EvenQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/EvenQ",
                ButtonNote->"paclet:ref/EvenQ"],
               "\"paclet:ref/EvenQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"EvenQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an even integer, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"EvenQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an even integer, and \
False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/EvenQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/EvenQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`EvenQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ExactNumberQ",
                ButtonNote->"paclet:ref/ExactNumberQ"],
               "\"paclet:ref/ExactNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ExactNumberQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an exact real or complex \
number, and returns False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ExactNumberQ", 
                    "paclet:ref/ExactNumberQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ExactNumberQ.\
html"], None}, "http://reference.wolfram.com/language/ref/ExactNumberQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ExactNumberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ExactNumberQ",
                ButtonNote->"paclet:ref/ExactNumberQ"],
               "\"paclet:ref/ExactNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ExactNumberQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an exact real or complex \
number, and returns False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ExactNumberQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\
\"}]\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an exact real or \
complex number, and returns False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ExactNumberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ExactNumberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ExactNumberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FailureQ",
                ButtonNote->"paclet:ref/FailureQ"],
               "\"paclet:ref/FailureQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FailureQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has head Failure or is equal \
to $Failed or $Aborted.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FailureQ", 
                    "paclet:ref/FailureQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FailureQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/FailureQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FailureQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FailureQ",
                ButtonNote->"paclet:ref/FailureQ"],
               "\"paclet:ref/FailureQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FailureQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has head Failure or is equal \
to $Failed or $Aborted.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FailureQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\
\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) has head Failure or is \
equal to $Failed or $Aborted.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FailureQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/FailureQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`FailureQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FileExistsQ",
                ButtonNote->"paclet:ref/FileExistsQ"],
               "\"paclet:ref/FileExistsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FileExistsQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) gives \
True if the file with the specified name exists, and gives False otherwise.\"\
\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FileExistsQ", 
                    "paclet:ref/FileExistsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FileExistsQ.\
html"], None}, "http://reference.wolfram.com/language/ref/FileExistsQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FileExistsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FileExistsQ",
                ButtonNote->"paclet:ref/FileExistsQ"],
               "\"paclet:ref/FileExistsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FileExistsQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) gives \
True if the file with the specified name exists, and gives False otherwise.\"\
\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FileExistsQ\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"name\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) gives True if the file with the \
specified name exists, and gives False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FileExistsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/FileExistsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`FileExistsQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FileFormatQ",
                ButtonNote->"paclet:ref/FileFormatQ"],
               "\"paclet:ref/FileFormatQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FileFormatQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"fmt\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
True if the file corresponding to \\!\\(\\*StyleBox[\\\"source\\\", \
\\\"TI\\\"]\\) might be imported as format \\\"\\!\\(\\*StyleBox[\\\"fmt\\\", \
\\\"TI\\\"]\\)\\\" and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"FileFormatQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\
\"source\\\", \\\"TI\\\"]\\) might be imported as one of \
\\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FileFormatQ", 
                    "paclet:ref/FileFormatQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FileFormatQ.\
html"], None}, "http://reference.wolfram.com/language/ref/FileFormatQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                    InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"Options", "[", "FileFormatQ", "]"}], ":=", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Options", "[", "URLDownload", "]"}], ",", 
                    RowBox[{
                    "Except", "[", "CreateIntermediateDirectories", "]"}]}], 
                    "]"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    ColumnForm[{Options[FileFormatQ] := FilterRules[
                    Options[URLDownload], 
                    Except[CreateIntermediateDirectories]], 
                    SpaceForm[1]}],
                    Editable->False]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FileFormatQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FileFormatQ",
                ButtonNote->"paclet:ref/FileFormatQ"],
               "\"paclet:ref/FileFormatQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FileFormatQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"fmt\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
True if the file corresponding to \\!\\(\\*StyleBox[\\\"source\\\", \
\\\"TI\\\"]\\) might be imported as format \\\"\\!\\(\\*StyleBox[\\\"fmt\\\", \
\\\"TI\\\"]\\)\\\" and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"FileFormatQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\
\"source\\\", \\\"TI\\\"]\\) might be imported as one of \
\\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FileFormatQ\", \"[\", RowBox[{StyleBox[\"source\", \
\"TI\"], \",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"fmt\\\",\\\"TI\\\"]\\)\\\
\"\", ShowStringCharacters->True]}], \"]\"}]\) gives True if the file \
corresponding to \!\(\*StyleBox[\"source\", \"TI\"]\) might be imported as \
format \"\!\(\*StyleBox[\"fmt\", \"TI\"]\)\" and gives False otherwise.\n\!\(\
\*RowBox[{\"FileFormatQ\", \"[\", RowBox[{StyleBox[\"source\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"fmt\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"fmt\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) gives True if \!\(\*StyleBox[\"source\", \"TI\"]\) might \
be imported as one of \"\!\(\*SubscriptBox[StyleBox[\"fmt\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\)\".", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FileFormatQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/FileFormatQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> 
      Information`InformationValueForm[
       DefaultValues, FileFormatQ, {Options[FileFormatQ] :> FilterRules[
           Options[URLDownload], 
           Except[CreateIntermediateDirectories]]}], "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`FileFormatQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FreeQ",
                ButtonNote->"paclet:ref/FreeQ"],
               "\"paclet:ref/FreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if no subexpression in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and yields False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests only those \
parts of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) on levels specified \
by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"FreeQ\\\", \\\"[\\\", StyleBox[\\\"form\\\", \\\"TI\\\
\"], \\\"]\\\"}]\\) represents an operator form of FreeQ that can be applied \
to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/FreeQ", 
                    "paclet:ref/FreeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/FreeQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/FreeQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Heads", "\[Rule]", "True"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`FreeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/FreeQ",
                ButtonNote->"paclet:ref/FreeQ"],
               "\"paclet:ref/FreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"FreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if no subexpression in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and yields False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"FreeQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests only those \
parts of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) on levels specified \
by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"FreeQ\\\", \\\"[\\\", StyleBox[\\\"form\\\", \\\"TI\\\
\"], \\\"]\\\"}]\\) represents an operator form of FreeQ that can be applied \
to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"FreeQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"form\", \"TI\"]}], \"]\"}]\) yields True if no \
subexpression in \!\(\*StyleBox[\"expr\", \"TI\"]\) matches \
\!\(\*StyleBox[\"form\", \"TI\"]\), and yields False otherwise. \n\
\!\(\*RowBox[{\"FreeQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
StyleBox[\"form\", \"TI\"], \",\", StyleBox[\"levelspec\", \"TI\"]}], \"]\"}]\
\) tests only those parts of \!\(\*StyleBox[\"expr\", \"TI\"]\) on levels \
specified by \!\(\*StyleBox[\"levelspec\", \"TI\"]\). \n\!\(\*RowBox[{\"FreeQ\
\", \"[\", StyleBox[\"form\", \"TI\"], \"]\"}]\) represents an operator form \
of FreeQ that can be applied to an expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/FreeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/FreeQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> {Heads -> True}, "Attributes" -> {Protected}, "FullName" -> 
      "System`FreeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/GeoWithinQ",
                ButtonNote->"paclet:ref/GeoWithinQ"],
               "\"paclet:ref/GeoWithinQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GeoWithinQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"loc\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the location \\!\\(\\*StyleBox[\
\\\"loc\\\", \\\"TI\\\"]\\) is contained within the region \\!\\(\\*StyleBox[\
\\\"reg\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"GeoWithinQ\\\", \\\"[\\\", StyleBox[\\\"reg\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of GeoWithinQ \
that can be applied to a location.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/GeoWithinQ", 
                    "paclet:ref/GeoWithinQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/GeoWithinQ.\
html"], None}, "http://reference.wolfram.com/language/ref/GeoWithinQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`GeoWithinQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/GeoWithinQ",
                ButtonNote->"paclet:ref/GeoWithinQ"],
               "\"paclet:ref/GeoWithinQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GeoWithinQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"loc\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the location \\!\\(\\*StyleBox[\
\\\"loc\\\", \\\"TI\\\"]\\) is contained within the region \\!\\(\\*StyleBox[\
\\\"reg\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"GeoWithinQ\\\", \\\"[\\\", StyleBox[\\\"reg\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of GeoWithinQ \
that can be applied to a location.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"GeoWithinQ\", \"[\", RowBox[{StyleBox[\"reg\", \
\"TI\"], \",\", StyleBox[\"loc\", \"TI\"]}], \"]\"}]\) returns True if the \
location \!\(\*StyleBox[\"loc\", \"TI\"]\) is contained within the region \
\!\(\*StyleBox[\"reg\", \"TI\"]\), and False otherwise.\n\
\!\(\*RowBox[{\"GeoWithinQ\", \"[\", StyleBox[\"reg\", \"TI\"], \"]\"}]\) \
represents an operator form of GeoWithinQ that can be applied to a location.",
       "Documentation" -> <|
       "Local" -> "paclet:ref/GeoWithinQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/GeoWithinQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`GeoWithinQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/GraphQ",
                ButtonNote->"paclet:ref/GraphQ"],
               "\"paclet:ref/GraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a valid Graph object and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/GraphQ", 
                    "paclet:ref/GraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/GraphQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/GraphQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`GraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/GraphQ",
                ButtonNote->"paclet:ref/GraphQ"],
               "\"paclet:ref/GraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a valid Graph object and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"GraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \"]\"}]\) \
yields True if \!\(\*StyleBox[\"g\", \"TI\"]\) is a valid Graph object and \
False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/GraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/GraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`GraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/GroupElementQ",
                ButtonNote->"paclet:ref/GroupElementQ"],
               "\"paclet:ref/GroupElementQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GroupElementQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the object \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an element of \
\\!\\(\\*StyleBox[\\\"group\\\", \\\"TI\\\"]\\) and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/GroupElementQ",
                     "paclet:ref/GroupElementQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/GroupElementQ.\
html"], None}, "http://reference.wolfram.com/language/ref/GroupElementQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`GroupElementQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/GroupElementQ",
                ButtonNote->"paclet:ref/GroupElementQ"],
               "\"paclet:ref/GroupElementQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"GroupElementQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the object \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an element of \
\\!\\(\\*StyleBox[\\\"group\\\", \\\"TI\\\"]\\) and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"GroupElementQ\", \"[\", RowBox[{StyleBox[\"group\", \
\"TI\"], \",\", StyleBox[\"g\", \"TI\"]}], \"]\"}]\) returns True if the \
object \!\(\*StyleBox[\"g\", \"TI\"]\) is an element of \
\!\(\*StyleBox[\"group\", \"TI\"]\) and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/GroupElementQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/GroupElementQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`GroupElementQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/HamiltonianGraphQ",
                ButtonNote->"paclet:ref/HamiltonianGraphQ"],
               "\"paclet:ref/HamiltonianGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"HamiltonianGraphQ\\\", \\\"[\
\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is Hamiltonian, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/HamiltonianGraphQ", 
                    "paclet:ref/HamiltonianGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
HamiltonianGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
HamiltonianGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`HamiltonianGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/HamiltonianGraphQ",
                ButtonNote->"paclet:ref/HamiltonianGraphQ"],
               "\"paclet:ref/HamiltonianGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"HamiltonianGraphQ\\\", \\\"[\
\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is Hamiltonian, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"HamiltonianGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is \
Hamiltonian, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/HamiltonianGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/HamiltonianGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`HamiltonianGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/HermitianMatrixQ",
                ButtonNote->"paclet:ref/HermitianMatrixQ"],
               "\"paclet:ref/HermitianMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"HermitianMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly Hermitian, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/HermitianMatrixQ", 
                    "paclet:ref/HermitianMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
HermitianMatrixQ.html"], None}, 
                    
                    "http://reference.wolfram.com/language/ref/\
HermitianMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`HermitianMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/HermitianMatrixQ",
                ButtonNote->"paclet:ref/HermitianMatrixQ"],
               "\"paclet:ref/HermitianMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"HermitianMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly Hermitian, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"HermitianMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is explicitly \
Hermitian, and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/HermitianMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/HermitianMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {SameTest -> Automatic, Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`HermitianMatrixQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/HypergeometricPFQ",
                ButtonNote->"paclet:ref/HypergeometricPFQ"],
               "\"paclet:ref/HypergeometricPFQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"HypergeometricPFQ\\\", \\\"[\
\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"p\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\
\\\"q\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) is the generalized hypergeometric function \
\\!\\(\\*RowBox[{SubscriptBox[\\\"\[Null]\\\", \\\"p\\\"], \\\"\
\[InvisibleSpace]\\\", SubscriptBox[\\\"F\\\", \\\"q\\\"], \\\"(\\\", \
RowBox[{\\\"a\\\", \\\";\\\", \\\"b\\\", \\\";\\\", \\\"z\\\"}], \
\\\")\\\"}]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/HypergeometricPFQ", 
                    "paclet:ref/HypergeometricPFQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
HypergeometricPFQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
HypergeometricPFQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    "NumericFunction", ",", "Protected", ",", 
                    "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`HypergeometricPFQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/HypergeometricPFQ",
                ButtonNote->"paclet:ref/HypergeometricPFQ"],
               "\"paclet:ref/HypergeometricPFQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"HypergeometricPFQ\\\", \\\"[\
\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"p\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\
\\\"q\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) is the generalized hypergeometric function \
\\!\\(\\*RowBox[{SubscriptBox[\\\"\[Null]\\\", \\\"p\\\"], \\\"\
\[InvisibleSpace]\\\", SubscriptBox[\\\"F\\\", \\\"q\\\"], \\\"(\\\", \
RowBox[{\\\"a\\\", \\\";\\\", \\\"b\\\", \\\";\\\", \\\"z\\\"}], \
\\\")\\\"}]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"HypergeometricPFQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"a\", \
\"TI\"], StyleBox[\"p\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"b\", \
\"TI\"], StyleBox[\"q\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"z\", \
\"TI\"]}], \"]\"}]\) is the generalized hypergeometric function \
\!\(\*RowBox[{SubscriptBox[\"\[Null]\", \"p\"], \"\[InvisibleSpace]\", \
SubscriptBox[\"F\", \"q\"], \"(\", RowBox[{\"a\", \";\", \"b\", \";\", \
\"z\"}], \")\"}]\). ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/HypergeometricPFQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/HypergeometricPFQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {NumericFunction, Protected, ReadProtected}, "FullName" -> 
      "System`HypergeometricPFQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ImageContainsQ",
                ButtonNote->"paclet:ref/ImageContainsQ"],
               "\"paclet:ref/ImageContainsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageContainsQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"category\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if an \
instance of the specified category is detected in \\!\\(\\*StyleBox[\\\"image\
\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ImageContainsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
returns True if at least one instance of each of the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) is detected in \
\\!\\(\\*StyleBox[\\\"image\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ImageContainsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\"|\\\", SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"|\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) contains an instance of at \
least one of \\!\\(\\*SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ImageContainsQ", "paclet:ref/ImageContainsQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ImageContainsQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/ImageContainsQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageContainsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ImageContainsQ",
                ButtonNote->"paclet:ref/ImageContainsQ"],
               "\"paclet:ref/ImageContainsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageContainsQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"category\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if an \
instance of the specified category is detected in \\!\\(\\*StyleBox[\\\"image\
\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ImageContainsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
returns True if at least one instance of each of the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) is detected in \
\\!\\(\\*StyleBox[\\\"image\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"ImageContainsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\"|\\\", SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"|\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) contains an instance of at \
least one of \\!\\(\\*SubscriptBox[StyleBox[\\\"category\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ImageContainsQ\", \"[\", RowBox[{StyleBox[\"image\", \
\"TI\"], \",\", StyleBox[\"category\", \"TI\"]}], \"]\"}]\) returns True if \
an instance of the specified category is detected in \
\!\(\*StyleBox[\"image\", \"TI\"]\).\n\!\(\*RowBox[{\"ImageContainsQ\", \
\"[\", RowBox[{StyleBox[\"image\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"category\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"category\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
returns True if at least one instance of each of the \
\!\(\*SubscriptBox[StyleBox[\"category\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) \
is detected in \!\(\*StyleBox[\"image\", \"TI\"]\).\n\
\!\(\*RowBox[{\"ImageContainsQ\", \"[\", RowBox[{StyleBox[\"image\", \"TI\"], \
\",\", RowBox[{SubscriptBox[StyleBox[\"category\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \"|\", SubscriptBox[StyleBox[\"category\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \"|\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]}], \"]\"}]\) returns \
True if \!\(\*StyleBox[\"image\", \"TI\"]\) contains an instance of at least \
one of \!\(\*SubscriptBox[StyleBox[\"category\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ImageContainsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ImageContainsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ImageContainsQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ImageInstanceQ",
                ButtonNote->"paclet:ref/ImageInstanceQ"],
               "\"paclet:ref/ImageInstanceQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageInstanceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"obj\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) appears to be an instance of \
the object \\!\\(\\*StyleBox[\\\"obj\\\", \\\"TI\\\"]\\), and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"ImageInstanceQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"obj\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"cat\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
assumes that the image is of something in the category \
\\!\\(\\*StyleBox[\\\"cat\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ImageInstanceQ", "paclet:ref/ImageInstanceQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ImageInstanceQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/ImageInstanceQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageInstanceQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ImageInstanceQ",
                ButtonNote->"paclet:ref/ImageInstanceQ"],
               "\"paclet:ref/ImageInstanceQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageInstanceQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"obj\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) appears to be an instance of \
the object \\!\\(\\*StyleBox[\\\"obj\\\", \\\"TI\\\"]\\), and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"ImageInstanceQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"image\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"obj\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"cat\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
assumes that the image is of something in the category \
\\!\\(\\*StyleBox[\\\"cat\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ImageInstanceQ\", \"[\", RowBox[{StyleBox[\"image\", \
\"TI\"], \",\", StyleBox[\"obj\", \"TI\"]}], \"]\"}]\) gives True if \
\!\(\*StyleBox[\"image\", \"TI\"]\) appears to be an instance of the object \
\!\(\*StyleBox[\"obj\", \"TI\"]\), and gives False otherwise.\n\!\(\*RowBox[{\
\"ImageInstanceQ\", \"[\", RowBox[{StyleBox[\"image\", \"TI\"], \",\", \
StyleBox[\"obj\", \"TI\"], \",\", StyleBox[\"cat\", \"TI\"]}], \"]\"}]\) \
assumes that the image is of something in the category \
\!\(\*StyleBox[\"cat\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ImageInstanceQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ImageInstanceQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ImageInstanceQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ImageQ",
                ButtonNote->"paclet:ref/ImageQ"],
               "\"paclet:ref/ImageQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageQ\\\", \\\"[\\\", \
StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) has the form of a valid Image \
or Image3D object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ImageQ", 
                    "paclet:ref/ImageQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ImageQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/ImageQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ImageQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ImageQ",
                ButtonNote->"paclet:ref/ImageQ"],
               "\"paclet:ref/ImageQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ImageQ\\\", \\\"[\\\", \
StyleBox[\\\"image\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"image\\\", \\\"TI\\\"]\\) has the form of a valid Image \
or Image3D object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ImageQ\", \"[\", StyleBox[\"image\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"image\", \"TI\"]\) has the form of \
a valid Image or Image3D object, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ImageQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ImageQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ImageQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IndefiniteMatrixQ",
                ButtonNote->"paclet:ref/IndefiniteMatrixQ"],
               "\"paclet:ref/IndefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IndefiniteMatrixQ\\\", \\\"[\
\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly indefinite, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IndefiniteMatrixQ", 
                    "paclet:ref/IndefiniteMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IndefiniteMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IndefiniteMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IndefiniteMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IndefiniteMatrixQ",
                ButtonNote->"paclet:ref/IndefiniteMatrixQ"],
               "\"paclet:ref/IndefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IndefiniteMatrixQ\\\", \\\"[\
\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly indefinite, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IndefiniteMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is explicitly \
indefinite, and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IndefiniteMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IndefiniteMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`IndefiniteMatrixQ"|>,
      True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IndependentEdgeSetQ",
                ButtonNote->"paclet:ref/IndependentEdgeSetQ"],
               "\"paclet:ref/IndependentEdgeSetQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IndependentEdgeSetQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the edge \
list \\!\\(\\*StyleBox[\\\"elist\\\", \\\"TI\\\"]\\) is an independent edge \
set of the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\), and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IndependentEdgeSetQ", 
                    "paclet:ref/IndependentEdgeSetQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IndependentEdgeSetQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IndependentEdgeSetQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IndependentEdgeSetQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IndependentEdgeSetQ",
                ButtonNote->"paclet:ref/IndependentEdgeSetQ"],
               "\"paclet:ref/IndependentEdgeSetQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IndependentEdgeSetQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the edge \
list \\!\\(\\*StyleBox[\\\"elist\\\", \\\"TI\\\"]\\) is an independent edge \
set of the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\), and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IndependentEdgeSetQ\", \"[\", RowBox[{StyleBox[\"g\", \
\"TI\"], \",\", StyleBox[\"elist\", \"TI\"]}], \"]\"}]\) yields True if the \
edge list \!\(\*StyleBox[\"elist\", \"TI\"]\) is an independent edge set of \
the graph \!\(\*StyleBox[\"g\", \"TI\"]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IndependentEdgeSetQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IndependentEdgeSetQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`IndependentEdgeSetQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IndependentVertexSetQ",
                ButtonNote->"paclet:ref/IndependentVertexSetQ"],
               "\"paclet:ref/IndependentVertexSetQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IndependentVertexSetQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"vlist\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the \
vertex list \\!\\(\\*StyleBox[\\\"vlist\\\", \\\"TI\\\"]\\) is an independent \
vertex set in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\), and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IndependentVertexSetQ", 
                    "paclet:ref/IndependentVertexSetQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IndependentVertexSetQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IndependentVertexSetQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IndependentVertexSetQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IndependentVertexSetQ",
                ButtonNote->"paclet:ref/IndependentVertexSetQ"],
               "\"paclet:ref/IndependentVertexSetQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IndependentVertexSetQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"vlist\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the \
vertex list \\!\\(\\*StyleBox[\\\"vlist\\\", \\\"TI\\\"]\\) is an independent \
vertex set in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\), and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IndependentVertexSetQ\", \"[\", \
RowBox[{StyleBox[\"g\", \"TI\"], \",\", StyleBox[\"vlist\", \"TI\"]}], \
\"]\"}]\) yields True if the vertex list \!\(\*StyleBox[\"vlist\", \"TI\"]\) \
is an independent vertex set in the graph \!\(\*StyleBox[\"g\", \"TI\"]\), \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IndependentVertexSetQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IndependentVertexSetQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`IndependentVertexSetQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/InexactNumberQ",
                ButtonNote->"paclet:ref/InexactNumberQ"],
               "\"paclet:ref/InexactNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"InexactNumberQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an inexact real or complex \
number, and returns False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/InexactNumberQ", "paclet:ref/InexactNumberQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/InexactNumberQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/InexactNumberQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`InexactNumberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/InexactNumberQ",
                ButtonNote->"paclet:ref/InexactNumberQ"],
               "\"paclet:ref/InexactNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"InexactNumberQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an inexact real or complex \
number, and returns False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"InexactNumberQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an inexact \
real or complex number, and returns False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/InexactNumberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/InexactNumberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`InexactNumberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IntegerQ",
                ButtonNote->"paclet:ref/IntegerQ"],
               "\"paclet:ref/IntegerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntegerQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an integer, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/IntegerQ", 
                    "paclet:ref/IntegerQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/IntegerQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/IntegerQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IntegerQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IntegerQ",
                ButtonNote->"paclet:ref/IntegerQ"],
               "\"paclet:ref/IntegerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntegerQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an integer, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IntegerQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\
\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an integer, and False \
otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IntegerQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IntegerQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`IntegerQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IntersectingQ",
                ButtonNote->"paclet:ref/IntersectingQ"],
               "\"paclet:ref/IntersectingQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntersectingQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) have at least one element in common, \
and False otherwise.\\n\\!\\(\\*RowBox[{\\\"IntersectionQ\\\", \\\"[\\\", \
\\\"list\\\", \\\"]\\\"}]\\) represents an operator form of IntersectingQ \
that can be applied to another list.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/IntersectingQ",
                     "paclet:ref/IntersectingQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/IntersectingQ.\
html"], None}, "http://reference.wolfram.com/language/ref/IntersectingQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IntersectingQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IntersectingQ",
                ButtonNote->"paclet:ref/IntersectingQ"],
               "\"paclet:ref/IntersectingQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntersectingQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\
\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) have at least one element in common, \
and False otherwise.\\n\\!\\(\\*RowBox[{\\\"IntersectionQ\\\", \\\"[\\\", \
\\\"list\\\", \\\"]\\\"}]\\) represents an operator form of IntersectingQ \
that can be applied to another list.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IntersectingQ\", \"[\", RowBox[{SubscriptBox[StyleBox[\
\"list\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if \!\(\*SubscriptBox[StyleBox[\"list\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"list\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\) have at least one element in common, and False \
otherwise.\n\!\(\*RowBox[{\"IntersectionQ\", \"[\", \"list\", \"]\"}]\) \
represents an operator form of IntersectingQ that can be applied to another \
list.", "Documentation" -> <|
       "Local" -> "paclet:ref/IntersectingQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IntersectingQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {SameTest -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`IntersectingQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IntervalMemberQ",
                ButtonNote->"paclet:ref/IntervalMemberQ"],
               "\"paclet:ref/IntervalMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntervalMemberQ\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"interval\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if the number \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) lies within the specified \
interval, and False otherwise. \\n\\!\\(\\*RowBox[{\\\"IntervalMemberQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) is completely contained within \
\\!\\(\\*SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"IntervalMemberQ\\\", \\\"[\\\", StyleBox[\\\"interval\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of \
IntervalMemberQ that can be applied to a number.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IntervalMemberQ", 
                    "paclet:ref/IntervalMemberQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IntervalMemberQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IntervalMemberQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IntervalMemberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IntervalMemberQ",
                ButtonNote->"paclet:ref/IntervalMemberQ"],
               "\"paclet:ref/IntervalMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IntervalMemberQ\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"interval\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if the number \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) lies within the specified \
interval, and False otherwise. \\n\\!\\(\\*RowBox[{\\\"IntervalMemberQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) is completely contained within \
\\!\\(\\*SubscriptBox[StyleBox[\\\"interval\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"IntervalMemberQ\\\", \\\"[\\\", StyleBox[\\\"interval\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of \
IntervalMemberQ that can be applied to a number.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IntervalMemberQ\", \"[\", \
RowBox[{StyleBox[\"interval\", \"TI\"], \",\", StyleBox[\"x\", \"TI\"]}], \"]\
\"}]\) gives True if the number \!\(\*StyleBox[\"x\", \"TI\"]\) lies within \
the specified interval, and False otherwise. \n\
\!\(\*RowBox[{\"IntervalMemberQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"interval\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"interval\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"]\"}]\) gives True if \!\(\*SubscriptBox[StyleBox[\"interval\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\) is completely contained within \
\!\(\*SubscriptBox[StyleBox[\"interval\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\). \n\!\(\*RowBox[{\"IntervalMemberQ\", \"[\", \
StyleBox[\"interval\", \"TI\"], \"]\"}]\) represents an operator form of \
IntervalMemberQ that can be applied to a number.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IntervalMemberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IntervalMemberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`IntervalMemberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/InverseEllipticNomeQ",
                ButtonNote->"paclet:ref/InverseEllipticNomeQ"],
               "\"paclet:ref/InverseEllipticNomeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"InverseEllipticNomeQ\\\", \\\
\"[\\\", StyleBox[\\\"q\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the parameter \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) corresponding to the nome \
\\!\\(\\*StyleBox[\\\"q\\\", \\\"TI\\\"]\\) in an elliptic function. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/InverseEllipticNomeQ", 
                    "paclet:ref/InverseEllipticNomeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
InverseEllipticNomeQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
InverseEllipticNomeQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected", ",",
                     "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`InverseEllipticNomeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/InverseEllipticNomeQ",
                ButtonNote->"paclet:ref/InverseEllipticNomeQ"],
               "\"paclet:ref/InverseEllipticNomeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"InverseEllipticNomeQ\\\", \\\
\"[\\\", StyleBox[\\\"q\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the parameter \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) corresponding to the nome \
\\!\\(\\*StyleBox[\\\"q\\\", \\\"TI\\\"]\\) in an elliptic function. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"InverseEllipticNomeQ\", \"[\", StyleBox[\"q\", \
\"TI\"], \"]\"}]\) gives the parameter \!\(\*StyleBox[\"m\", \"TI\"]\) \
corresponding to the nome \!\(\*StyleBox[\"q\", \"TI\"]\) in an elliptic \
function. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/InverseEllipticNomeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/InverseEllipticNomeQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, 
      "Attributes" -> {Listable, NumericFunction, Protected, ReadProtected}, 
      "FullName" -> "System`InverseEllipticNomeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IrreduciblePolynomialQ",
                ButtonNote->"paclet:ref/IrreduciblePolynomialQ"],
               "\"paclet:ref/IrreduciblePolynomialQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \
\\\"[\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is an irreducible polynomial \
over the rationals.\\n\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"Modulus\\\", \\\"\[Rule]\\\", StyleBox[\\\"p\\\", \
\\\"TI\\\"]}]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*StyleBox[\\\"poly\\\", \
\\\"TI\\\"]\\) is irreducible modulo a prime \\!\\(\\*StyleBox[\\\"p\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"Extension\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*StyleBox[\
\\\"poly\\\", \\\"TI\\\"]\\) is irreducible over the field extension \
generated by the algebraic numbers \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"Extension\\\", \\\"\[Rule]\\\", \\\"All\\\"}]}], \\\"]\\\"}]\\) \
tests whether \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is absolutely \
irreducible over the complex numbers.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IrreduciblePolynomialQ", 
                    "paclet:ref/IrreduciblePolynomialQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IrreduciblePolynomialQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IrreduciblePolynomialQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Extension", "\[Rule]", "None"}], ",", 
                    RowBox[{"GaussianIntegers", "\[Rule]", "False"}], ",", 
                    RowBox[{"Modulus", "\[Rule]", "0"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IrreduciblePolynomialQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IrreduciblePolynomialQ",
                ButtonNote->"paclet:ref/IrreduciblePolynomialQ"],
               "\"paclet:ref/IrreduciblePolynomialQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \
\\\"[\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is an irreducible polynomial \
over the rationals.\\n\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"Modulus\\\", \\\"\[Rule]\\\", StyleBox[\\\"p\\\", \
\\\"TI\\\"]}]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*StyleBox[\\\"poly\\\", \
\\\"TI\\\"]\\) is irreducible modulo a prime \\!\\(\\*StyleBox[\\\"p\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"Extension\\\", \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*StyleBox[\
\\\"poly\\\", \\\"TI\\\"]\\) is irreducible over the field extension \
generated by the algebraic numbers \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"IrreduciblePolynomialQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"Extension\\\", \\\"\[Rule]\\\", \\\"All\\\"}]}], \\\"]\\\"}]\\) \
tests whether \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is absolutely \
irreducible over the complex numbers.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IrreduciblePolynomialQ\", \"[\", StyleBox[\"poly\", \
\"TI\"], \"]\"}]\) tests whether \!\(\*StyleBox[\"poly\", \"TI\"]\) is an \
irreducible polynomial over the rationals.\n\
\!\(\*RowBox[{\"IrreduciblePolynomialQ\", \"[\", RowBox[{StyleBox[\"poly\", \
\"TI\"], \",\", RowBox[{\"Modulus\", \"\[Rule]\", StyleBox[\"p\", \
\"TI\"]}]}], \"]\"}]\) tests whether \!\(\*StyleBox[\"poly\", \"TI\"]\) is \
irreducible modulo a prime \!\(\*StyleBox[\"p\", \"TI\"]\).\n\
\!\(\*RowBox[{\"IrreduciblePolynomialQ\", \"[\", RowBox[{StyleBox[\"poly\", \
\"TI\"], \",\", RowBox[{\"Extension\", \"\[Rule]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}]}], \"]\"}]\) tests whether \
\!\(\*StyleBox[\"poly\", \"TI\"]\) is irreducible over the field extension \
generated by the algebraic numbers \!\(\*SubscriptBox[StyleBox[\"a\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\).\n\
\!\(\*RowBox[{\"IrreduciblePolynomialQ\", \"[\", RowBox[{StyleBox[\"poly\", \
\"TI\"], \",\", RowBox[{\"Extension\", \"\[Rule]\", \"All\"}]}], \"]\"}]\) \
tests whether \!\(\*StyleBox[\"poly\", \"TI\"]\) is absolutely irreducible \
over the complex numbers.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IrreduciblePolynomialQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IrreduciblePolynomialQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       Extension -> None, GaussianIntegers -> False, Modulus -> 0}, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`IrreduciblePolynomialQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicGraphQ", 
                    "paclet:ref/IsomorphicGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html"], None}, 
                    
                    "http://reference.wolfram.com/language/ref/\
IsomorphicGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicGraphQ",
                ButtonNote->"paclet:ref/IsomorphicGraphQ"],
               "\"paclet:ref/IsomorphicGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicGraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graphs \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\) are isomorphic, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicGraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graphs \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\) are isomorphic, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`IsomorphicGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IsomorphicSubgraphQ", 
                    "paclet:ref/IsomorphicSubgraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IsomorphicSubgraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IsomorphicSubgraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/IsomorphicSubgraphQ",
                ButtonNote->"paclet:ref/IsomorphicSubgraphQ"],
               "\"paclet:ref/IsomorphicSubgraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"IsomorphicSubgraphQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"g\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True \
if the graph \\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]]\\) is isomorphic to a subgraph of the graph \
\\!\\(\\*SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"IsomorphicSubgraphQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) yields True if the graph \!\(\*SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) is isomorphic to a subgraph of the graph \
\!\(\*SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"2\", \"TR\"]]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/IsomorphicSubgraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/IsomorphicSubgraphQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`IsomorphicSubgraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KEdgeConnectedGraphQ",
                ButtonNote->"paclet:ref/KEdgeConnectedGraphQ"],
               "\"paclet:ref/KEdgeConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KEdgeConnectedGraphQ\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the graph \\!\\(\\*StyleBox[\
\\\"g\\\", \\\"TI\\\"]\\) is \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-edge-connected and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/KEdgeConnectedGraphQ", 
                    "paclet:ref/KEdgeConnectedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
KEdgeConnectedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
KEdgeConnectedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`KEdgeConnectedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KEdgeConnectedGraphQ",
                ButtonNote->"paclet:ref/KEdgeConnectedGraphQ"],
               "\"paclet:ref/KEdgeConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KEdgeConnectedGraphQ\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the graph \\!\\(\\*StyleBox[\
\\\"g\\\", \\\"TI\\\"]\\) is \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-edge-connected and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"KEdgeConnectedGraphQ\", \"[\", RowBox[{StyleBox[\"g\", \
\"TI\"], \",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) yields True if the graph \
\!\(\*StyleBox[\"g\", \"TI\"]\) is \!\(\*StyleBox[\"k\", \
\"TI\"]\)-edge-connected and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/KEdgeConnectedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/KEdgeConnectedGraphQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`KEdgeConnectedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KeyExistsQ",
                ButtonNote->"paclet:ref/KeyExistsQ"],
               "\"paclet:ref/KeyExistsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KeyExistsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"key\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the specified \
\\!\\(\\*StyleBox[\\\"key\\\", \\\"TI\\\"]\\) exists in the association \
\\!\\(\\*StyleBox[\\\"assoc\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"KeyExistsQ\\\", \\\"[\\\", StyleBox[\\\"key\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of KeyExistsQ \
that can be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/KeyExistsQ", 
                    "paclet:ref/KeyExistsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/KeyExistsQ.\
html"], None}, "http://reference.wolfram.com/language/ref/KeyExistsQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`KeyExistsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KeyExistsQ",
                ButtonNote->"paclet:ref/KeyExistsQ"],
               "\"paclet:ref/KeyExistsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KeyExistsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"key\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the specified \
\\!\\(\\*StyleBox[\\\"key\\\", \\\"TI\\\"]\\) exists in the association \
\\!\\(\\*StyleBox[\\\"assoc\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"KeyExistsQ\\\", \\\"[\\\", StyleBox[\\\"key\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of KeyExistsQ \
that can be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"KeyExistsQ\", \"[\", RowBox[{StyleBox[\"assoc\", \
\"TI\"], \",\", StyleBox[\"key\", \"TI\"]}], \"]\"}]\) returns True if the \
specified \!\(\*StyleBox[\"key\", \"TI\"]\) exists in the association \
\!\(\*StyleBox[\"assoc\", \"TI\"]\), and False otherwise.\n\
\!\(\*RowBox[{\"KeyExistsQ\", \"[\", StyleBox[\"key\", \"TI\"], \"]\"}]\) \
represents an operator form of KeyExistsQ that can be applied to an \
expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/KeyExistsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/KeyExistsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`KeyExistsQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KeyFreeQ",
                ButtonNote->"paclet:ref/KeyFreeQ"],
               "\"paclet:ref/KeyFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KeyFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if no key in \
the association \\!\\(\\*StyleBox[\\\"assoc\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and yields False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"KeyFreeQ\\\", \\\"[\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of KeyFreeQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/KeyFreeQ", 
                    "paclet:ref/KeyFreeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/KeyFreeQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/KeyFreeQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`KeyFreeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KeyFreeQ",
                ButtonNote->"paclet:ref/KeyFreeQ"],
               "\"paclet:ref/KeyFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KeyFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if no key in \
the association \\!\\(\\*StyleBox[\\\"assoc\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and yields False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"KeyFreeQ\\\", \\\"[\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of KeyFreeQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"KeyFreeQ\", \"[\", RowBox[{StyleBox[\"assoc\", \
\"TI\"], \",\", StyleBox[\"form\", \"TI\"]}], \"]\"}]\) yields True if no key \
in the association \!\(\*StyleBox[\"assoc\", \"TI\"]\) matches \
\!\(\*StyleBox[\"form\", \"TI\"]\), and yields False otherwise.\n\
\!\(\*RowBox[{\"KeyFreeQ\", \"[\", StyleBox[\"form\", \"TI\"], \"]\"}]\) \
represents an operator form of KeyFreeQ that can be applied to an \
expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/KeyFreeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/KeyFreeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`KeyFreeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KeyMemberQ",
                ButtonNote->"paclet:ref/KeyMemberQ"],
               "\"paclet:ref/KeyMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KeyMemberQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if a key in \
the association \\!\\(\\*StyleBox[\\\"assoc\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and False otherwise.\\n\\!\\(\
\\*RowBox[{\\\"KeyMemberQ\\\", \\\"[\\\", StyleBox[\\\"form\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\) represents an operator form of KeyMemberQ that can be applied \
to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/KeyMemberQ", 
                    "paclet:ref/KeyMemberQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/KeyMemberQ.\
html"], None}, "http://reference.wolfram.com/language/ref/KeyMemberQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`KeyMemberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KeyMemberQ",
                ButtonNote->"paclet:ref/KeyMemberQ"],
               "\"paclet:ref/KeyMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KeyMemberQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"assoc\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if a key in \
the association \\!\\(\\*StyleBox[\\\"assoc\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and False otherwise.\\n\\!\\(\
\\*RowBox[{\\\"KeyMemberQ\\\", \\\"[\\\", StyleBox[\\\"form\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\) represents an operator form of KeyMemberQ that can be applied \
to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"KeyMemberQ\", \"[\", RowBox[{StyleBox[\"assoc\", \
\"TI\"], \",\", StyleBox[\"form\", \"TI\"]}], \"]\"}]\) yields True if a key \
in the association \!\(\*StyleBox[\"assoc\", \"TI\"]\) matches \
\!\(\*StyleBox[\"form\", \"TI\"]\), and False otherwise.\n\
\!\(\*RowBox[{\"KeyMemberQ\", \"[\", StyleBox[\"form\", \"TI\"], \"]\"}]\) \
represents an operator form of KeyMemberQ that can be applied to an \
expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/KeyMemberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/KeyMemberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`KeyMemberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KnownUnitQ",
                ButtonNote->"paclet:ref/KnownUnitQ"],
               "\"paclet:ref/KnownUnitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KnownUnitQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a canonical unit, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/KnownUnitQ", 
                    "paclet:ref/KnownUnitQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/KnownUnitQ.\
html"], None}, "http://reference.wolfram.com/language/ref/KnownUnitQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`KnownUnitQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KnownUnitQ",
                ButtonNote->"paclet:ref/KnownUnitQ"],
               "\"paclet:ref/KnownUnitQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KnownUnitQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a canonical unit, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"KnownUnitQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a canonical \
unit, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/KnownUnitQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/KnownUnitQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
      "System`KnownUnitQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KVertexConnectedGraphQ",
                ButtonNote->"paclet:ref/KVertexConnectedGraphQ"],
               "\"paclet:ref/KVertexConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KVertexConnectedGraphQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-vertex-connected and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/KVertexConnectedGraphQ", 
                    "paclet:ref/KVertexConnectedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
KVertexConnectedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
KVertexConnectedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`KVertexConnectedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/KVertexConnectedGraphQ",
                ButtonNote->"paclet:ref/KVertexConnectedGraphQ"],
               "\"paclet:ref/KVertexConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"KVertexConnectedGraphQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)-vertex-connected and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"KVertexConnectedGraphQ\", \"[\", \
RowBox[{StyleBox[\"g\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) \
yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is \
\!\(\*StyleBox[\"k\", \"TI\"]\)-vertex-connected and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/KVertexConnectedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/KVertexConnectedGraphQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`KVertexConnectedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LeapYearQ",
                ButtonNote->"paclet:ref/LeapYearQ"],
               "\"paclet:ref/LeapYearQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LeapYearQ\\\", \\\"[\\\", \
StyleBox[\\\"date\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the year \
corresponding to \\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\) is a leap \
year.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/LeapYearQ", 
                    "paclet:ref/LeapYearQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LeapYearQ.\
html"], None}, "http://reference.wolfram.com/language/ref/LeapYearQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LeapYearQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LeapYearQ",
                ButtonNote->"paclet:ref/LeapYearQ"],
               "\"paclet:ref/LeapYearQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LeapYearQ\\\", \\\"[\\\", \
StyleBox[\\\"date\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the year \
corresponding to \\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\) is a leap \
year.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LeapYearQ\", \"[\", StyleBox[\"date\", \"TI\"], \
\"]\"}]\) returns True if the year corresponding to \!\(\*StyleBox[\"date\", \
\"TI\"]\) is a leap year.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LeapYearQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/LeapYearQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {CalendarType -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`LeapYearQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LegendreQ",
                ButtonNote->"paclet:ref/LegendreQ"],
               "\"paclet:ref/LegendreQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LegendreQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the Legendre function of the second kind \
\\!\\(\\*RowBox[{SubscriptBox[\\\"Q\\\", \\\"n\\\"], \\\"(\\\", \\\"z\\\", \\\
\")\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"LegendreQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the associated Legendre function of the second kind \
\\!\\(\\*RowBox[{SubsuperscriptBox[\\\"Q\\\", \\\"n\\\", \\\"m\\\"], \
\\\"(\\\", \\\"z\\\", \\\")\\\"}]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/LegendreQ", 
                    "paclet:ref/LegendreQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LegendreQ.\
html"], None}, "http://reference.wolfram.com/language/ref/LegendreQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected"}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LegendreQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LegendreQ",
                ButtonNote->"paclet:ref/LegendreQ"],
               "\"paclet:ref/LegendreQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LegendreQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the Legendre function of the second kind \
\\!\\(\\*RowBox[{SubscriptBox[\\\"Q\\\", \\\"n\\\"], \\\"(\\\", \\\"z\\\", \\\
\")\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"LegendreQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the associated Legendre function of the second kind \
\\!\\(\\*RowBox[{SubsuperscriptBox[\\\"Q\\\", \\\"n\\\", \\\"m\\\"], \
\\\"(\\\", \\\"z\\\", \\\")\\\"}]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LegendreQ\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \
\",\", StyleBox[\"z\", \"TI\"]}], \"]\"}]\) gives the Legendre function of \
the second kind \!\(\*RowBox[{SubscriptBox[\"Q\", \"n\"], \"(\", \"z\", \
\")\"}]\). \n\!\(\*RowBox[{\"LegendreQ\", \"[\", RowBox[{StyleBox[\"n\", \"TI\
\"], \",\", StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"z\", \"TI\"]}], \
\"]\"}]\) gives the associated Legendre function of the second kind \
\!\(\*RowBox[{SubsuperscriptBox[\"Q\", \"n\", \"m\"], \"(\", \"z\", \
\")\"}]\). ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LegendreQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/LegendreQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, NumericFunction, Protected}, "FullName" -> 
      "System`LegendreQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LetterQ",
                ButtonNote->"paclet:ref/LetterQ"],
               "\"paclet:ref/LetterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LetterQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are letters, and yields False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/LetterQ", 
                    "paclet:ref/LetterQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LetterQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/LetterQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LetterQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LetterQ",
                ButtonNote->"paclet:ref/LetterQ"],
               "\"paclet:ref/LetterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LetterQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are letters, and yields False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LetterQ\", \"[\", StyleBox[\"string\", \"TI\"], \
\"]\"}]\) yields True if all the characters in the string are letters, and \
yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LetterQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/LetterQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`LetterQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`LinkConnectedQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LinkConnectedQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/LinkConnectedQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`LinkConnectedQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "System`LinkConnectedQ", 
      "Documentation" -> <|
       "Web" -> 
        "http://reference.wolfram.com/language/ref/LinkConnectedQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`LinkConnectedQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LinkReadyQ",
                ButtonNote->"paclet:ref/LinkReadyQ"],
               "\"paclet:ref/LinkReadyQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LinkReadyQ\\\", \\\"[\\\", \
StyleBox[\\\"link\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether there is an \
expression ready to read from the specified \\!\\(\\*StyleBox[\\\"WSTP\\\", \
\\\"RebrandingTerm\\\", \\\"ReplacedText\\\" -> StyleBox[\\\"WolframLink\\\", \
FontSlant -> \\\"Italic\\\"]]\\) connection. \
\\n\\!\\(\\*RowBox[{\\\"LinkReadyQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"link\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) waits for up to \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) seconds to see if an expression becomes ready to \
read.\\n\\!\\(\\*RowBox[{\\\"LinkReadyQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"link\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"link\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"t\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) tests all the \\!\\(\\*SubscriptBox[StyleBox[\\\
\"link\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) in parallel, \
returning as soon as any of them are ready to read from.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/LinkReadyQ", 
                    "paclet:ref/LinkReadyQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LinkReadyQ.\
html"], None}, "http://reference.wolfram.com/language/ref/LinkReadyQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LinkReadyQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LinkReadyQ",
                ButtonNote->"paclet:ref/LinkReadyQ"],
               "\"paclet:ref/LinkReadyQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LinkReadyQ\\\", \\\"[\\\", \
StyleBox[\\\"link\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether there is an \
expression ready to read from the specified \\!\\(\\*StyleBox[\\\"WSTP\\\", \
\\\"RebrandingTerm\\\", \\\"ReplacedText\\\" -> StyleBox[\\\"WolframLink\\\", \
FontSlant -> \\\"Italic\\\"]]\\) connection. \
\\n\\!\\(\\*RowBox[{\\\"LinkReadyQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"link\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) waits for up to \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) seconds to see if an expression becomes ready to \
read.\\n\\!\\(\\*RowBox[{\\\"LinkReadyQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\
\\\", RowBox[{SubscriptBox[StyleBox[\\\"link\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"link\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"t\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) tests all the \\!\\(\\*SubscriptBox[StyleBox[\\\
\"link\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) in parallel, \
returning as soon as any of them are ready to read from.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LinkReadyQ\", \"[\", StyleBox[\"link\", \"TI\"], \
\"]\"}]\) tests whether there is an expression ready to read from the \
specified \!\(\*StyleBox[\"WSTP\", \"RebrandingTerm\", \"ReplacedText\" -> \
StyleBox[\"WolframLink\", FontSlant -> \"Italic\"]]\) connection. \n\
\!\(\*RowBox[{\"LinkReadyQ\", \"[\", RowBox[{StyleBox[\"link\", \"TI\"], \
\",\", StyleBox[\"t\", \"TI\"]}], \"]\"}]\) waits for up to \
\!\(\*StyleBox[\"t\", \"TI\"]\) seconds to see if an expression becomes ready \
to read.\n\!\(\*RowBox[{\"LinkReadyQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"link\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"link\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"t\", \"TI\
\"]}], \"]\"}]\) tests all the \!\(\*SubscriptBox[StyleBox[\"link\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\) in parallel, returning as soon as any of them are \
ready to read from.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LinkReadyQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/LinkReadyQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`LinkReadyQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ListQ",
                ButtonNote->"paclet:ref/ListQ"],
               "\"paclet:ref/ListQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the head of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is List, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ListQ", 
                    "paclet:ref/ListQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ListQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/ListQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ListQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ListQ",
                ButtonNote->"paclet:ref/ListQ"],
               "\"paclet:ref/ListQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the head of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is List, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ListQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives True if the head of \!\(\*StyleBox[\"expr\", \"TI\"]\) is List, and \
False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ListQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ListQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`ListQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LoopFreeGraphQ",
                ButtonNote->"paclet:ref/LoopFreeGraphQ"],
               "\"paclet:ref/LoopFreeGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LoopFreeGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) has no self-loops, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/LoopFreeGraphQ", "paclet:ref/LoopFreeGraphQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LoopFreeGraphQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/LoopFreeGraphQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LoopFreeGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LoopFreeGraphQ",
                ButtonNote->"paclet:ref/LoopFreeGraphQ"],
               "\"paclet:ref/LoopFreeGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LoopFreeGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) has no self-loops, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LoopFreeGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) has no \
self-loops, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LoopFreeGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/LoopFreeGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`LoopFreeGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LowerCaseQ",
                ButtonNote->"paclet:ref/LowerCaseQ"],
               "\"paclet:ref/LowerCaseQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LowerCaseQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are lowercase letters, and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/LowerCaseQ", 
                    "paclet:ref/LowerCaseQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LowerCaseQ.\
html"], None}, "http://reference.wolfram.com/language/ref/LowerCaseQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LowerCaseQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LowerCaseQ",
                ButtonNote->"paclet:ref/LowerCaseQ"],
               "\"paclet:ref/LowerCaseQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LowerCaseQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are lowercase letters, and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LowerCaseQ\", \"[\", StyleBox[\"string\", \"TI\"], \"]\
\"}]\) yields True if all the characters in the string are lowercase letters, \
and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LowerCaseQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/LowerCaseQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`LowerCaseQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LowerTriangularMatrixQ",
                ButtonNote->"paclet:ref/LowerTriangularMatrixQ"],
               "\"paclet:ref/LowerTriangularMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LowerTriangularMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is lower triangular, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"LowerTriangularMatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) is lower triangular starting down from the \
\\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) \
diagonal, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/LowerTriangularMatrixQ", 
                    "paclet:ref/LowerTriangularMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
LowerTriangularMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
LowerTriangularMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ZeroTest", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LowerTriangularMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LowerTriangularMatrixQ",
                ButtonNote->"paclet:ref/LowerTriangularMatrixQ"],
               "\"paclet:ref/LowerTriangularMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LowerTriangularMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is lower triangular, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"LowerTriangularMatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) is lower triangular starting down from the \
\\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) \
diagonal, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LowerTriangularMatrixQ\", \"[\", StyleBox[\"m\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is lower \
triangular, and False otherwise.\n\!\(\*RowBox[{\"LowerTriangularMatrixQ\", \
\"[\", RowBox[{StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"]}], \"]\
\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is lower triangular \
starting down from the \!\(\*StyleBox[\"k\", \"TI\"]\)\!\(\*SuperscriptBox[\"\
\[Null]\", \"th\"]\) diagonal, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LowerTriangularMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/LowerTriangularMatrixQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Tolerance -> Automatic, ZeroTest -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> 
      "System`LowerTriangularMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MachineNumberQ",
                ButtonNote->"paclet:ref/MachineNumberQ"],
               "\"paclet:ref/MachineNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MachineNumberQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a machine\[Hyphen]precision \
real or complex number, and returns False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/MachineNumberQ", "paclet:ref/MachineNumberQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MachineNumberQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/MachineNumberQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MachineNumberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MachineNumberQ",
                ButtonNote->"paclet:ref/MachineNumberQ"],
               "\"paclet:ref/MachineNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MachineNumberQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a machine\[Hyphen]precision \
real or complex number, and returns False otherwise. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MachineNumberQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a machine\
\[Hyphen]precision real or complex number, and returns False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MachineNumberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MachineNumberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`MachineNumberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ManagedLibraryExpressionQ",
                ButtonNote->"paclet:ref/ManagedLibraryExpressionQ"],
               "\"paclet:ref/ManagedLibraryExpressionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ManagedLibraryExpressionQ\\\"\
, \\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True \
if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a managed library \
expression and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"ManagedLibraryExpressionQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"mname\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) only returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is associated with the \
registered manager having name \\!\\(\\*StyleBox[\\\"mname\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ManagedLibraryExpressionQ", 
                    "paclet:ref/ManagedLibraryExpressionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ManagedLibraryExpressionQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ManagedLibraryExpressionQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ManagedLibraryExpressionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ManagedLibraryExpressionQ",
                ButtonNote->"paclet:ref/ManagedLibraryExpressionQ"],
               "\"paclet:ref/ManagedLibraryExpressionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ManagedLibraryExpressionQ\\\"\
, \\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True \
if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a managed library \
expression and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"ManagedLibraryExpressionQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"mname\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) only returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is associated with the \
registered manager having name \\!\\(\\*StyleBox[\\\"mname\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ManagedLibraryExpressionQ\", \"[\", StyleBox[\"expr\", \
\"TI\"], \"]\"}]\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a \
managed library expression and False otherwise.\n\
\!\(\*RowBox[{\"ManagedLibraryExpressionQ\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"mname\", \"TI\"]}], \"]\
\"}]\) only returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is associated \
with the registered manager having name \!\(\*StyleBox[\"mname\", \"TI\"]\).",
       "Documentation" -> <|
       "Local" -> "paclet:ref/ManagedLibraryExpressionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ManagedLibraryExpressionQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`ManagedLibraryExpressionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MandelbrotSetMemberQ",
                ButtonNote->"paclet:ref/MandelbrotSetMemberQ"],
               "\"paclet:ref/MandelbrotSetMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MandelbrotSetMemberQ\\\", \\\
\"[\\\", StyleBox[\\\"z\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"z\\\", \\\"TI\\\"]\\) is in the Mandelbrot set, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/MandelbrotSetMemberQ", 
                    "paclet:ref/MandelbrotSetMemberQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
MandelbrotSetMemberQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
MandelbrotSetMemberQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MandelbrotSetMemberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MandelbrotSetMemberQ",
                ButtonNote->"paclet:ref/MandelbrotSetMemberQ"],
               "\"paclet:ref/MandelbrotSetMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MandelbrotSetMemberQ\\\", \\\
\"[\\\", StyleBox[\\\"z\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"z\\\", \\\"TI\\\"]\\) is in the Mandelbrot set, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MandelbrotSetMemberQ\", \"[\", StyleBox[\"z\", \
\"TI\"], \"]\"}]\) returns True if \!\(\*StyleBox[\"z\", \"TI\"]\) is in the \
Mandelbrot set, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MandelbrotSetMemberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MandelbrotSetMemberQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`MandelbrotSetMemberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MarcumQ",
                ButtonNote->"paclet:ref/MarcumQ"],
               "\"paclet:ref/MarcumQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MarcumQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives Marcum's Q function \\!\\(\\*RowBox[{SubscriptBox[\\\"Q\\\", \
\\\"m\\\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\"}], \\\")\\\"}]\
\\).\\n\\!\\(\\*RowBox[{\\\"MarcumQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives \
Marcum's Q function \\!\\(\\*RowBox[{RowBox[{SubscriptBox[\\\"Q\\\", \
\\\"m\\\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\",\\\", SubscriptBox[\\\"b\\\", \
\\\"0\\\"]}], \\\")\\\"}], \\\"-\\\", RowBox[{SubscriptBox[\\\"Q\\\", \\\"m\\\
\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\",\\\", SubscriptBox[\\\"b\\\", \\\"1\\\
\"]}], \\\")\\\"}]}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MarcumQ", 
                    "paclet:ref/MarcumQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MarcumQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/MarcumQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected", ",",
                     "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MarcumQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MarcumQ",
                ButtonNote->"paclet:ref/MarcumQ"],
               "\"paclet:ref/MarcumQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MarcumQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"b\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives Marcum's Q function \\!\\(\\*RowBox[{SubscriptBox[\\\"Q\\\", \
\\\"m\\\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\",\\\", \\\"b\\\"}], \\\")\\\"}]\
\\).\\n\\!\\(\\*RowBox[{\\\"MarcumQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"a\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives \
Marcum's Q function \\!\\(\\*RowBox[{RowBox[{SubscriptBox[\\\"Q\\\", \
\\\"m\\\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\",\\\", SubscriptBox[\\\"b\\\", \
\\\"0\\\"]}], \\\")\\\"}], \\\"-\\\", RowBox[{SubscriptBox[\\\"Q\\\", \\\"m\\\
\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\",\\\", SubscriptBox[\\\"b\\\", \\\"1\\\
\"]}], \\\")\\\"}]}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MarcumQ\", \"[\", RowBox[{StyleBox[\"m\", \"TI\"], \",\
\", StyleBox[\"a\", \"TI\"], \",\", StyleBox[\"b\", \"TI\"]}], \"]\"}]\) \
gives Marcum's Q function \!\(\*RowBox[{SubscriptBox[\"Q\", \"m\"], \"(\", \
RowBox[{\"a\", \",\", \"b\"}], \")\"}]\).\n\!\(\*RowBox[{\"MarcumQ\", \"[\", \
RowBox[{StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"a\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"0\", \"TR\"]], \",\", \
SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \"]\"}]\) \
gives Marcum's Q function \!\(\*RowBox[{RowBox[{SubscriptBox[\"Q\", \"m\"], \
\"(\", RowBox[{\"a\", \",\", SubscriptBox[\"b\", \"0\"]}], \")\"}], \"-\", \
RowBox[{SubscriptBox[\"Q\", \"m\"], \"(\", RowBox[{\"a\", \",\", \
SubscriptBox[\"b\", \"1\"]}], \")\"}]}]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MarcumQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MarcumQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, NumericFunction, Protected, ReadProtected}, 
      "FullName" -> "System`MarcumQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/MatchLocalNameQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/MatchLocalNameQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/MatchLocalNameQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"MatchLocalNameQ is an internal symbol.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
MatchLocalNameQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
MatchLocalNameQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MatchLocalNameQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/MatchLocalNameQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/MatchLocalNameQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/MatchLocalNameQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"MatchLocalNameQ is an internal symbol.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "MatchLocalNameQ is an internal symbol.", 
      "Documentation" -> <|
       "Web" -> 
        "http://reference.wolfram.com/language/ref/MatchLocalNameQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {HoldAll, Protected}, "FullName" -> 
      "System`MatchLocalNameQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MatchQ",
                ButtonNote->"paclet:ref/MatchQ"],
               "\"paclet:ref/MatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the pattern \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), and returns False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"MatchQ\\\", \\\"[\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of MatchQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MatchQ", 
                    "paclet:ref/MatchQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MatchQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/MatchQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MatchQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MatchQ",
                ButtonNote->"paclet:ref/MatchQ"],
               "\"paclet:ref/MatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the pattern \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), and returns False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"MatchQ\\\", \\\"[\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of MatchQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MatchQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"form\", \"TI\"]}], \"]\"}]\) returns True if the pattern \!\
\(\*StyleBox[\"form\", \"TI\"]\) matches \!\(\*StyleBox[\"expr\", \"TI\"]\), \
and returns False otherwise.\n\!\(\*RowBox[{\"MatchQ\", \"[\", \
StyleBox[\"form\", \"TI\"], \"]\"}]\) represents an operator form of MatchQ \
that can be applied to an expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MatchQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MatchQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`MatchQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MatrixQ",
                ButtonNote->"paclet:ref/MatrixQ"],
               "\"paclet:ref/MatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MatrixQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a list of lists or a \
two-dimensional SparseArray object that can represent a matrix, and gives \
False otherwise. \\n\\!\\(\\*RowBox[{\\\"MatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True only if \\!\\(\\*StyleBox[\\\"test\\\
\", \\\"TI\\\"]\\) yields True when applied to each of the matrix elements in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MatrixQ", 
                    "paclet:ref/MatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MatrixQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/MatrixQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MatrixQ",
                ButtonNote->"paclet:ref/MatrixQ"],
               "\"paclet:ref/MatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MatrixQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a list of lists or a \
two-dimensional SparseArray object that can represent a matrix, and gives \
False otherwise. \\n\\!\\(\\*RowBox[{\\\"MatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True only if \\!\\(\\*StyleBox[\\\"test\\\
\", \\\"TI\\\"]\\) yields True when applied to each of the matrix elements in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MatrixQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a list of lists \
or a two-dimensional SparseArray object that can represent a matrix, and \
gives False otherwise. \n\!\(\*RowBox[{\"MatrixQ\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"]}], \
\"]\"}]\) gives True only if \!\(\*StyleBox[\"test\", \"TI\"]\) yields True \
when applied to each of the matrix elements in \!\(\*StyleBox[\"expr\", \
\"TI\"]\). ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`MatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MemberQ",
                ButtonNote->"paclet:ref/MemberQ"],
               "\"paclet:ref/MemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MemberQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if an element of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"MemberQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) tests all parts of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\
\\) specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"MemberQ\\\", \\\"[\\\", StyleBox[\\\"form\\\", \\\"TI\
\\\"], \\\"]\\\"}]\\) represents an operator form of MemberQ that can be \
applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MemberQ", 
                    "paclet:ref/MemberQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MemberQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/MemberQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Heads", "\[Rule]", "False"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MemberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MemberQ",
                ButtonNote->"paclet:ref/MemberQ"],
               "\"paclet:ref/MemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MemberQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if an element of \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) matches \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\), and False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"MemberQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) tests all parts of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\
\\) specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"MemberQ\\\", \\\"[\\\", StyleBox[\\\"form\\\", \\\"TI\
\\\"], \\\"]\\\"}]\\) represents an operator form of MemberQ that can be \
applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MemberQ\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \
\",\", StyleBox[\"form\", \"TI\"]}], \"]\"}]\) returns True if an element of \
\!\(\*StyleBox[\"list\", \"TI\"]\) matches \!\(\*StyleBox[\"form\", \
\"TI\"]\), and False otherwise. \n\!\(\*RowBox[{\"MemberQ\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"form\", \"TI\"], \",\", \
StyleBox[\"levelspec\", \"TI\"]}], \"]\"}]\) tests all parts of \
\!\(\*StyleBox[\"list\", \"TI\"]\) specified by \!\(\*StyleBox[\"levelspec\", \
\"TI\"]\). \n\!\(\*RowBox[{\"MemberQ\", \"[\", StyleBox[\"form\", \"TI\"], \
\"]\"}]\) represents an operator form of MemberQ that can be applied to an \
expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MemberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MemberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {Heads -> False}, 
      "Attributes" -> {Protected}, "FullName" -> "System`MemberQ"|>, True]], 
   ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MersennePrimeExponentQ",
                ButtonNote->"paclet:ref/MersennePrimeExponentQ"],
               "\"paclet:ref/MersennePrimeExponentQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MersennePrimeExponentQ\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a Mersenne prime exponent, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/MersennePrimeExponentQ", 
                    "paclet:ref/MersennePrimeExponentQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
MersennePrimeExponentQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
MersennePrimeExponentQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MersennePrimeExponentQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MersennePrimeExponentQ",
                ButtonNote->"paclet:ref/MersennePrimeExponentQ"],
               "\"paclet:ref/MersennePrimeExponentQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MersennePrimeExponentQ\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a Mersenne prime exponent, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MersennePrimeExponentQ\", \"[\", StyleBox[\"n\", \
\"TI\"], \"]\"}]\) returns True if \!\(\*StyleBox[\"n\", \"TI\"]\) is a \
Mersenne prime exponent, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MersennePrimeExponentQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MersennePrimeExponentQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`MersennePrimeExponentQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MeshRegionQ",
                ButtonNote->"paclet:ref/MeshRegionQ"],
               "\"paclet:ref/MeshRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MeshRegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the region \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid MeshRegion object \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MeshRegionQ", 
                    "paclet:ref/MeshRegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MeshRegionQ.\
html"], None}, "http://reference.wolfram.com/language/ref/MeshRegionQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MeshRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MeshRegionQ",
                ButtonNote->"paclet:ref/MeshRegionQ"],
               "\"paclet:ref/MeshRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MeshRegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the region \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid MeshRegion object \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MeshRegionQ\", \"[\", StyleBox[\"reg\", \"TI\"], \
\"]\"}]\) yields True if the region \!\(\*StyleBox[\"reg\", \"TI\"]\) is a \
valid MeshRegion object and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MeshRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MeshRegionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`MeshRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MissingQ",
                ButtonNote->"paclet:ref/MissingQ"],
               "\"paclet:ref/MissingQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MissingQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has head Missing.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MissingQ", 
                    "paclet:ref/MissingQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MissingQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/MissingQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MissingQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MissingQ",
                ButtonNote->"paclet:ref/MissingQ"],
               "\"paclet:ref/MissingQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MissingQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has head Missing.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MissingQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\
\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) has head Missing.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MissingQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MissingQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`MissingQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MixedGraphQ",
                ButtonNote->"paclet:ref/MixedGraphQ"],
               "\"paclet:ref/MixedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MixedGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a mixed graph and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MixedGraphQ", 
                    "paclet:ref/MixedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MixedGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/MixedGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MixedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MixedGraphQ",
                ButtonNote->"paclet:ref/MixedGraphQ"],
               "\"paclet:ref/MixedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MixedGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a mixed graph and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MixedGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \"]\"}]\
\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a mixed graph \
and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MixedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MixedGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`MixedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeContainsQ",
                ButtonNote->"paclet:ref/MoleculeContainsQ"],
               "\"paclet:ref/MoleculeContainsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeContainsQ\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"molecule\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\) is a substructure of \
\\!\\(\\*StyleBox[\\\"molecule\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"MoleculeContainsQ\\\", \\\"[\\\", StyleBox[\
\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of \
MoleculeContainsQ that can be applied to a molecule.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/MoleculeContainsQ", 
                    "paclet:ref/MoleculeContainsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
MoleculeContainsQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
MoleculeContainsQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MoleculeContainsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeContainsQ",
                ButtonNote->"paclet:ref/MoleculeContainsQ"],
               "\"paclet:ref/MoleculeContainsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeContainsQ\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"molecule\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\) is a substructure of \
\\!\\(\\*StyleBox[\\\"molecule\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"MoleculeContainsQ\\\", \\\"[\\\", StyleBox[\
\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of \
MoleculeContainsQ that can be applied to a molecule.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MoleculeContainsQ\", \"[\", \
RowBox[{StyleBox[\"molecule\", \"TI\"], \",\", StyleBox[\"patt\", \"TI\"]}], \
\"]\"}]\) returns True if \!\(\*StyleBox[\"patt\", \"TI\"]\) is a \
substructure of \!\(\*StyleBox[\"molecule\", \"TI\"]\), and False otherwise.\n\
\!\(\*RowBox[{\"MoleculeContainsQ\", \"[\", StyleBox[\"patt\", \"TI\"], \
\"]\"}]\) represents an operator form of MoleculeContainsQ that can be \
applied to a molecule.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MoleculeContainsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MoleculeContainsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`MoleculeContainsQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeEquivalentQ",
                ButtonNote->"paclet:ref/MoleculeEquivalentQ"],
               "\"paclet:ref/MoleculeEquivalentQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeEquivalentQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) represent equivalent molecules and gives \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/MoleculeEquivalentQ", 
                    "paclet:ref/MoleculeEquivalentQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
MoleculeEquivalentQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
MoleculeEquivalentQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MoleculeEquivalentQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeEquivalentQ",
                ButtonNote->"paclet:ref/MoleculeEquivalentQ"],
               "\"paclet:ref/MoleculeEquivalentQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeEquivalentQ\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\) and \\!\\(\\*SubscriptBox[StyleBox[\\\"mol\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\) represent equivalent molecules and gives \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MoleculeEquivalentQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"mol\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\
\", SubscriptBox[StyleBox[\"mol\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) gives True if \!\(\*SubscriptBox[StyleBox[\"mol\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\) and \!\(\*SubscriptBox[StyleBox[\"mol\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\) represent equivalent molecules and gives False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MoleculeEquivalentQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MoleculeEquivalentQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`MoleculeEquivalentQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeFreeQ",
                ButtonNote->"paclet:ref/MoleculeFreeQ"],
               "\"paclet:ref/MoleculeFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeFreeQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"molecule\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\) is not a substructure of \
\\!\\(\\*StyleBox[\\\"molecule\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"MoleculeFreeQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of MoleculeFreeQ that can be applied to a molecule.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MoleculeFreeQ",
                     "paclet:ref/MoleculeFreeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MoleculeFreeQ.\
html"], None}, "http://reference.wolfram.com/language/ref/MoleculeFreeQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MoleculeFreeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeFreeQ",
                ButtonNote->"paclet:ref/MoleculeFreeQ"],
               "\"paclet:ref/MoleculeFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeFreeQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"molecule\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\) is not a substructure of \
\\!\\(\\*StyleBox[\\\"molecule\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"MoleculeFreeQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of MoleculeFreeQ that can be applied to a molecule.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MoleculeFreeQ\", \"[\", RowBox[{StyleBox[\"molecule\", \
\"TI\"], \",\", StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) returns True if \
\!\(\*StyleBox[\"patt\", \"TI\"]\) is not a substructure of \
\!\(\*StyleBox[\"molecule\", \"TI\"]\), and False otherwise.\n\
\!\(\*RowBox[{\"MoleculeFreeQ\", \"[\", StyleBox[\"patt\", \"TI\"], \"]\"}]\) \
represents an operator form of MoleculeFreeQ that can be applied to a \
molecule.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MoleculeFreeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MoleculeFreeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`MoleculeFreeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeMatchQ",
                ButtonNote->"paclet:ref/MoleculeMatchQ"],
               "\"paclet:ref/MoleculeMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeMatchQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"mol\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the \
Molecule matches the given \
pattern.\\n\\!\\(\\*RowBox[{\\\"MoleculeMatchQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of MoleculeMatchQ that can be applied to a molecule.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/MoleculeMatchQ", "paclet:ref/MoleculeMatchQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MoleculeMatchQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/MoleculeMatchQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MoleculeMatchQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeMatchQ",
                ButtonNote->"paclet:ref/MoleculeMatchQ"],
               "\"paclet:ref/MoleculeMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeMatchQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"mol\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if the \
Molecule matches the given \
pattern.\\n\\!\\(\\*RowBox[{\\\"MoleculeMatchQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of MoleculeMatchQ that can be applied to a molecule.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MoleculeMatchQ\", \"[\", RowBox[{StyleBox[\"mol\", \
\"TI\"], \",\", StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) returns True if the \
Molecule matches the given pattern.\n\!\(\*RowBox[{\"MoleculeMatchQ\", \"[\", \
StyleBox[\"patt\", \"TI\"], \"]\"}]\) represents an operator form of \
MoleculeMatchQ that can be applied to a molecule.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MoleculeMatchQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MoleculeMatchQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`MoleculeMatchQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeQ",
                ButtonNote->"paclet:ref/MoleculeQ"],
               "\"paclet:ref/MoleculeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeQ\\\", \\\"[\\\", \
StyleBox[\\\"mol\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"mol\\\", \\\"TI\\\"]\\) is a valid Molecule expression, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MoleculeQ", 
                    "paclet:ref/MoleculeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MoleculeQ.\
html"], None}, "http://reference.wolfram.com/language/ref/MoleculeQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MoleculeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoleculeQ",
                ButtonNote->"paclet:ref/MoleculeQ"],
               "\"paclet:ref/MoleculeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoleculeQ\\\", \\\"[\\\", \
StyleBox[\\\"mol\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"mol\\\", \\\"TI\\\"]\\) is a valid Molecule expression, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MoleculeQ\", \"[\", StyleBox[\"mol\", \"TI\"], \"]\"}]\
\) returns True if \!\(\*StyleBox[\"mol\", \"TI\"]\) is a valid Molecule \
expression, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MoleculeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MoleculeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`MoleculeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MultigraphQ",
                ButtonNote->"paclet:ref/MultigraphQ"],
               "\"paclet:ref/MultigraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MultigraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a multigraph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MultigraphQ", 
                    "paclet:ref/MultigraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MultigraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/MultigraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MultigraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MultigraphQ",
                ButtonNote->"paclet:ref/MultigraphQ"],
               "\"paclet:ref/MultigraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MultigraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a multigraph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MultigraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \"]\"}]\
\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a multigraph \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MultigraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/MultigraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`MultigraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NameQ",
                ButtonNote->"paclet:ref/NameQ"],
               "\"paclet:ref/NameQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NameQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) \
yields True if there are any symbols whose names match the string pattern \
given, and yields False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/NameQ", 
                    "paclet:ref/NameQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/NameQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/NameQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"ResolveContextAliases", "\[Rule]", "True"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NameQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NameQ",
                ButtonNote->"paclet:ref/NameQ"],
               "\"paclet:ref/NameQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NameQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) \
yields True if there are any symbols whose names match the string pattern \
given, and yields False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"NameQ\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) yields True if there are any symbols \
whose names match the string pattern given, and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/NameQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/NameQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> {ResolveContextAliases -> True}, 
      "Attributes" -> {Protected}, "FullName" -> "System`NameQ"|>, True]], 
   ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NegativeDefiniteMatrixQ",
                ButtonNote->"paclet:ref/NegativeDefiniteMatrixQ"],
               "\"paclet:ref/NegativeDefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NegativeDefiniteMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly negative definite, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/NegativeDefiniteMatrixQ", 
                    "paclet:ref/NegativeDefiniteMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
NegativeDefiniteMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
NegativeDefiniteMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NegativeDefiniteMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NegativeDefiniteMatrixQ",
                ButtonNote->"paclet:ref/NegativeDefiniteMatrixQ"],
               "\"paclet:ref/NegativeDefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NegativeDefiniteMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly negative definite, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"NegativeDefiniteMatrixQ\", \"[\", StyleBox[\"m\", \"TI\
\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is explicitly \
negative definite, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/NegativeDefiniteMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/NegativeDefiniteMatrixQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`NegativeDefiniteMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NegativeSemidefiniteMatrixQ",
                ButtonNote->"paclet:ref/NegativeSemidefiniteMatrixQ"],
               "\"paclet:ref/NegativeSemidefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NegativeSemidefiniteMatrixQ\\\
\", \\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly negative \
semidefinite, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/NegativeSemidefiniteMatrixQ", 
                    "paclet:ref/NegativeSemidefiniteMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
NegativeSemidefiniteMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
NegativeSemidefiniteMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"System`NegativeSemidefiniteMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NegativeSemidefiniteMatrixQ",
                ButtonNote->"paclet:ref/NegativeSemidefiniteMatrixQ"],
               "\"paclet:ref/NegativeSemidefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NegativeSemidefiniteMatrixQ\\\
\", \\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly negative \
semidefinite, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"NegativeSemidefiniteMatrixQ\", \"[\", StyleBox[\"m\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is \
explicitly negative semidefinite, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/NegativeSemidefiniteMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/\
NegativeSemidefiniteMatrixQ.html"|>, "OwnValues" -> None, "UpValues" -> None, 
      "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
      "NValues" -> None, "FormatValues" -> None, 
      "Options" -> {Tolerance -> Automatic}, "Attributes" -> {Protected}, 
      "FullName" -> "System`NegativeSemidefiniteMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NormalMatrixQ",
                ButtonNote->"paclet:ref/NormalMatrixQ"],
               "\"paclet:ref/NormalMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NormalMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is an explicitly normal matrix, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/NormalMatrixQ",
                     "paclet:ref/NormalMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/NormalMatrixQ.\
html"], None}, "http://reference.wolfram.com/language/ref/NormalMatrixQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NormalMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NormalMatrixQ",
                ButtonNote->"paclet:ref/NormalMatrixQ"],
               "\"paclet:ref/NormalMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NormalMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is an explicitly normal matrix, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"NormalMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is an explicitly \
normal matrix, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/NormalMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/NormalMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {SameTest -> Automatic, Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`NormalMatrixQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NumberQ",
                ButtonNote->"paclet:ref/NumberQ"],
               "\"paclet:ref/NumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NumberQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a number, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/NumberQ", 
                    "paclet:ref/NumberQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/NumberQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/NumberQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NumberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NumberQ",
                ButtonNote->"paclet:ref/NumberQ"],
               "\"paclet:ref/NumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NumberQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a number, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"NumberQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a number, and \
False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/NumberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/NumberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`NumberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NumericArrayQ",
                ButtonNote->"paclet:ref/NumericArrayQ"],
               "\"paclet:ref/NumericArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NumericArrayQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid NumericArray \
object, and False otherwise.\\n\\!\\(\\*RowBox[{\\\"NumericArrayQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"tpatt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) requires additionally \
that \\!\\(\\*RowBox[{\\\"NumericArrayType\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) match the pattern \
\\!\\(\\*StyleBox[\\\"tpatt\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"NumericArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"tpatt\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dpatt\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) requires additionally that \
\\!\\(\\*RowBox[{\\\"ArrayDepth\\\", \\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\
\\\"], \\\"]\\\"}]\\) match the pattern \\!\\(\\*StyleBox[\\\"dpatt\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/NumericArrayQ",
                     "paclet:ref/NumericArrayQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/NumericArrayQ.\
html"], None}, "http://reference.wolfram.com/language/ref/NumericArrayQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NumericArrayQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NumericArrayQ",
                ButtonNote->"paclet:ref/NumericArrayQ"],
               "\"paclet:ref/NumericArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NumericArrayQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid NumericArray \
object, and False otherwise.\\n\\!\\(\\*RowBox[{\\\"NumericArrayQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \\\" \\\", \
StyleBox[\\\"tpatt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) requires additionally \
that \\!\\(\\*RowBox[{\\\"NumericArrayType\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) match the pattern \
\\!\\(\\*StyleBox[\\\"tpatt\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"NumericArrayQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"tpatt\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dpatt\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) requires additionally that \
\\!\\(\\*RowBox[{\\\"ArrayDepth\\\", \\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\
\\\"], \\\"]\\\"}]\\) match the pattern \\!\\(\\*StyleBox[\\\"dpatt\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"NumericArrayQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a valid \
NumericArray object, and False otherwise.\n\!\(\*RowBox[{\"NumericArrayQ\", \
\"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \" \", StyleBox[\"tpatt\", \
\"TI\"]}], \"]\"}]\) requires additionally that \
\!\(\*RowBox[{\"NumericArrayType\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) match the pattern \!\(\*StyleBox[\"tpatt\", \"TI\"]\).\n\
\!\(\*RowBox[{\"NumericArrayQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", StyleBox[\"tpatt\", \"TI\"], \",\", StyleBox[\"dpatt\", \"TI\"]}], \"]\
\"}]\) requires additionally that \!\(\*RowBox[{\"ArrayDepth\", \"[\", \
StyleBox[\"expr\", \"TI\"], \"]\"}]\) match the pattern \
\!\(\*StyleBox[\"dpatt\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/NumericArrayQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/NumericArrayQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`NumericArrayQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NumericQ",
                ButtonNote->"paclet:ref/NumericQ"],
               "\"paclet:ref/NumericQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NumericQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a numeric quantity, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/NumericQ", 
                    "paclet:ref/NumericQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/NumericQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/NumericQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`NumericQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/NumericQ",
                ButtonNote->"paclet:ref/NumericQ"],
               "\"paclet:ref/NumericQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NumericQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a numeric quantity, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"NumericQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\
\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a numeric quantity, \
and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/NumericQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/NumericQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`NumericQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/ObjectExistsQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/ObjectExistsQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/ObjectExistsQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`ObjectExistsQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ObjectExistsQ.\
html"], None}, "http://reference.wolfram.com/language/ref/ObjectExistsQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ObjectExistsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/ObjectExistsQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/ObjectExistsQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/ObjectExistsQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`ObjectExistsQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "System`ObjectExistsQ", 
      "Documentation" -> <|
       "Web" -> 
        "http://reference.wolfram.com/language/ref/ObjectExistsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ObjectExistsQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ObservableModelQ",
                ButtonNote->"paclet:ref/ObservableModelQ"],
               "\"paclet:ref/ObservableModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ObservableModelQ\\\", \
\\\"[\\\", StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the system \\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\"]\\) is observable, and \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"ObservableModelQ\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"sub\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives True \
if the subsystem \\!\\(\\*StyleBox[\\\"sub\\\", \\\"TI\\\"]\\) is observable.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ObservableModelQ", 
                    "paclet:ref/ObservableModelQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ObservableModelQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ObservableModelQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ObservableModelQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ObservableModelQ",
                ButtonNote->"paclet:ref/ObservableModelQ"],
               "\"paclet:ref/ObservableModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ObservableModelQ\\\", \
\\\"[\\\", StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the system \\!\\(\\*StyleBox[\\\"sys\\\", \\\"TI\\\"]\\) is observable, and \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"ObservableModelQ\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"sys\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"sub\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives True \
if the subsystem \\!\\(\\*StyleBox[\\\"sub\\\", \\\"TI\\\"]\\) is observable.\
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ObservableModelQ\", \"[\", StyleBox[\"sys\", \"TI\"], \
\"]\"}]\) gives True if the system \!\(\*StyleBox[\"sys\", \"TI\"]\) is \
observable, and False otherwise.\n\!\(\*RowBox[{\"ObservableModelQ\", \"[\", \
RowBox[{\"{\", RowBox[{StyleBox[\"sys\", \"TI\"], \",\", StyleBox[\"sub\", \
\"TI\"]}], \"}\"}], \"]\"}]\) gives True if the subsystem \
\!\(\*StyleBox[\"sub\", \"TI\"]\) is observable.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ObservableModelQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ObservableModelQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ObservableModelQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OddQ",
                ButtonNote->"paclet:ref/OddQ"],
               "\"paclet:ref/OddQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OddQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an odd integer, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/OddQ", 
                    "paclet:ref/OddQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/OddQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/OddQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`OddQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OddQ",
                ButtonNote->"paclet:ref/OddQ"],
               "\"paclet:ref/OddQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OddQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is an odd integer, and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"OddQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is an odd integer, and False \
otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/OddQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/OddQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`OddQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/OptionQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/OptionQ.html"],
               "\"http://reference.wolfram.com/language/ref/OptionQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OptionQ\\\", \\\"[\\\", \
StyleBox[\\\"e\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"e\\\", \\\"TI\\\"]\\) can be considered an option or \
list of options, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/OptionQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/OptionQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`OptionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/OptionQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/OptionQ.html"],
               "\"http://reference.wolfram.com/language/ref/OptionQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OptionQ\\\", \\\"[\\\", \
StyleBox[\\\"e\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"e\\\", \\\"TI\\\"]\\) can be considered an option or \
list of options, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"OptionQ\", \"[\", StyleBox[\"e\", \"TI\"], \"]\"}]\) \
returns True if \!\(\*StyleBox[\"e\", \"TI\"]\) can be considered an option \
or list of options, and False otherwise.", 
      "Documentation" -> <|
       "Web" -> "http://reference.wolfram.com/language/ref/OptionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`OptionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OrderedQ",
                ButtonNote->"paclet:ref/OrderedQ"],
               "\"paclet:ref/OrderedQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OrderedQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}], \\\"]\\\"}]\\) gives True if the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) are in canonical order, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"OrderedQ\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\
\\\"}]\\) uses the ordering function \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\
\\) to determine whether each pair of elements \
\\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"+\\\", \\\"1\\\"}]]\\) is in \
order. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/OrderedQ", 
                    "paclet:ref/OrderedQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/OrderedQ.html"]\
, None}, "http://reference.wolfram.com/language/ref/OrderedQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`OrderedQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OrderedQ",
                ButtonNote->"paclet:ref/OrderedQ"],
               "\"paclet:ref/OrderedQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OrderedQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}], \\\"]\\\"}]\\) gives True if the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) are in canonical order, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"OrderedQ\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"h\\\", \\\"TI\\\"], \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\
\\\"}]\\) uses the ordering function \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\
\\) to determine whether each pair of elements \
\\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"+\\\", \\\"1\\\"}]]\\) is in \
order. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"OrderedQ\", \"[\", RowBox[{StyleBox[\"h\", \"TI\"], \
\"[\", RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}], \"]\"}]\) \
gives True if the \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\) are in canonical order, and False otherwise.\n\
\!\(\*RowBox[{\"OrderedQ\", \"[\", RowBox[{RowBox[{StyleBox[\"h\", \"TI\"], \
\"[\", RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}], \",\", \
StyleBox[\"p\", \"TI\"]}], \"]\"}]\) uses the ordering function \
\!\(\*StyleBox[\"p\", \"TI\"]\) to determine whether each pair of elements \!\
\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\", \"TI\"]]\), \
\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \
\"+\", \"1\"}]]\) is in order. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/OrderedQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/OrderedQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`OrderedQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OrthogonalMatrixQ",
                ButtonNote->"paclet:ref/OrthogonalMatrixQ"],
               "\"paclet:ref/OrthogonalMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OrthogonalMatrixQ\\\", \\\"[\
\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is an explicitly orthogonal \
matrix, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/OrthogonalMatrixQ", 
                    "paclet:ref/OrthogonalMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
OrthogonalMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
OrthogonalMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Normalized", "\[Rule]", "True"}], ",", 
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`OrthogonalMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OrthogonalMatrixQ",
                ButtonNote->"paclet:ref/OrthogonalMatrixQ"],
               "\"paclet:ref/OrthogonalMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OrthogonalMatrixQ\\\", \\\"[\
\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is an explicitly orthogonal \
matrix, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"OrthogonalMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is an explicitly \
orthogonal matrix, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/OrthogonalMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/OrthogonalMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       Normalized -> True, SameTest -> Automatic, Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`OrthogonalMatrixQ"|>,
      True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OutputControllableModelQ",
                ButtonNote->"paclet:ref/OutputControllableModelQ"],
               "\"paclet:ref/OutputControllableModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OutputControllableModelQ\\\",\
 \\\"[\\\", StyleBox[\\\"ssm\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the state-space model \\!\\(\\*StyleBox[\\\"ssm\\\", \\\"TI\\\"]\\) is output \
controllable, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/OutputControllableModelQ", 
                    "paclet:ref/OutputControllableModelQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
OutputControllableModelQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
OutputControllableModelQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`OutputControllableModelQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/OutputControllableModelQ",
                ButtonNote->"paclet:ref/OutputControllableModelQ"],
               "\"paclet:ref/OutputControllableModelQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"OutputControllableModelQ\\\",\
 \\\"[\\\", StyleBox[\\\"ssm\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the state-space model \\!\\(\\*StyleBox[\\\"ssm\\\", \\\"TI\\\"]\\) is output \
controllable, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"OutputControllableModelQ\", \"[\", StyleBox[\"ssm\", \
\"TI\"], \"]\"}]\) gives True if the state-space model \
\!\(\*StyleBox[\"ssm\", \"TI\"]\) is output controllable, and False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/OutputControllableModelQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/OutputControllableModelQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`OutputControllableModelQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PacletNewerQ",
                ButtonNote->"paclet:ref/PacletNewerQ"],
               "\"paclet:ref/PacletNewerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PacletNewerQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"paclet\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"paclet\
\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) returns \
True if \\!\\(\\*StyleBox[SubscriptBox[StyleBox[\\\"paclet\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"]\\) has a higher version number \
than \\!\\(\\*SubscriptBox[StyleBox[\\\"paclet\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PacletNewerQ", 
                    "paclet:ref/PacletNewerQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PacletNewerQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PacletNewerQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PacletNewerQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PacletNewerQ",
                ButtonNote->"paclet:ref/PacletNewerQ"],
               "\"paclet:ref/PacletNewerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PacletNewerQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"paclet\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"paclet\
\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) returns \
True if \\!\\(\\*StyleBox[SubscriptBox[StyleBox[\\\"paclet\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"]\\) has a higher version number \
than \\!\\(\\*SubscriptBox[StyleBox[\\\"paclet\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PacletNewerQ\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"paclet\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"paclet\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) returns True if \!\(\*StyleBox[SubscriptBox[StyleBox[\"paclet\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \"TI\"]\) has a higher version number than \
\!\(\*SubscriptBox[StyleBox[\"paclet\", \"TI\"], StyleBox[\"2\", \"TR\"]]\), \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PacletNewerQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PacletNewerQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PacletNewerQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/PacletObjectQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/PacletObjectQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/PacletObjectQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"PacletObjectQ[expr] returns True or False \
depending on whether its argument is a PacletObject expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PacletObjectQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PacletObjectQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PacletObjectQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/PacletObjectQ.\
html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/PacletObjectQ.\
html"],
               
               "\"http://reference.wolfram.com/language/ref/PacletObjectQ.\
html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"PacletObjectQ[expr] returns True or False \
depending on whether its argument is a PacletObject expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "PacletObjectQ[expr] returns True or False depending on whether its \
argument is a PacletObject expression.", 
      "Documentation" -> <|
       "Web" -> 
        "http://reference.wolfram.com/language/ref/PacletObjectQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PacletObjectQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PalindromeQ",
                ButtonNote->"paclet:ref/PalindromeQ"],
               "\"paclet:ref/PalindromeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PalindromeQ\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the given \
list is identical to \\!\\(\\*RowBox[{\\\"Reverse\\\", \\\"[\\\", StyleBox[\\\
\"list\\\", \\\"TI\\\"], \\\"]\\\"}]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"PalindromeQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the integer \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is identical to \\!\\(\\*RowBox[{\
\\\"IntegerReverse\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\), and False otherwise.\\n\\!\\(\\*RowBox[{\\\"PalindromeQ\\\", \
\\\"[\\\", StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True \
if the given string is identical to \\!\\(\\*RowBox[{\\\"StringReverse\\\", \
\\\"[\\\", StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\), and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PalindromeQ", 
                    "paclet:ref/PalindromeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PalindromeQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PalindromeQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PalindromeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PalindromeQ",
                ButtonNote->"paclet:ref/PalindromeQ"],
               "\"paclet:ref/PalindromeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PalindromeQ\\\", \\\"[\\\", \
StyleBox[\\\"list\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the given \
list is identical to \\!\\(\\*RowBox[{\\\"Reverse\\\", \\\"[\\\", StyleBox[\\\
\"list\\\", \\\"TI\\\"], \\\"]\\\"}]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"PalindromeQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the integer \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is identical to \\!\\(\\*RowBox[{\
\\\"IntegerReverse\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\"]\\\"}]\\), and False otherwise.\\n\\!\\(\\*RowBox[{\\\"PalindromeQ\\\", \
\\\"[\\\", StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True \
if the given string is identical to \\!\\(\\*RowBox[{\\\"StringReverse\\\", \
\\\"[\\\", StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\), and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PalindromeQ\", \"[\", StyleBox[\"list\", \"TI\"], \
\"]\"}]\) returns True if the given list is identical to \
\!\(\*RowBox[{\"Reverse\", \"[\", StyleBox[\"list\", \"TI\"], \"]\"}]\), and \
False otherwise.\n\!\(\*RowBox[{\"PalindromeQ\", \"[\", StyleBox[\"n\", \
\"TI\"], \"]\"}]\) returns True if the integer \!\(\*StyleBox[\"n\", \
\"TI\"]\) is identical to \!\(\*RowBox[{\"IntegerReverse\", \"[\", \
StyleBox[\"n\", \"TI\"], \"]\"}]\), and False otherwise.\n\
\!\(\*RowBox[{\"PalindromeQ\", \"[\", StyleBox[\"string\", \"TI\"], \"]\"}]\) \
returns True if the given string is identical to \
\!\(\*RowBox[{\"StringReverse\", \"[\", StyleBox[\"string\", \"TI\"], \"]\"}]\
\), and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PalindromeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PalindromeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PalindromeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PartitionsQ",
                ButtonNote->"paclet:ref/PartitionsQ"],
               "\"paclet:ref/PartitionsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PartitionsQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the number \
\\!\\(\\*RowBox[{StyleBox[\\\"q\\\", \\\"TI\\\"], RowBox[{\\\"(\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\")\\\"}]}]\\) of partitions of the \
integer \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) into distinct parts. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PartitionsQ", 
                    "paclet:ref/PartitionsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PartitionsQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PartitionsQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PartitionsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PartitionsQ",
                ButtonNote->"paclet:ref/PartitionsQ"],
               "\"paclet:ref/PartitionsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PartitionsQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the number \
\\!\\(\\*RowBox[{StyleBox[\\\"q\\\", \\\"TI\\\"], RowBox[{\\\"(\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\")\\\"}]}]\\) of partitions of the \
integer \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) into distinct parts. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PartitionsQ\", \"[\", StyleBox[\"n\", \"TI\"], \"]\"}]\
\) gives the number \!\(\*RowBox[{StyleBox[\"q\", \"TI\"], RowBox[{\"(\", \
StyleBox[\"n\", \"TI\"], \")\"}]}]\) of partitions of the integer \
\!\(\*StyleBox[\"n\", \"TI\"]\) into distinct parts. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PartitionsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PartitionsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`PartitionsQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PathGraphQ",
                ButtonNote->"paclet:ref/PathGraphQ"],
               "\"paclet:ref/PathGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PathGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a path and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PathGraphQ", 
                    "paclet:ref/PathGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PathGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PathGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PathGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PathGraphQ",
                ButtonNote->"paclet:ref/PathGraphQ"],
               "\"paclet:ref/PathGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PathGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a path and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PathGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a path \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PathGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PathGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PathGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PerfectNumberQ",
                ButtonNote->"paclet:ref/PerfectNumberQ"],
               "\"paclet:ref/PerfectNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PerfectNumberQ\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a perfect number, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PerfectNumberQ", "paclet:ref/PerfectNumberQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PerfectNumberQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/PerfectNumberQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PerfectNumberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PerfectNumberQ",
                ButtonNote->"paclet:ref/PerfectNumberQ"],
               "\"paclet:ref/PerfectNumberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PerfectNumberQ\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a perfect number, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PerfectNumberQ\", \"[\", StyleBox[\"n\", \"TI\"], \
\"]\"}]\) returns True if \!\(\*StyleBox[\"n\", \"TI\"]\) is a perfect \
number, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PerfectNumberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PerfectNumberQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PerfectNumberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PermissionsGroupMemberQ",
                ButtonNote->"paclet:ref/PermissionsGroupMemberQ"],
               "\"paclet:ref/PermissionsGroupMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PermissionsGroupMemberQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"user\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"user\\\", \\\"TI\\\"]\\) is a member of the permissions \
group \\!\\(\\*StyleBox[\\\"group\\\", \\\"TI\\\"]\\), and False otherwise.\"\
\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PermissionsGroupMemberQ", 
                    "paclet:ref/PermissionsGroupMemberQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PermissionsGroupMemberQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PermissionsGroupMemberQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PermissionsGroupMemberQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PermissionsGroupMemberQ",
                ButtonNote->"paclet:ref/PermissionsGroupMemberQ"],
               "\"paclet:ref/PermissionsGroupMemberQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PermissionsGroupMemberQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"group\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"user\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"user\\\", \\\"TI\\\"]\\) is a member of the permissions \
group \\!\\(\\*StyleBox[\\\"group\\\", \\\"TI\\\"]\\), and False otherwise.\"\
\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PermissionsGroupMemberQ\", \"[\", \
RowBox[{StyleBox[\"group\", \"TI\"], \",\", StyleBox[\"user\", \"TI\"]}], \"]\
\"}]\) returns True if \!\(\*StyleBox[\"user\", \"TI\"]\) is a member of the \
permissions group \!\(\*StyleBox[\"group\", \"TI\"]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PermissionsGroupMemberQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PermissionsGroupMemberQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PermissionsGroupMemberQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PermutationCyclesQ",
                ButtonNote->"paclet:ref/PermutationCyclesQ"],
               "\"paclet:ref/PermutationCyclesQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PermutationCyclesQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a permutation in disjoint \
cyclic form, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PermutationCyclesQ", 
                    "paclet:ref/PermutationCyclesQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PermutationCyclesQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PermutationCyclesQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PermutationCyclesQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PermutationCyclesQ",
                ButtonNote->"paclet:ref/PermutationCyclesQ"],
               "\"paclet:ref/PermutationCyclesQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PermutationCyclesQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a permutation in disjoint \
cyclic form, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PermutationCyclesQ\", \"[\", StyleBox[\"expr\", \
\"TI\"], \"]\"}]\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a \
permutation in disjoint cyclic form, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PermutationCyclesQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PermutationCyclesQ.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PermutationCyclesQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PermutationListQ",
                ButtonNote->"paclet:ref/PermutationListQ"],
               "\"paclet:ref/PermutationListQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PermutationListQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid permutation list \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PermutationListQ", 
                    "paclet:ref/PermutationListQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PermutationListQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PermutationListQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PermutationListQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PermutationListQ",
                ButtonNote->"paclet:ref/PermutationListQ"],
               "\"paclet:ref/PermutationListQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PermutationListQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a valid permutation list \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PermutationListQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) returns True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a valid \
permutation list and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PermutationListQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PermutationListQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PermutationListQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PlanarGraphQ", 
                    "paclet:ref/PlanarGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PlanarGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PlanarGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PlanarGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PlanarGraphQ",
                ButtonNote->"paclet:ref/PlanarGraphQ"],
               "\"paclet:ref/PlanarGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PlanarGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a planar graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PlanarGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"g\", \"TI\"]\) is a planar graph \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PlanarGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PlanarGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PlanarGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PointProcessParameterQ",
                ButtonNote->"paclet:ref/PointProcessParameterQ"],
               "\"paclet:ref/PointProcessParameterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PointProcessParameterQ\\\", \
\\\"[\\\", StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"proc\\\", \\\"TI\\\"]\\) is a valid random point \
process, and yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PointProcessParameterQ", 
                    "paclet:ref/PointProcessParameterQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PointProcessParameterQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PointProcessParameterQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PointProcessParameterQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PointProcessParameterQ",
                ButtonNote->"paclet:ref/PointProcessParameterQ"],
               "\"paclet:ref/PointProcessParameterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PointProcessParameterQ\\\", \
\\\"[\\\", StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"proc\\\", \\\"TI\\\"]\\) is a valid random point \
process, and yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PointProcessParameterQ\", \"[\", StyleBox[\"proc\", \
\"TI\"], \"]\"}]\) yields True if \!\(\*StyleBox[\"proc\", \"TI\"]\) is a \
valid random point process, and yields False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PointProcessParameterQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PointProcessParameterQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PointProcessParameterQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PolynomialExpressionQ",
                ButtonNote->"paclet:ref/PolynomialExpressionQ"],
               "\"paclet:ref/PolynomialExpressionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PolynomialExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is structurally a polynomial \
expression in \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"PolynomialExpressionQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) is structurally a polynomial expression in \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\), \
and False otherwise.\\n\\!\\(\\*RowBox[{\\\"PolynomialExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
is structurally a polynomial expression in \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) \
with coefficients satisfying \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\), \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PolynomialExpressionQ", 
                    "paclet:ref/PolynomialExpressionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PolynomialExpressionQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PolynomialExpressionQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PolynomialExpressionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PolynomialExpressionQ",
                ButtonNote->"paclet:ref/PolynomialExpressionQ"],
               "\"paclet:ref/PolynomialExpressionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PolynomialExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is structurally a polynomial \
expression in \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"PolynomialExpressionQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) is structurally a polynomial expression in \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\), \
and False otherwise.\\n\\!\\(\\*RowBox[{\\\"PolynomialExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
is structurally a polynomial expression in \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) \
with coefficients satisfying \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\), \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PolynomialExpressionQ\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\
\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is structurally a \
polynomial expression in \!\(\*StyleBox[\"x\", \"TI\"]\), and False \
otherwise.\n\!\(\*RowBox[{\"PolynomialExpressionQ\", \"[\", RowBox[{StyleBox[\
\"expr\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\
\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is \
structurally a polynomial expression in \!\(\*RowBox[{StyleBox[\"x\", \
\"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}]\), and False otherwise.\n\!\(\*RowBox[{\"PolynomialExpressionQ\", \
\"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"test\", \
\"TI\"]}], \"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is \
structurally a polynomial expression in \!\(\*RowBox[{StyleBox[\"x\", \
\"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}]\) with coefficients satisfying \!\(\*StyleBox[\"test\", \"TI\"]\), \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PolynomialExpressionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PolynomialExpressionQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PolynomialExpressionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PolynomialQ",
                ButtonNote->"paclet:ref/PolynomialQ"],
               "\"paclet:ref/PolynomialQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PolynomialQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"var\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) is a polynomial in \\!\\(\\*StyleBox[\\\"var\\\", \
\\\"TI\\\"]\\), and yields False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"PolynomialQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"var\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\) is a polynomial in the \\!\\(\\*SubscriptBox[StyleBox[\\\"var\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PolynomialQ", 
                    "paclet:ref/PolynomialQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PolynomialQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PolynomialQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PolynomialQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PolynomialQ",
                ButtonNote->"paclet:ref/PolynomialQ"],
               "\"paclet:ref/PolynomialQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PolynomialQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"var\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) is a polynomial in \\!\\(\\*StyleBox[\\\"var\\\", \
\\\"TI\\\"]\\), and yields False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"PolynomialQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"var\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) tests whether \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\
\"]\\) is a polynomial in the \\!\\(\\*SubscriptBox[StyleBox[\\\"var\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PolynomialQ\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"], \",\", StyleBox[\"var\", \"TI\"]}], \"]\"}]\) yields True if \
\!\(\*StyleBox[\"expr\", \"TI\"]\) is a polynomial in \!\(\*StyleBox[\"var\", \
\"TI\"]\), and yields False otherwise. \n\!\(\*RowBox[{\"PolynomialQ\", \
\"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"var\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) tests whether \
\!\(\*StyleBox[\"expr\", \"TI\"]\) is a polynomial in the \
\!\(\*SubscriptBox[StyleBox[\"var\", \"TI\"], StyleBox[\"i\", \"TI\"]]\). ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PolynomialQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PolynomialQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {}, "Attributes" -> {Protected}, 
      "FullName" -> "System`PolynomialQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PositiveDefiniteMatrixQ",
                ButtonNote->"paclet:ref/PositiveDefiniteMatrixQ"],
               "\"paclet:ref/PositiveDefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PositiveDefiniteMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly positive definite, \
and False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PositiveDefiniteMatrixQ", 
                    "paclet:ref/PositiveDefiniteMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PositiveDefiniteMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PositiveDefiniteMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PositiveDefiniteMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PositiveDefiniteMatrixQ",
                ButtonNote->"paclet:ref/PositiveDefiniteMatrixQ"],
               "\"paclet:ref/PositiveDefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PositiveDefiniteMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly positive definite, \
and False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PositiveDefiniteMatrixQ\", \"[\", StyleBox[\"m\", \"TI\
\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is explicitly \
positive definite, and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PositiveDefiniteMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PositiveDefiniteMatrixQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`PositiveDefiniteMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PositiveSemidefiniteMatrixQ",
                ButtonNote->"paclet:ref/PositiveSemidefiniteMatrixQ"],
               "\"paclet:ref/PositiveSemidefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PositiveSemidefiniteMatrixQ\\\
\", \\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly positive \
semidefinite, and False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PositiveSemidefiniteMatrixQ", 
                    "paclet:ref/PositiveSemidefiniteMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PositiveSemidefiniteMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PositiveSemidefiniteMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"System`PositiveSemidefiniteMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PositiveSemidefiniteMatrixQ",
                ButtonNote->"paclet:ref/PositiveSemidefiniteMatrixQ"],
               "\"paclet:ref/PositiveSemidefiniteMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PositiveSemidefiniteMatrixQ\\\
\", \\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly positive \
semidefinite, and False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PositiveSemidefiniteMatrixQ\", \"[\", StyleBox[\"m\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is \
explicitly positive semidefinite, and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PositiveSemidefiniteMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/\
PositiveSemidefiniteMatrixQ.html"|>, "OwnValues" -> None, "UpValues" -> None, 
      "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
      "NValues" -> None, "FormatValues" -> None, 
      "Options" -> {Tolerance -> Automatic}, "Attributes" -> {Protected}, 
      "FullName" -> "System`PositiveSemidefiniteMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PossibleZeroQ",
                ButtonNote->"paclet:ref/PossibleZeroQ"],
               "\"paclet:ref/PossibleZeroQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PossibleZeroQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
basic symbolic and numerical methods suggest that \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has value zero, and gives \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PossibleZeroQ",
                     "paclet:ref/PossibleZeroQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PossibleZeroQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PossibleZeroQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Assumptions", "\[RuleDelayed]", "$Assumptions"}],
                     ",", 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PossibleZeroQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PossibleZeroQ",
                ButtonNote->"paclet:ref/PossibleZeroQ"],
               "\"paclet:ref/PossibleZeroQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PossibleZeroQ\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
basic symbolic and numerical methods suggest that \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) has value zero, and gives \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PossibleZeroQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if basic symbolic and numerical methods suggest that \
\!\(\*StyleBox[\"expr\", \"TI\"]\) has value zero, and gives False otherwise. \
", "Documentation" -> <|
       "Local" -> "paclet:ref/PossibleZeroQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PossibleZeroQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Assumptions :> $Assumptions, Method -> Automatic}, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`PossibleZeroQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrimePowerQ",
                ButtonNote->"paclet:ref/PrimePowerQ"],
               "\"paclet:ref/PrimePowerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimePowerQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a power of a prime number, \
and yields False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PrimePowerQ", 
                    "paclet:ref/PrimePowerQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PrimePowerQ.\
html"], None}, "http://reference.wolfram.com/language/ref/PrimePowerQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PrimePowerQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrimePowerQ",
                ButtonNote->"paclet:ref/PrimePowerQ"],
               "\"paclet:ref/PrimePowerQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimePowerQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a power of a prime number, \
and yields False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PrimePowerQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a power of a \
prime number, and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PrimePowerQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PrimePowerQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PrimePowerQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrimeQ",
                ButtonNote->"paclet:ref/PrimeQ"],
               "\"paclet:ref/PrimeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimeQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a prime number, and yields \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/PrimeQ", 
                    "paclet:ref/PrimeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/PrimeQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/PrimeQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"GaussianIntegers", "\[Rule]", "False"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PrimeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrimeQ",
                ButtonNote->"paclet:ref/PrimeQ"],
               "\"paclet:ref/PrimeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimeQ\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) is a prime number, and yields \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PrimeQ\", \"[\", StyleBox[\"n\", \"TI\"], \"]\"}]\) \
yields True if \!\(\*StyleBox[\"n\", \"TI\"]\) is a prime number, and yields \
False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PrimeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PrimeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {GaussianIntegers -> False}, 
      "Attributes" -> {Listable, Protected}, "FullName" -> "System`PrimeQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrimitivePolynomialQ",
                ButtonNote->"paclet:ref/PrimitivePolynomialQ"],
               "\"paclet:ref/PrimitivePolynomialQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimitivePolynomialQ\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is a primitive polynomial \
modulo a prime \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PrimitivePolynomialQ", 
                    "paclet:ref/PrimitivePolynomialQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PrimitivePolynomialQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PrimitivePolynomialQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PrimitivePolynomialQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrimitivePolynomialQ",
                ButtonNote->"paclet:ref/PrimitivePolynomialQ"],
               "\"paclet:ref/PrimitivePolynomialQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimitivePolynomialQ\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \
\\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is a primitive polynomial \
modulo a prime \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PrimitivePolynomialQ\", \"[\", RowBox[{StyleBox[\"poly\
\", \"TI\"], \",\", StyleBox[\"p\", \"TI\"]}], \"]\"}]\) tests whether \
\!\(\*StyleBox[\"poly\", \"TI\"]\) is a primitive polynomial modulo a prime \
\!\(\*StyleBox[\"p\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PrimitivePolynomialQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PrimitivePolynomialQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`PrimitivePolynomialQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrintableASCIIQ",
                ButtonNote->"paclet:ref/PrintableASCIIQ"],
               "\"paclet:ref/PrintableASCIIQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrintableASCIIQ\\\", \\\"[\\\
\", StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
string contains only printable ASCII characters, and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/PrintableASCIIQ", 
                    "paclet:ref/PrintableASCIIQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
PrintableASCIIQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
PrintableASCIIQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`PrintableASCIIQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/PrintableASCIIQ",
                ButtonNote->"paclet:ref/PrintableASCIIQ"],
               "\"paclet:ref/PrintableASCIIQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrintableASCIIQ\\\", \\\"[\\\
\", StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
string contains only printable ASCII characters, and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"PrintableASCIIQ\", \"[\", StyleBox[\"string\", \
\"TI\"], \"]\"}]\) yields True if the string contains only printable ASCII \
characters, and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/PrintableASCIIQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/PrintableASCIIQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`PrintableASCIIQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ProcessParameterQ",
                ButtonNote->"paclet:ref/ProcessParameterQ"],
               "\"paclet:ref/ProcessParameterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ProcessParameterQ\\\", \\\"[\
\\\", StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"proc\\\", \\\"TI\\\"]\\) is a valid random process, and \
yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ProcessParameterQ", 
                    "paclet:ref/ProcessParameterQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ProcessParameterQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ProcessParameterQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ProcessParameterQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ProcessParameterQ",
                ButtonNote->"paclet:ref/ProcessParameterQ"],
               "\"paclet:ref/ProcessParameterQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ProcessParameterQ\\\", \\\"[\
\\\", StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"proc\\\", \\\"TI\\\"]\\) is a valid random process, and \
yields False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ProcessParameterQ\", \"[\", StyleBox[\"proc\", \
\"TI\"], \"]\"}]\) yields True if \!\(\*StyleBox[\"proc\", \"TI\"]\) is a \
valid random process, and yields False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ProcessParameterQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ProcessParameterQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ProcessParameterQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/QHypergeometricPFQ",
                ButtonNote->"paclet:ref/QHypergeometricPFQ"],
               "\"paclet:ref/QHypergeometricPFQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"QHypergeometricPFQ\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"r\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\\\"s\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"q\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the basic \
hypergeometric series \\!\\(\\*RowBox[{SubscriptBox[\\\"\[Null]\\\", \
\\\"r\\\"], \\\"\[InvisibleSpace]\\\", SubscriptBox[\\\"\[Phi]\\\", \
\\\"s\\\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\";\\\", \\\"b\\\", \\\";\\\", \\\
\"q\\\", \\\";\\\", \\\"z\\\"}], \\\")\\\"}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/QHypergeometricPFQ", 
                    "paclet:ref/QHypergeometricPFQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
QHypergeometricPFQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
QHypergeometricPFQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"NumericFunction", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`QHypergeometricPFQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/QHypergeometricPFQ",
                ButtonNote->"paclet:ref/QHypergeometricPFQ"],
               "\"paclet:ref/QHypergeometricPFQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"QHypergeometricPFQ\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"r\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"b\\\", \\\"TI\\\"], StyleBox[\\\"s\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"q\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"z\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the basic \
hypergeometric series \\!\\(\\*RowBox[{SubscriptBox[\\\"\[Null]\\\", \
\\\"r\\\"], \\\"\[InvisibleSpace]\\\", SubscriptBox[\\\"\[Phi]\\\", \
\\\"s\\\"], \\\"(\\\", RowBox[{\\\"a\\\", \\\";\\\", \\\"b\\\", \\\";\\\", \\\
\"q\\\", \\\";\\\", \\\"z\\\"}], \\\")\\\"}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"QHypergeometricPFQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"a\", \
\"TI\"], StyleBox[\"r\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", SubscriptBox[StyleBox[\"b\", \
\"TI\"], StyleBox[\"s\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"q\", \"TI\"], \
\",\", StyleBox[\"z\", \"TI\"]}], \"]\"}]\) gives the basic hypergeometric \
series \!\(\*RowBox[{SubscriptBox[\"\[Null]\", \"r\"], \"\[InvisibleSpace]\", \
SubscriptBox[\"\[Phi]\", \"s\"], \"(\", RowBox[{\"a\", \";\", \"b\", \";\", \
\"q\", \";\", \"z\"}], \")\"}]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/QHypergeometricPFQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/QHypergeometricPFQ.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {NumericFunction, Protected}, "FullName" -> 
      "System`QHypergeometricPFQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/QuadraticIrrationalQ",
                ButtonNote->"paclet:ref/QuadraticIrrationalQ"],
               "\"paclet:ref/QuadraticIrrationalQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"QuadraticIrrationalQ\\\", \\\
\"[\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\\(\
\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is a quadratic irrational and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/QuadraticIrrationalQ", 
                    "paclet:ref/QuadraticIrrationalQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
QuadraticIrrationalQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
QuadraticIrrationalQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`QuadraticIrrationalQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/QuadraticIrrationalQ",
                ButtonNote->"paclet:ref/QuadraticIrrationalQ"],
               "\"paclet:ref/QuadraticIrrationalQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"QuadraticIrrationalQ\\\", \\\
\"[\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\\(\
\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is a quadratic irrational and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"QuadraticIrrationalQ\", \"[\", StyleBox[\"x\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"x\", \"TI\"]\) is a \
quadratic irrational and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/QuadraticIrrationalQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/QuadraticIrrationalQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Listable, Protected}, 
      "FullName" -> "System`QuadraticIrrationalQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/QuantityQ",
                ButtonNote->"paclet:ref/QuantityQ"],
               "\"paclet:ref/QuantityQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"QuantityQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a Quantity with valid \
arguments, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/QuantityQ", 
                    "paclet:ref/QuantityQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/QuantityQ.\
html"], None}, "http://reference.wolfram.com/language/ref/QuantityQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`QuantityQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/QuantityQ",
                ButtonNote->"paclet:ref/QuantityQ"],
               "\"paclet:ref/QuantityQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"QuantityQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a Quantity with valid \
arguments, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"QuantityQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a Quantity with \
valid arguments, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/QuantityQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/QuantityQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`QuantityQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RationalExpressionQ",
                ButtonNote->"paclet:ref/RationalExpressionQ"],
               "\"paclet:ref/RationalExpressionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RationalExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is structurally a rational \
expression in \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"RationalExpressionQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) is structurally a rational expression in \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\), \
and False otherwise.\\n\\!\\(\\*RowBox[{\\\"RationalExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
is structurally a rational expression in \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) with coefficients satisfying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RationalExpressionQ", 
                    "paclet:ref/RationalExpressionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RationalExpressionQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RationalExpressionQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RationalExpressionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RationalExpressionQ",
                ButtonNote->"paclet:ref/RationalExpressionQ"],
               "\"paclet:ref/RationalExpressionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RationalExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is structurally a rational \
expression in \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"RationalExpressionQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) is structurally a rational expression in \
\\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\), \
and False otherwise.\\n\\!\\(\\*RowBox[{\\\"RationalExpressionQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"test\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) \
is structurally a rational expression in \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) with coefficients satisfying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RationalExpressionQ\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\
\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is structurally a \
rational expression in \!\(\*StyleBox[\"x\", \"TI\"]\), and False otherwise.\n\
\!\(\*RowBox[{\"RationalExpressionQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\
\"], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\", \
StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is \
structurally a rational expression in \!\(\*RowBox[{StyleBox[\"x\", \"TI\"], \
\",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\), \
and False otherwise.\n\!\(\*RowBox[{\"RationalExpressionQ\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"test\", \
\"TI\"]}], \"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is \
structurally a rational expression in \!\(\*RowBox[{StyleBox[\"x\", \"TI\"], \
\",\", StyleBox[\"y\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) \
with coefficients satisfying \!\(\*StyleBox[\"test\", \"TI\"]\), and False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RationalExpressionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/RationalExpressionQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`RationalExpressionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ReactionBalancedQ",
                ButtonNote->"paclet:ref/ReactionBalancedQ"],
               "\"paclet:ref/ReactionBalancedQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ReactionBalancedQ\\\", \\\"[\
\\\", StyleBox[\\\"rxn\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the \
given chemical reaction is balanced, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ReactionBalancedQ", 
                    "paclet:ref/ReactionBalancedQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ReactionBalancedQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ReactionBalancedQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ReactionBalancedQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ReactionBalancedQ",
                ButtonNote->"paclet:ref/ReactionBalancedQ"],
               "\"paclet:ref/ReactionBalancedQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ReactionBalancedQ\\\", \\\"[\
\\\", StyleBox[\\\"rxn\\\", \\\"TI\\\"], \\\"]\\\"}]\\) returns True if the \
given chemical reaction is balanced, and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ReactionBalancedQ\", \"[\", StyleBox[\"rxn\", \"TI\"], \
\"]\"}]\) returns True if the given chemical reaction is balanced, and False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ReactionBalancedQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ReactionBalancedQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`ReactionBalancedQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RegionQ",
                ButtonNote->"paclet:ref/RegionQ"],
               "\"paclet:ref/RegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid region and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RegionQ", 
                    "paclet:ref/RegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RegionQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/RegionQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RegionQ",
                ButtonNote->"paclet:ref/RegionQ"],
               "\"paclet:ref/RegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a valid region and False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RegionQ\", \"[\", StyleBox[\"reg\", \"TI\"], \"]\"}]\) \
gives True if \!\(\*StyleBox[\"reg\", \"TI\"]\) is a valid region and False \
otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/RegionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`RegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RegularlySampledQ",
                ButtonNote->"paclet:ref/RegularlySampledQ"],
               "\"paclet:ref/RegularlySampledQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RegularlySampledQ\\\", \\\"[\
\\\", StyleBox[\\\"tseries\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\
\\(\\*StyleBox[\\\"tseries\\\", \\\"TI\\\"]\\) is a regular time series, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RegularlySampledQ", 
                    "paclet:ref/RegularlySampledQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RegularlySampledQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RegularlySampledQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RegularlySampledQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RegularlySampledQ",
                ButtonNote->"paclet:ref/RegularlySampledQ"],
               "\"paclet:ref/RegularlySampledQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RegularlySampledQ\\\", \\\"[\
\\\", StyleBox[\\\"tseries\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \\!\
\\(\\*StyleBox[\\\"tseries\\\", \\\"TI\\\"]\\) is a regular time series, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RegularlySampledQ\", \"[\", StyleBox[\"tseries\", \"TI\
\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"tseries\", \"TI\"]\) is a \
regular time series, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RegularlySampledQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/RegularlySampledQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RegularlySampledQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RootOfUnityQ",
                ButtonNote->"paclet:ref/RootOfUnityQ"],
               "\"paclet:ref/RootOfUnityQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RootOfUnityQ\\\", \\\"[\\\", \
StyleBox[\\\"a\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) is a root of unity, and yields \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RootOfUnityQ", 
                    "paclet:ref/RootOfUnityQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RootOfUnityQ.\
html"], None}, "http://reference.wolfram.com/language/ref/RootOfUnityQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RootOfUnityQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RootOfUnityQ",
                ButtonNote->"paclet:ref/RootOfUnityQ"],
               "\"paclet:ref/RootOfUnityQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RootOfUnityQ\\\", \\\"[\\\", \
StyleBox[\\\"a\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"a\\\", \\\"TI\\\"]\\) is a root of unity, and yields \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RootOfUnityQ\", \"[\", StyleBox[\"a\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"a\", \"TI\"]\) is a root of unity, \
and yields False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RootOfUnityQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/RootOfUnityQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Listable, Protected}, "FullName" -> 
      "System`RootOfUnityQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SameQ",
                ButtonNote->"paclet:ref/SameQ"],
               "\"paclet:ref/SameQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \
\\\"TI\\\"], \\\"===\\\", StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\) yields True \
if the expression \\!\\(\\*StyleBox[\\\"lhs\\\", \\\"TI\\\"]\\) is identical \
to \\!\\(\\*StyleBox[\\\"rhs\\\", \\\"TI\\\"]\\), and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SameQ", 
                    "paclet:ref/SameQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SameQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/SameQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SameQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SameQ",
                ButtonNote->"paclet:ref/SameQ"],
               "\"paclet:ref/SameQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \
\\\"TI\\\"], \\\"===\\\", StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\) yields True \
if the expression \\!\\(\\*StyleBox[\\\"lhs\\\", \\\"TI\\\"]\\) is identical \
to \\!\\(\\*StyleBox[\\\"rhs\\\", \\\"TI\\\"]\\), and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{StyleBox[\"lhs\", \"TI\"], \"===\", StyleBox[\"rhs\", \
\"TI\"]}]\) yields True if the expression \!\(\*StyleBox[\"lhs\", \"TI\"]\) \
is identical to \!\(\*StyleBox[\"rhs\", \"TI\"]\), and yields False \
otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SameQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SameQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`SameQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SatisfiableQ",
                ButtonNote->"paclet:ref/SatisfiableQ"],
               "\"paclet:ref/SatisfiableQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SatisfiableQ\\\", \\\"[\\\", \
StyleBox[\\\"bf\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if a combination \
of values of variables exists that makes the Boolean function \
\\!\\(\\*StyleBox[\\\"bf\\\", \\\"TI\\\"]\\) yield \
True.\\n\\!\\(\\*RowBox[{\\\"SatisfiableQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if a combination of \
values of the \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) exists that makes the Boolean expression \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) yield True.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SatisfiableQ", 
                    "paclet:ref/SatisfiableQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SatisfiableQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SatisfiableQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SatisfiableQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SatisfiableQ",
                ButtonNote->"paclet:ref/SatisfiableQ"],
               "\"paclet:ref/SatisfiableQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SatisfiableQ\\\", \\\"[\\\", \
StyleBox[\\\"bf\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if a combination \
of values of variables exists that makes the Boolean function \
\\!\\(\\*StyleBox[\\\"bf\\\", \\\"TI\\\"]\\) yield \
True.\\n\\!\\(\\*RowBox[{\\\"SatisfiableQ\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if a combination of \
values of the \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) exists that makes the Boolean expression \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) yield True.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SatisfiableQ\", \"[\", StyleBox[\"bf\", \"TI\"], \
\"]\"}]\) gives True if a combination of values of variables exists that \
makes the Boolean function \!\(\*StyleBox[\"bf\", \"TI\"]\) yield True.\n\!\(\
\*RowBox[{\"SatisfiableQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives True if a combination of values of the \
\!\(\*SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) exists \
that makes the Boolean expression \!\(\*StyleBox[\"expr\", \"TI\"]\) yield \
True.", "Documentation" -> <|
       "Local" -> "paclet:ref/SatisfiableQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SatisfiableQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {Method -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`SatisfiableQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ScheduledTaskActiveQ",
                ButtonNote->"paclet:ref/ScheduledTaskActiveQ"],
               "\"paclet:ref/ScheduledTaskActiveQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ScheduledTaskActiveQ\\\", \\\
\"[\\\", StyleBox[\\\"obj\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \\!\
\\(\\*StyleBox[\\\"obj\\\", \\\"TI\\\"]\\) represents an active task, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ScheduledTaskActiveQ", 
                    "paclet:ref/ScheduledTaskActiveQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ScheduledTaskActiveQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ScheduledTaskActiveQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ScheduledTaskActiveQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ScheduledTaskActiveQ",
                ButtonNote->"paclet:ref/ScheduledTaskActiveQ"],
               "\"paclet:ref/ScheduledTaskActiveQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ScheduledTaskActiveQ\\\", \\\
\"[\\\", StyleBox[\\\"obj\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \\!\
\\(\\*StyleBox[\\\"obj\\\", \\\"TI\\\"]\\) represents an active task, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ScheduledTaskActiveQ\", \"[\", StyleBox[\"obj\", \
\"TI\"], \"]\"}]\) yields True if \!\(\*StyleBox[\"obj\", \"TI\"]\) \
represents an active task, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ScheduledTaskActiveQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ScheduledTaskActiveQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`ScheduledTaskActiveQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SimpleGraphQ",
                ButtonNote->"paclet:ref/SimpleGraphQ"],
               "\"paclet:ref/SimpleGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SimpleGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a simple graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SimpleGraphQ", 
                    "paclet:ref/SimpleGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SimpleGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SimpleGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SimpleGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SimpleGraphQ",
                ButtonNote->"paclet:ref/SimpleGraphQ"],
               "\"paclet:ref/SimpleGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SimpleGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a simple graph and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SimpleGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a \
simple graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SimpleGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SimpleGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`SimpleGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SimplePolygonQ",
                ButtonNote->"paclet:ref/SimplePolygonQ"],
               "\"paclet:ref/SimplePolygonQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SimplePolygonQ\\\", \
\\\"[\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the polygon \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is simple and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/SimplePolygonQ", "paclet:ref/SimplePolygonQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SimplePolygonQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/SimplePolygonQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SimplePolygonQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SimplePolygonQ",
                ButtonNote->"paclet:ref/SimplePolygonQ"],
               "\"paclet:ref/SimplePolygonQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SimplePolygonQ\\\", \
\\\"[\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
the polygon \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is simple and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SimplePolygonQ\", \"[\", StyleBox[\"poly\", \"TI\"], \
\"]\"}]\) gives True if the polygon \!\(\*StyleBox[\"poly\", \"TI\"]\) is \
simple and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SimplePolygonQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SimplePolygonQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SimplePolygonQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SimplePolyhedronQ",
                ButtonNote->"paclet:ref/SimplePolyhedronQ"],
               "\"paclet:ref/SimplePolyhedronQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SimplePolyhedronQ\\\", \\\"[\
\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the \
polyhedron \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is simple and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/SimplePolyhedronQ", 
                    "paclet:ref/SimplePolyhedronQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
SimplePolyhedronQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
SimplePolyhedronQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SimplePolyhedronQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SimplePolyhedronQ",
                ButtonNote->"paclet:ref/SimplePolyhedronQ"],
               "\"paclet:ref/SimplePolyhedronQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SimplePolyhedronQ\\\", \\\"[\
\\\", StyleBox[\\\"poly\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the \
polyhedron \\!\\(\\*StyleBox[\\\"poly\\\", \\\"TI\\\"]\\) is simple and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SimplePolyhedronQ\", \"[\", StyleBox[\"poly\", \
\"TI\"], \"]\"}]\) gives True if the polyhedron \!\(\*StyleBox[\"poly\", \"TI\
\"]\) is simple and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SimplePolyhedronQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SimplePolyhedronQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SimplePolyhedronQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SocketReadyQ",
                ButtonNote->"paclet:ref/SocketReadyQ"],
               "\"paclet:ref/SocketReadyQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SocketReadyQ\\\", \\\"[\\\", \
StyleBox[\\\"socket\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests if there is any \
data immediately available to read from the specified socket. \
\\n\\!\\(\\*RowBox[{\\\"SocketReadyQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"socket\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) waits for up to \\!\\(\\*StyleBox[\\\"t\\\", \\\
\"TI\\\"]\\) seconds to see if data becomes available to read.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SocketReadyQ", 
                    "paclet:ref/SocketReadyQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SocketReadyQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SocketReadyQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SocketReadyQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SocketReadyQ",
                ButtonNote->"paclet:ref/SocketReadyQ"],
               "\"paclet:ref/SocketReadyQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SocketReadyQ\\\", \\\"[\\\", \
StyleBox[\\\"socket\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests if there is any \
data immediately available to read from the specified socket. \
\\n\\!\\(\\*RowBox[{\\\"SocketReadyQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"socket\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) waits for up to \\!\\(\\*StyleBox[\\\"t\\\", \\\
\"TI\\\"]\\) seconds to see if data becomes available to read.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SocketReadyQ\", \"[\", StyleBox[\"socket\", \"TI\"], \
\"]\"}]\) tests if there is any data immediately available to read from the \
specified socket. \n\!\(\*RowBox[{\"SocketReadyQ\", \"[\", \
RowBox[{StyleBox[\"socket\", \"TI\"], \",\", StyleBox[\"t\", \"TI\"]}], \
\"]\"}]\) waits for up to \!\(\*StyleBox[\"t\", \"TI\"]\) seconds to see if \
data becomes available to read.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SocketReadyQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SocketReadyQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SocketReadyQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SolidRegionQ",
                ButtonNote->"paclet:ref/SolidRegionQ"],
               "\"paclet:ref/SolidRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SolidRegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the 3D region \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a solid region and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SolidRegionQ", 
                    "paclet:ref/SolidRegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SolidRegionQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SolidRegionQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SolidRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SolidRegionQ",
                ButtonNote->"paclet:ref/SolidRegionQ"],
               "\"paclet:ref/SolidRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SolidRegionQ\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if the 3D region \
\\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\) is a solid region and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SolidRegionQ\", \"[\", StyleBox[\"reg\", \"TI\"], \
\"]\"}]\) gives True if the 3D region \!\(\*StyleBox[\"reg\", \"TI\"]\) is a \
solid region and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SolidRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SolidRegionQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SolidRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SparseArrayQ",
                ButtonNote->"paclet:ref/SparseArrayQ"],
               "\"paclet:ref/SparseArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SparseArrayQ\\\", \\\"[\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) is a valid SparseArray object and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SparseArrayQ", 
                    "paclet:ref/SparseArrayQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SparseArrayQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SparseArrayQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SparseArrayQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SparseArrayQ",
                ButtonNote->"paclet:ref/SparseArrayQ"],
               "\"paclet:ref/SparseArrayQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SparseArrayQ\\\", \\\"[\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) is a valid SparseArray object and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SparseArrayQ\", \"[\", StyleBox[\"s\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"s\", \"TI\"]\) is a valid \
SparseArray object and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SparseArrayQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SparseArrayQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`SparseArrayQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SpatialObservationRegionQ",
                ButtonNote->"paclet:ref/SpatialObservationRegionQ"],
               "\"paclet:ref/SpatialObservationRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpatialObservationRegionQ\\\"\
, \\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether \
the geometric or geographic region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\
\\) can be an observation in spatial statistics. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/SpatialObservationRegionQ", 
                    "paclet:ref/SpatialObservationRegionQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
SpatialObservationRegionQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
SpatialObservationRegionQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SpatialObservationRegionQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SpatialObservationRegionQ",
                ButtonNote->"paclet:ref/SpatialObservationRegionQ"],
               "\"paclet:ref/SpatialObservationRegionQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpatialObservationRegionQ\\\"\
, \\\"[\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether \
the geometric or geographic region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\
\\) can be an observation in spatial statistics. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SpatialObservationRegionQ\", \"[\", StyleBox[\"reg\", \
\"TI\"], \"]\"}]\) tests whether the geometric or geographic region \
\!\(\*StyleBox[\"reg\", \"TI\"]\) can be an observation in spatial \
statistics. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SpatialObservationRegionQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SpatialObservationRegionQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SpatialObservationRegionQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SpeakerMatchQ",
                ButtonNote->"paclet:ref/SpeakerMatchQ"],
               "\"paclet:ref/SpeakerMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpeakerMatchQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"ref\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if speaker \
features in \\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) match the one \
from reference \\!\\(\\*StyleBox[\\\"ref\\\", \\\"TI\\\"]\\) and returns \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"SpeakerMatchQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"audio\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"audio\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"ref\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
list of results for each of \\!\\(\\*SubscriptBox[StyleBox[\\\"audio\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"SpeakerMatchQ\\\", \\\"[\\\", \
StyleBox[\\\"ref\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form \
of SpeakerMatchQ that can be applied to an audio object.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SpeakerMatchQ",
                     "paclet:ref/SpeakerMatchQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SpeakerMatchQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SpeakerMatchQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SpeakerMatchQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SpeakerMatchQ",
                ButtonNote->"paclet:ref/SpeakerMatchQ"],
               "\"paclet:ref/SpeakerMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpeakerMatchQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"audio\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"ref\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if speaker \
features in \\!\\(\\*StyleBox[\\\"audio\\\", \\\"TI\\\"]\\) match the one \
from reference \\!\\(\\*StyleBox[\\\"ref\\\", \\\"TI\\\"]\\) and returns \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"SpeakerMatchQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"audio\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"audio\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"ref\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
list of results for each of \\!\\(\\*SubscriptBox[StyleBox[\\\"audio\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"SpeakerMatchQ\\\", \\\"[\\\", \
StyleBox[\\\"ref\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form \
of SpeakerMatchQ that can be applied to an audio object.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SpeakerMatchQ\", \"[\", RowBox[{StyleBox[\"audio\", \
\"TI\"], \",\", StyleBox[\"ref\", \"TI\"]}], \"]\"}]\) gives True if speaker \
features in \!\(\*StyleBox[\"audio\", \"TI\"]\) match the one from reference \
\!\(\*StyleBox[\"ref\", \"TI\"]\) and returns False otherwise.\n\
\!\(\*RowBox[{\"SpeakerMatchQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"audio\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"audio\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"ref\", \
\"TI\"]}], \"]\"}]\) gives a list of results for each of \
\!\(\*SubscriptBox[StyleBox[\"audio\", \"TI\"], StyleBox[\"i\", \"TI\"]]\).\n\
\!\(\*RowBox[{\"SpeakerMatchQ\", \"[\", StyleBox[\"ref\", \"TI\"], \"]\"}]\) \
represents an operator form of SpeakerMatchQ that can be applied to an audio \
object.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SpeakerMatchQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SpeakerMatchQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SpeakerMatchQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SquareFreeQ",
                ButtonNote->"paclet:ref/SquareFreeQ"],
               "\"paclet:ref/SquareFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SquareFreeQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a square-free polynomial or \
number, and False otherwise.\\n\\!\\(\\*RowBox[{\\\"SquareFreeQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"vars\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is square-free with respect to \
the variables \\!\\(\\*StyleBox[\\\"vars\\\", \\\"TI\\\"]\\). \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SquareFreeQ", 
                    "paclet:ref/SquareFreeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SquareFreeQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SquareFreeQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SquareFreeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SquareFreeQ",
                ButtonNote->"paclet:ref/SquareFreeQ"],
               "\"paclet:ref/SquareFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SquareFreeQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a square-free polynomial or \
number, and False otherwise.\\n\\!\\(\\*RowBox[{\\\"SquareFreeQ\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"vars\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is square-free with respect to \
the variables \\!\\(\\*StyleBox[\\\"vars\\\", \\\"TI\\\"]\\). \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SquareFreeQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a square-free \
polynomial or number, and False otherwise.\n\!\(\*RowBox[{\"SquareFreeQ\", \
\"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"vars\", \
\"TI\"]}], \"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is \
square-free with respect to the variables \!\(\*StyleBox[\"vars\", \"TI\"]\). \
", "Documentation" -> <|
       "Local" -> "paclet:ref/SquareFreeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SquareFreeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SquareFreeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SquareMatrixQ",
                ButtonNote->"paclet:ref/SquareMatrixQ"],
               "\"paclet:ref/SquareMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SquareMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is a square matrix, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SquareMatrixQ",
                     "paclet:ref/SquareMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SquareMatrixQ.\
html"], None}, "http://reference.wolfram.com/language/ref/SquareMatrixQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SquareMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SquareMatrixQ",
                ButtonNote->"paclet:ref/SquareMatrixQ"],
               "\"paclet:ref/SquareMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SquareMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is a square matrix, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SquareMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is a square matrix, \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SquareMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SquareMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`SquareMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringContainsQ",
                ButtonNote->"paclet:ref/StringContainsQ"],
               "\"paclet:ref/StringContainsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringContainsQ\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\
\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\
\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if any \
part of \\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\) matches the string \
pattern \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and yields False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"StringContainsQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"string\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list \
of the results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"StringContainsQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of StringContainsQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/StringContainsQ", 
                    "paclet:ref/StringContainsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
StringContainsQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
StringContainsQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IgnoreCase", "\[Rule]", "False"}], ",", 
                    RowBox[{"MetaCharacters", "\[Rule]", "None"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringContainsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringContainsQ",
                ButtonNote->"paclet:ref/StringContainsQ"],
               "\"paclet:ref/StringContainsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringContainsQ\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\
\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\
\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if any \
part of \\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\) matches the string \
pattern \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and yields False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"StringContainsQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"string\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list \
of the results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"StringContainsQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of StringContainsQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"StringContainsQ\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) \
yields True if any part of \!\(\*StyleBox[\"string\", \"TI\"]\) matches the \
string pattern \!\(\*StyleBox[\"patt\", \"TI\"]\), and yields False \
otherwise.\n\!\(\*RowBox[{\"StringContainsQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) gives a list of the results for each \
of the \!\(\*SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"StringContainsQ\", \"[\", StyleBox[\"patt\", \
\"TI\"], \"]\"}]\) represents an operator form of StringContainsQ that can be \
applied to an expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/StringContainsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/StringContainsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {IgnoreCase -> False, MetaCharacters -> None}, 
      "Attributes" -> {Protected}, "FullName" -> "System`StringContainsQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringEndsQ",
                ButtonNote->"paclet:ref/StringEndsQ"],
               "\"paclet:ref/StringEndsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringEndsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the end \
of \\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\) matches the string \
pattern \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and yields False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"StringEndsQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"string\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list \
of the results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"StringEndsQ\\\", \\\"[\\\", StyleBox[\
\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of \
StringEndsQ that can be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/StringEndsQ", 
                    "paclet:ref/StringEndsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/StringEndsQ.\
html"], None}, "http://reference.wolfram.com/language/ref/StringEndsQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IgnoreCase", "\[Rule]", "False"}], ",", 
                    RowBox[{"MetaCharacters", "\[Rule]", "None"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringEndsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringEndsQ",
                ButtonNote->"paclet:ref/StringEndsQ"],
               "\"paclet:ref/StringEndsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringEndsQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the end \
of \\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\) matches the string \
pattern \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and yields False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"StringEndsQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"string\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list \
of the results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"StringEndsQ\\\", \\\"[\\\", StyleBox[\
\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of \
StringEndsQ that can be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"StringEndsQ\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) \
yields True if the end of \!\(\*StyleBox[\"string\", \"TI\"]\) matches the \
string pattern \!\(\*StyleBox[\"patt\", \"TI\"]\), and yields False \
otherwise.\n\!\(\*RowBox[{\"StringEndsQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) gives a list of the results for each \
of the \!\(\*SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"StringEndsQ\", \"[\", StyleBox[\"patt\", \
\"TI\"], \"]\"}]\) represents an operator form of StringEndsQ that can be \
applied to an expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/StringEndsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/StringEndsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {IgnoreCase -> False, MetaCharacters -> None}, 
      "Attributes" -> {Protected}, "FullName" -> "System`StringEndsQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringFormatQ",
                ButtonNote->"paclet:ref/StringFormatQ"],
               "\"paclet:ref/StringFormatQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringFormatQ\\\", \
\\\"[\\\", \
RowBox[{StyleBox[StyleBox[\\\"\\\\\\\"string\\\\\\\"\\\",ShowStringCharacters-\
>True], \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\
\\\\\\\"fmt\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", \
ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives True if the string \
\\\"\\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" might be imported as \
format \\\"\\!\\(\\*StyleBox[\\\"fmt\\\", \\\"TI\\\"]\\)\\\" and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"StringFormatQ\\\", \\\"[\\\", \
RowBox[{StyleBox[StyleBox[\\\"\\\\\\\"string\\\\\\\"\\\",ShowStringCharacters-\
>True], \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[StyleBox[\\\"\\\\\\\"string\\\\\\\"\\\",\
ShowStringCharacters->True], \\\"TI\\\"]\\) might be imported as one of \
\\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/StringFormatQ",
                     "paclet:ref/StringFormatQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/StringFormatQ.\
html"], None}, "http://reference.wolfram.com/language/ref/StringFormatQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringFormatQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringFormatQ",
                ButtonNote->"paclet:ref/StringFormatQ"],
               "\"paclet:ref/StringFormatQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringFormatQ\\\", \
\\\"[\\\", \
RowBox[{StyleBox[StyleBox[\\\"\\\\\\\"string\\\\\\\"\\\",ShowStringCharacters-\
>True], \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\
\\\\\\\"fmt\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", \
ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives True if the string \
\\\"\\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" might be imported as \
format \\\"\\!\\(\\*StyleBox[\\\"fmt\\\", \\\"TI\\\"]\\)\\\" and gives False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"StringFormatQ\\\", \\\"[\\\", \
RowBox[{StyleBox[StyleBox[\\\"\\\\\\\"string\\\\\\\"\\\",ShowStringCharacters-\
>True], \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[StyleBox[\\\"\\\\\\\"string\\\\\\\"\\\",\
ShowStringCharacters->True], \\\"TI\\\"]\\) might be imported as one of \
\\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"fmt\\\", \\\"TI\\\"], StyleBox[\\\"i\\\
\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"StringFormatQ\", \"[\", RowBox[{StyleBox[StyleBox[\"\\\
\"string\\\"\",ShowStringCharacters->True], \"TI\"], \",\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"fmt\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) gives True if the string \
\"\!\(\*StyleBox[\"string\", \"TI\"]\)\" might be imported as format \
\"\!\(\*StyleBox[\"fmt\", \"TI\"]\)\" and gives False otherwise.\n\
\!\(\*RowBox[{\"StringFormatQ\", \"[\", \
RowBox[{StyleBox[StyleBox[\"\\\"string\\\"\",ShowStringCharacters->True], \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"fmt\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"fmt\", \"TI\
\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) gives True if \
\!\(\*StyleBox[StyleBox[\"\\\"string\\\"\",ShowStringCharacters->True], \
\"TI\"]\) might be imported as one of \"\!\(\*SubscriptBox[StyleBox[\"fmt\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\)\".", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/StringFormatQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/StringFormatQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`StringFormatQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringFreeQ",
                ButtonNote->"paclet:ref/StringFreeQ"],
               "\"paclet:ref/StringFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if no \
substring in \\\"\\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" matches \
the string expression \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and \
yields False otherwise. \\n\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"patt\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"patt\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields True if \
no substring matches any of the \\!\\(\\*SubscriptBox[StyleBox[\\\"patt\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
list of results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", StyleBox[\\\"patt\\\", \\\
\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of StringFreeQ that can \
be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/StringFreeQ", 
                    "paclet:ref/StringFreeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/StringFreeQ.\
html"], None}, "http://reference.wolfram.com/language/ref/StringFreeQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IgnoreCase", "\[Rule]", "False"}], ",", 
                    RowBox[{"MetaCharacters", "\[Rule]", "None"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringFreeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringFreeQ",
                ButtonNote->"paclet:ref/StringFreeQ"],
               "\"paclet:ref/StringFreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if no \
substring in \\\"\\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" matches \
the string expression \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and \
yields False otherwise. \\n\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"patt\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"patt\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) yields True if \
no substring matches any of the \\!\\(\\*SubscriptBox[StyleBox[\\\"patt\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
list of results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", StyleBox[\\\"patt\\\", \\\
\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of StringFreeQ that can \
be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"StringFreeQ\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) \
yields True if no substring in \"\!\(\*StyleBox[\"string\", \"TI\"]\)\" \
matches the string expression \!\(\*StyleBox[\"patt\", \"TI\"]\), and yields \
False otherwise. \n\!\(\*RowBox[{\"StringFreeQ\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"patt\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"patt\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) yields True if \
no substring matches any of the \!\(\*SubscriptBox[StyleBox[\"patt\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\). \n\!\(\*RowBox[{\"StringFreeQ\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"s\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", StyleBox[\"p\", \"TI\"]}], \"]\"}]\) gives the list of \
results for each of the \!\(\*SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\
\"i\", \"TI\"]]\). \n\!\(\*RowBox[{\"StringFreeQ\", \"[\", StyleBox[\"patt\", \
\"TI\"], \"]\"}]\) represents an operator form of StringFreeQ that can be \
applied to an expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/StringFreeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/StringFreeQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {IgnoreCase -> False, MetaCharacters -> None}, 
      "Attributes" -> {Protected}, "FullName" -> "System`StringFreeQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringMatchQ",
                ButtonNote->"paclet:ref/StringMatchQ"],
               "\"paclet:ref/StringMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \\\"\\!\\(\
\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" matches the string pattern \\!\
\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
RowBox[{\\\"RegularExpression\\\", \\\"[\\\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\
\\\\*StyleBox[\\\\\\\"regex\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", \
ShowStringCharacters->True], \\\"]\\\"}]}], \\\"]\\\"}]\\) tests whether \\\"\
\\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" matches the specified \
regular expression. \\n\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
list of results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", StyleBox[\\\"patt\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of StringMatchQ that \
can be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/StringMatchQ", 
                    "paclet:ref/StringMatchQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/StringMatchQ.\
html"], None}, "http://reference.wolfram.com/language/ref/StringMatchQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IgnoreCase", "\[Rule]", "False"}], ",", 
                    RowBox[{"SpellingCorrection", "\[Rule]", "False"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringMatchQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringMatchQ",
                ButtonNote->"paclet:ref/StringMatchQ"],
               "\"paclet:ref/StringMatchQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) tests whether \\\"\\!\\(\
\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" matches the string pattern \\!\
\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
RowBox[{\\\"RegularExpression\\\", \\\"[\\\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\
\\\\*StyleBox[\\\\\\\"regex\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", \
ShowStringCharacters->True], \\\"]\\\"}]}], \\\"]\\\"}]\\) tests whether \\\"\
\\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\)\\\" matches the specified \
regular expression. \\n\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"s\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"p\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
list of results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"s\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"StringMatchQ\\\", \\\"[\\\", StyleBox[\\\"patt\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form of StringMatchQ that \
can be applied to an expression.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"StringMatchQ\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) \
tests whether \"\!\(\*StyleBox[\"string\", \"TI\"]\)\" matches the string \
pattern \!\(\*StyleBox[\"patt\", \"TI\"]\). \n\!\(\*RowBox[{\"StringMatchQ\", \
\"[\", RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\
\\\"\", ShowStringCharacters->True], \",\", RowBox[{\"RegularExpression\", \
\"[\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"regex\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]}], \"]\"}]\) tests whether \
\"\!\(\*StyleBox[\"string\", \"TI\"]\)\" matches the specified regular \
expression. \n\!\(\*RowBox[{\"StringMatchQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"p\", \
\"TI\"]}], \"]\"}]\) gives the list of results for each of the \
\!\(\*SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"i\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"StringMatchQ\", \"[\", StyleBox[\"patt\", \"TI\"], \"]\"}]\) \
represents an operator form of StringMatchQ that can be applied to an \
expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/StringMatchQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/StringMatchQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {IgnoreCase -> False, SpellingCorrection -> False}, 
      "Attributes" -> {Protected}, "FullName" -> "System`StringMatchQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringQ",
                ButtonNote->"paclet:ref/StringQ"],
               "\"paclet:ref/StringQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a string, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/StringQ", 
                    "paclet:ref/StringQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/StringQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/StringQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringQ",
                ButtonNote->"paclet:ref/StringQ"],
               "\"paclet:ref/StringQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a string, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"StringQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a string, and \
False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/StringQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/StringQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`StringQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringStartsQ",
                ButtonNote->"paclet:ref/StringStartsQ"],
               "\"paclet:ref/StringStartsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringStartsQ\\\", \
\\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the \
beginning of \\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\) matches the \
string pattern \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and yields \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"StringStartsQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"string\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list \
of the results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"StringStartsQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of StringStartsQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/StringStartsQ",
                     "paclet:ref/StringStartsQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/StringStartsQ.\
html"], None}, "http://reference.wolfram.com/language/ref/StringStartsQ.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IgnoreCase", "\[Rule]", "False"}], ",", 
                    RowBox[{"MetaCharacters", "\[Rule]", "None"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StringStartsQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/StringStartsQ",
                ButtonNote->"paclet:ref/StringStartsQ"],
               "\"paclet:ref/StringStartsQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"StringStartsQ\\\", \
\\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the \
beginning of \\!\\(\\*StyleBox[\\\"string\\\", \\\"TI\\\"]\\) matches the \
string pattern \\!\\(\\*StyleBox[\\\"patt\\\", \\\"TI\\\"]\\), and yields \
False otherwise.\\n\\!\\(\\*RowBox[{\\\"StringStartsQ\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"string\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\
\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"patt\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list \
of the results for each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"string\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"StringStartsQ\\\", \\\"[\\\", \
StyleBox[\\\"patt\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator \
form of StringStartsQ that can be applied to an expression.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"StringStartsQ\", \"[\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) \
yields True if the beginning of \!\(\*StyleBox[\"string\", \"TI\"]\) matches \
the string pattern \!\(\*StyleBox[\"patt\", \"TI\"]\), and yields False \
otherwise.\n\!\(\*RowBox[{\"StringStartsQ\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
StyleBox[\"patt\", \"TI\"]}], \"]\"}]\) gives a list of the results for each \
of the \!\(\*SubscriptBox[StyleBox[\"string\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"StringStartsQ\", \"[\", StyleBox[\"patt\", \
\"TI\"], \"]\"}]\) represents an operator form of StringStartsQ that can be \
applied to an expression.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/StringStartsQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/StringStartsQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {IgnoreCase -> False, MetaCharacters -> None}, 
      "Attributes" -> {Protected}, "FullName" -> "System`StringStartsQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html"],
               
               "\"http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"System`StructuredArrayHeadQ\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`StructuredArrayHeadQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html"],
               
               "\"http://reference.wolfram.com/language/ref/\
StructuredArrayHeadQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"System`StructuredArrayHeadQ\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "System`StructuredArrayHeadQ", 
      "Documentation" -> <|
       "Web" -> 
        "http://reference.wolfram.com/language/ref/StructuredArrayHeadQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`StructuredArrayHeadQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SubsetQ",
                ButtonNote->"paclet:ref/SubsetQ"],
               "\"paclet:ref/SubsetQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SubsetQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\) is a subset of \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SubsetQ", 
                    "paclet:ref/SubsetQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SubsetQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/SubsetQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SubsetQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SubsetQ",
                ButtonNote->"paclet:ref/SubsetQ"],
               "\"paclet:ref/SubsetQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SubsetQ\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\) is a subset of \\!\\(\\*SubscriptBox[StyleBox[\\\"list\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SubsetQ\", \"[\", RowBox[{SubscriptBox[StyleBox[\"list\
\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"list\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]}], \"]\"}]\) yields True if \
\!\(\*SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) is \
a subset of \!\(\*SubscriptBox[StyleBox[\"list\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SubsetQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SubsetQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {SameTest -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SubsetQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SymmetricMatrixQ",
                ButtonNote->"paclet:ref/SymmetricMatrixQ"],
               "\"paclet:ref/SymmetricMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SymmetricMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly symmetric, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/SymmetricMatrixQ", 
                    "paclet:ref/SymmetricMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
SymmetricMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
SymmetricMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SymmetricMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SymmetricMatrixQ",
                ButtonNote->"paclet:ref/SymmetricMatrixQ"],
               "\"paclet:ref/SymmetricMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SymmetricMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is explicitly symmetric, and \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SymmetricMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is explicitly \
symmetric, and False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SymmetricMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SymmetricMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {SameTest -> Automatic, Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`SymmetricMatrixQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SyntaxQ",
                ButtonNote->"paclet:ref/SyntaxQ"],
               "\"paclet:ref/SyntaxQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SyntaxQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) \
returns True if the string corresponds to syntactically correct input for a \
single \\!\\(\\*StyleBox[\\\"Wolfram Language\\\", \\\"RebrandingTerm\\\"]\\) \
expression, and returns False otherwise. \\n\\!\\(\\*RowBox[{\\\"SyntaxQ\\\", \
\\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses interpretation \
rules corresponding to the specified form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SyntaxQ", 
                    "paclet:ref/SyntaxQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SyntaxQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/SyntaxQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SyntaxQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SyntaxQ",
                ButtonNote->"paclet:ref/SyntaxQ"],
               "\"paclet:ref/SyntaxQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SyntaxQ\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) \
returns True if the string corresponds to syntactically correct input for a \
single \\!\\(\\*StyleBox[\\\"Wolfram Language\\\", \\\"RebrandingTerm\\\"]\\) \
expression, and returns False otherwise. \\n\\!\\(\\*RowBox[{\\\"SyntaxQ\\\", \
\\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"string\\\\\\\",\\\
\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses interpretation \
rules corresponding to the specified form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SyntaxQ\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"string\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) returns True if the string corresponds \
to syntactically correct input for a single \!\(\*StyleBox[\"Wolfram Language\
\", \"RebrandingTerm\"]\) expression, and returns False otherwise. \n\
\!\(\*RowBox[{\"SyntaxQ\", \"[\", RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\
\"string\\\",\\\"TI\\\"]\\)\\\"\", ShowStringCharacters->True], \",\", \
StyleBox[\"form\", \"TI\"]}], \"]\"}]\) uses interpretation rules \
corresponding to the specified form.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SyntaxQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/SyntaxQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`SyntaxQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TautologyQ",
                ButtonNote->"paclet:ref/TautologyQ"],
               "\"paclet:ref/TautologyQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TautologyQ\\\", \\\"[\\\", \
StyleBox[\\\"bf\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if all \
combinations of values of variables make the Boolean function \
\\!\\(\\*StyleBox[\\\"bf\\\", \\\"TI\\\"]\\) yield \
True.\\n\\!\\(\\*RowBox[{\\\"TautologyQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if all combinations of \
values of the \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) make the Boolean expression \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) yield True.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/TautologyQ", 
                    "paclet:ref/TautologyQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TautologyQ.\
html"], None}, "http://reference.wolfram.com/language/ref/TautologyQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TautologyQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TautologyQ",
                ButtonNote->"paclet:ref/TautologyQ"],
               "\"paclet:ref/TautologyQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TautologyQ\\\", \\\"[\\\", \
StyleBox[\\\"bf\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if all \
combinations of values of variables make the Boolean function \
\\!\\(\\*StyleBox[\\\"bf\\\", \\\"TI\\\"]\\) yield \
True.\\n\\!\\(\\*RowBox[{\\\"TautologyQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives True if all combinations of \
values of the \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) make the Boolean expression \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) yield True.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"TautologyQ\", \"[\", StyleBox[\"bf\", \"TI\"], \"]\"}]\
\) gives True if all combinations of values of variables make the Boolean \
function \!\(\*StyleBox[\"bf\", \"TI\"]\) yield True.\n\
\!\(\*RowBox[{\"TautologyQ\", \"[\", RowBox[{StyleBox[\"expr\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\
\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives True if all combinations of values of the \
\!\(\*SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) make \
the Boolean expression \!\(\*StyleBox[\"expr\", \"TI\"]\) yield True.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/TautologyQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/TautologyQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {Method -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`TautologyQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/TensorQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/TensorQ.html"],
               "\"http://reference.wolfram.com/language/ref/TensorQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`TensorQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TensorQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/TensorQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TensorQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/TensorQ.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/TensorQ.html"],
               "\"http://reference.wolfram.com/language/ref/TensorQ.html\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`TensorQ\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "System`TensorQ", 
      "Documentation" -> <|
       "Web" -> "http://reference.wolfram.com/language/ref/TensorQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`TensorQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TimeObjectQ",
                ButtonNote->"paclet:ref/TimeObjectQ"],
               "\"paclet:ref/TimeObjectQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TimeObjectQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a TimeObject with valid \
arguments, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/TimeObjectQ", 
                    "paclet:ref/TimeObjectQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TimeObjectQ.\
html"], None}, "http://reference.wolfram.com/language/ref/TimeObjectQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TimeObjectQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TimeObjectQ",
                ButtonNote->"paclet:ref/TimeObjectQ"],
               "\"paclet:ref/TimeObjectQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TimeObjectQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a TimeObject with valid \
arguments, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"TimeObjectQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a TimeObject \
with valid arguments, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/TimeObjectQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/TimeObjectQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`TimeObjectQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TreeGraphQ",
                ButtonNote->"paclet:ref/TreeGraphQ"],
               "\"paclet:ref/TreeGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TreeGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a tree and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/TreeGraphQ", 
                    "paclet:ref/TreeGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TreeGraphQ.\
html"], None}, "http://reference.wolfram.com/language/ref/TreeGraphQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TreeGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TreeGraphQ",
                ButtonNote->"paclet:ref/TreeGraphQ"],
               "\"paclet:ref/TreeGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TreeGraphQ\\\", \\\"[\\\", \
StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the graph \
\\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a tree and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"TreeGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a tree \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/TreeGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/TreeGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`TreeGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TreeLeafQ",
                ButtonNote->"paclet:ref/TreeLeafQ"],
               "\"paclet:ref/TreeLeafQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TreeLeafQ\\\", \\\"[\\\", \
StyleBox[\\\"tree\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"tree\\\", \\\"TI\\\"]\\) is a Tree object with no \
children, and gives False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/TreeLeafQ", 
                    "paclet:ref/TreeLeafQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TreeLeafQ.\
html"], None}, "http://reference.wolfram.com/language/ref/TreeLeafQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TreeLeafQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TreeLeafQ",
                ButtonNote->"paclet:ref/TreeLeafQ"],
               "\"paclet:ref/TreeLeafQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TreeLeafQ\\\", \\\"[\\\", \
StyleBox[\\\"tree\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"tree\\\", \\\"TI\\\"]\\) is a Tree object with no \
children, and gives False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"TreeLeafQ\", \"[\", StyleBox[\"tree\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"tree\", \"TI\"]\) is a Tree object \
with no children, and gives False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/TreeLeafQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/TreeLeafQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`TreeLeafQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TreeQ",
                ButtonNote->"paclet:ref/TreeQ"],
               "\"paclet:ref/TreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TreeQ\\\", \\\"[\\\", \
StyleBox[\\\"tree\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"tree\\\", \\\"TI\\\"]\\) is a valid Tree object and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/TreeQ", 
                    "paclet:ref/TreeQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TreeQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/TreeQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TreeQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TreeQ",
                ButtonNote->"paclet:ref/TreeQ"],
               "\"paclet:ref/TreeQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TreeQ\\\", \\\"[\\\", \
StyleBox[\\\"tree\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"tree\\\", \\\"TI\\\"]\\) is a valid Tree object and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"TreeQ\", \"[\", StyleBox[\"tree\", \"TI\"], \"]\"}]\) \
yields True if \!\(\*StyleBox[\"tree\", \"TI\"]\) is a valid Tree object and \
False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/TreeQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/TreeQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`TreeQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TrueQ",
                ButtonNote->"paclet:ref/TrueQ"],
               "\"paclet:ref/TrueQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TrueQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is True, and yields False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/TrueQ", 
                    "paclet:ref/TrueQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/TrueQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/TrueQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TrueQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TrueQ",
                ButtonNote->"paclet:ref/TrueQ"],
               "\"paclet:ref/TrueQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TrueQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is True, and yields False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"TrueQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
yields True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is True, and yields False \
otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/TrueQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/TrueQ.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
      "System`TrueQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UnateQ",
                ButtonNote->"paclet:ref/UnateQ"],
               "\"paclet:ref/UnateQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnateQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"bexpr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) tests whether the Boolean \
expression \\!\\(\\*StyleBox[\\\"bexpr\\\", \\\"TI\\\"]\\) is positive unate \
in the variables \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis] .\\n\\!\\(\\*RowBox[{\\\"UnateQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"bexpr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Not]\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\",\\\", RowBox[{\\\"\[Not]\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}]}], \\\"]\\\"}]\\) tests whether the Boolean expression \
\\!\\(\\*StyleBox[\\\"bexpr\\\", \\\"TI\\\"]\\) is negative unate in the \
variables \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis] .\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/UnateQ", 
                    "paclet:ref/UnateQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/UnateQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/UnateQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`UnateQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UnateQ",
                ButtonNote->"paclet:ref/UnateQ"],
               "\"paclet:ref/UnateQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnateQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"bexpr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) tests whether the Boolean \
expression \\!\\(\\*StyleBox[\\\"bexpr\\\", \\\"TI\\\"]\\) is positive unate \
in the variables \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis] .\\n\\!\\(\\*RowBox[{\\\"UnateQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"bexpr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"\[Not]\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\",\\\", RowBox[{\\\"\[Not]\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}]}], \\\"]\\\"}]\\) tests whether the Boolean expression \
\\!\\(\\*StyleBox[\\\"bexpr\\\", \\\"TI\\\"]\\) is negative unate in the \
variables \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis] .\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"UnateQ\", \"[\", RowBox[{StyleBox[\"bexpr\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\
\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
tests whether the Boolean expression \!\(\*StyleBox[\"bexpr\", \"TI\"]\) is \
positive unate in the variables \!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\), \[Ellipsis] .\n\!\(\*RowBox[{\"UnateQ\", \"[\", \
RowBox[{StyleBox[\"bexpr\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{RowBox[{\"\
\[Not]\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \
\",\", RowBox[{\"\[Not]\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\
\", \"TR\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \
\"]\"}]\) tests whether the Boolean expression \!\(\*StyleBox[\"bexpr\", \"TI\
\"]\) is negative unate in the variables \!\(\*SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\), \!\(\*SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\), \[Ellipsis] .", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/UnateQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/UnateQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`UnateQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UndirectedGraphQ",
                ButtonNote->"paclet:ref/UndirectedGraphQ"],
               "\"paclet:ref/UndirectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UndirectedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an undirected graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/UndirectedGraphQ", 
                    "paclet:ref/UndirectedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
UndirectedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
UndirectedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`UndirectedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UndirectedGraphQ",
                ButtonNote->"paclet:ref/UndirectedGraphQ"],
               "\"paclet:ref/UndirectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UndirectedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is an undirected graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"UndirectedGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is an \
undirected graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/UndirectedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/UndirectedGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`UndirectedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UnitaryMatrixQ",
                ButtonNote->"paclet:ref/UnitaryMatrixQ"],
               "\"paclet:ref/UnitaryMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnitaryMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is a unitary matrix, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/UnitaryMatrixQ", "paclet:ref/UnitaryMatrixQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/UnitaryMatrixQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/UnitaryMatrixQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Normalized", "\[Rule]", "True"}], ",", 
                    RowBox[{"SameTest", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`UnitaryMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UnitaryMatrixQ",
                ButtonNote->"paclet:ref/UnitaryMatrixQ"],
               "\"paclet:ref/UnitaryMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UnitaryMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is a unitary matrix, and False \
otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"UnitaryMatrixQ\", \"[\", StyleBox[\"m\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is a unitary matrix, \
and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/UnitaryMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/UnitaryMatrixQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       Normalized -> True, SameTest -> Automatic, Tolerance -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`UnitaryMatrixQ"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UnsameQ",
                ButtonNote->"paclet:ref/UnsameQ"],
               "\"paclet:ref/UnsameQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \
\\\"TI\\\"], \\\"=!=\\\", StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\) yields True \
if the expression \\!\\(\\*StyleBox[\\\"lhs\\\", \\\"TI\\\"]\\) is not \
identical to \\!\\(\\*StyleBox[\\\"rhs\\\", \\\"TI\\\"]\\), and yields False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/UnsameQ", 
                    "paclet:ref/UnsameQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/UnsameQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/UnsameQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`UnsameQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UnsameQ",
                ButtonNote->"paclet:ref/UnsameQ"],
               "\"paclet:ref/UnsameQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{StyleBox[\\\"lhs\\\", \
\\\"TI\\\"], \\\"=!=\\\", StyleBox[\\\"rhs\\\", \\\"TI\\\"]}]\\) yields True \
if the expression \\!\\(\\*StyleBox[\\\"lhs\\\", \\\"TI\\\"]\\) is not \
identical to \\!\\(\\*StyleBox[\\\"rhs\\\", \\\"TI\\\"]\\), and yields False \
otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{StyleBox[\"lhs\", \"TI\"], \"=!=\", StyleBox[\"rhs\", \
\"TI\"]}]\) yields True if the expression \!\(\*StyleBox[\"lhs\", \"TI\"]\) \
is not identical to \!\(\*StyleBox[\"rhs\", \"TI\"]\), and yields False \
otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/UnsameQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/UnsameQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`UnsameQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UpperCaseQ",
                ButtonNote->"paclet:ref/UpperCaseQ"],
               "\"paclet:ref/UpperCaseQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UpperCaseQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are uppercase letters, and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/UpperCaseQ", 
                    "paclet:ref/UpperCaseQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/UpperCaseQ.\
html"], None}, "http://reference.wolfram.com/language/ref/UpperCaseQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`UpperCaseQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UpperCaseQ",
                ButtonNote->"paclet:ref/UpperCaseQ"],
               "\"paclet:ref/UpperCaseQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UpperCaseQ\\\", \\\"[\\\", \
StyleBox[\\\"string\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if all the \
characters in the string are uppercase letters, and yields False otherwise. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"UpperCaseQ\", \"[\", StyleBox[\"string\", \"TI\"], \"]\
\"}]\) yields True if all the characters in the string are uppercase letters, \
and yields False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/UpperCaseQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/UpperCaseQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`UpperCaseQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UpperTriangularMatrixQ",
                ButtonNote->"paclet:ref/UpperTriangularMatrixQ"],
               "\"paclet:ref/UpperTriangularMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UpperTriangularMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is upper triangular, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"UpperTriangularMatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) is upper triangular starting up from the \
\\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) \
diagonal, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/UpperTriangularMatrixQ", 
                    "paclet:ref/UpperTriangularMatrixQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
UpperTriangularMatrixQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
UpperTriangularMatrixQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Tolerance", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"ZeroTest", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`UpperTriangularMatrixQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/UpperTriangularMatrixQ",
                ButtonNote->"paclet:ref/UpperTriangularMatrixQ"],
               "\"paclet:ref/UpperTriangularMatrixQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"UpperTriangularMatrixQ\\\", \
\\\"[\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) is upper triangular, and False \
otherwise.\\n\\!\\(\\*RowBox[{\\\"UpperTriangularMatrixQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if \\!\\(\\*StyleBox[\\\"m\\\", \
\\\"TI\\\"]\\) is upper triangular starting up from the \
\\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) \
diagonal, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"UpperTriangularMatrixQ\", \"[\", StyleBox[\"m\", \
\"TI\"], \"]\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is upper \
triangular, and False otherwise.\n\!\(\*RowBox[{\"UpperTriangularMatrixQ\", \
\"[\", RowBox[{StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"]}], \"]\
\"}]\) gives True if \!\(\*StyleBox[\"m\", \"TI\"]\) is upper triangular \
starting up from the \!\(\*StyleBox[\"k\", \"TI\"]\)\!\(\*SuperscriptBox[\"\
\[Null]\", \"th\"]\) diagonal, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/UpperTriangularMatrixQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/UpperTriangularMatrixQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Tolerance -> Automatic, ZeroTest -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> 
      "System`UpperTriangularMatrixQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ValueQ",
                ButtonNote->"paclet:ref/ValueQ"],
               "\"paclet:ref/ValueQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ValueQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if a value has \
been defined for \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), and gives \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ValueQ", 
                    "paclet:ref/ValueQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ValueQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/ValueQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ValueQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/ValueQ",
                ButtonNote->"paclet:ref/ValueQ"],
               "\"paclet:ref/ValueQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ValueQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if a value has \
been defined for \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), and gives \
False otherwise. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"ValueQ\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives True if a value has been defined for \!\(\*StyleBox[\"expr\", \
\"TI\"]\), and gives False otherwise. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/ValueQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/ValueQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {Method -> Automatic}, 
      "Attributes" -> {HoldAll, Protected, ReadProtected}, "FullName" -> 
      "System`ValueQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VectorQ",
                ButtonNote->"paclet:ref/VectorQ"],
               "\"paclet:ref/VectorQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VectorQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a list or a \
one\[Hyphen]dimensional SparseArray object, none of whose elements are \
themselves lists, and gives False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"VectorQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True only if \\!\\(\\*StyleBox[\\\"test\\\
\", \\\"TI\\\"]\\) yields True when applied to each of the elements in \\!\\(\
\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/VectorQ", 
                    "paclet:ref/VectorQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/VectorQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/VectorQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`VectorQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VectorQ",
                ButtonNote->"paclet:ref/VectorQ"],
               "\"paclet:ref/VectorQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VectorQ\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) is a list or a \
one\[Hyphen]dimensional SparseArray object, none of whose elements are \
themselves lists, and gives False otherwise. \
\\n\\!\\(\\*RowBox[{\\\"VectorQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives True only if \\!\\(\\*StyleBox[\\\"test\\\
\", \\\"TI\\\"]\\) yields True when applied to each of the elements in \\!\\(\
\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"VectorQ\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) gives True if \!\(\*StyleBox[\"expr\", \"TI\"]\) is a list or a one\
\[Hyphen]dimensional SparseArray object, none of whose elements are \
themselves lists, and gives False otherwise. \n\!\(\*RowBox[{\"VectorQ\", \"[\
\", RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"]}], \
\"]\"}]\) gives True only if \!\(\*StyleBox[\"test\", \"TI\"]\) yields True \
when applied to each of the elements in \!\(\*StyleBox[\"expr\", \"TI\"]\). ",
       "Documentation" -> <|
       "Local" -> "paclet:ref/VectorQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/VectorQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`VectorQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexCoverQ",
                ButtonNote->"paclet:ref/VertexCoverQ"],
               "\"paclet:ref/VertexCoverQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexCoverQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the vertex list \
\\!\\(\\*StyleBox[\\\"vlist\\\", \\\"TI\\\"]\\) is a vertex cover of the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/VertexCoverQ", 
                    "paclet:ref/VertexCoverQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/VertexCoverQ.\
html"], None}, "http://reference.wolfram.com/language/ref/VertexCoverQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`VertexCoverQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexCoverQ",
                ButtonNote->"paclet:ref/VertexCoverQ"],
               "\"paclet:ref/VertexCoverQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexCoverQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if the vertex list \
\\!\\(\\*StyleBox[\\\"vlist\\\", \\\"TI\\\"]\\) is a vertex cover of the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\), and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"VertexCoverQ\", \"[\", RowBox[{StyleBox[\"g\", \
\"TI\"], \",\", StyleBox[\"vlist\", \"TI\"]}], \"]\"}]\) yields True if the \
vertex list \!\(\*StyleBox[\"vlist\", \"TI\"]\) is a vertex cover of the \
graph \!\(\*StyleBox[\"g\", \"TI\"]\), and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/VertexCoverQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/VertexCoverQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`VertexCoverQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexQ",
                ButtonNote->"paclet:ref/VertexQ"],
               "\"paclet:ref/VertexQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\) is a vertex in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\
\"]\\) and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/VertexQ", 
                    "paclet:ref/VertexQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/VertexQ.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/VertexQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`VertexQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexQ",
                ButtonNote->"paclet:ref/VertexQ"],
               "\"paclet:ref/VertexQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"v\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields True if \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\) is a vertex in the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\
\"]\\) and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"VertexQ\", \"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\
\", StyleBox[\"v\", \"TI\"]}], \"]\"}]\) yields True if \!\(\*StyleBox[\"v\", \
\"TI\"]\) is a vertex in the graph \!\(\*StyleBox[\"g\", \"TI\"]\) and False \
otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/VertexQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/VertexQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`VertexQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexTransitiveGraphQ",
                ButtonNote->"paclet:ref/VertexTransitiveGraphQ"],
               "\"paclet:ref/VertexTransitiveGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexTransitiveGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a \
vertex\[Dash]transitive graph and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/VertexTransitiveGraphQ", 
                    "paclet:ref/VertexTransitiveGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
VertexTransitiveGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
VertexTransitiveGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`VertexTransitiveGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexTransitiveGraphQ",
                ButtonNote->"paclet:ref/VertexTransitiveGraphQ"],
               "\"paclet:ref/VertexTransitiveGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexTransitiveGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a \
vertex\[Dash]transitive graph and False otherwise.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"VertexTransitiveGraphQ\", \"[\", StyleBox[\"g\", \
\"TI\"], \"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) \
is a vertex\[Dash]transitive graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/VertexTransitiveGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/VertexTransitiveGraphQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`VertexTransitiveGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexWeightedGraphQ",
                ButtonNote->"paclet:ref/VertexWeightedGraphQ"],
               "\"paclet:ref/VertexWeightedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexWeightedGraphQ\\\", \\\
\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a vertex-weighted graph, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/VertexWeightedGraphQ", 
                    "paclet:ref/VertexWeightedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
VertexWeightedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
VertexWeightedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Listable", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`VertexWeightedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VertexWeightedGraphQ",
                ButtonNote->"paclet:ref/VertexWeightedGraphQ"],
               "\"paclet:ref/VertexWeightedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VertexWeightedGraphQ\\\", \\\
\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a vertex-weighted graph, \
and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"VertexWeightedGraphQ\", \"[\", StyleBox[\"g\", \
\"TI\"], \"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) \
is a vertex-weighted graph, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/VertexWeightedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/VertexWeightedGraphQ.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Listable, Protected}, 
      "FullName" -> "System`VertexWeightedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VideoQ",
                ButtonNote->"paclet:ref/VideoQ"],
               "\"paclet:ref/VideoQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VideoQ\\\", \\\"[\\\", \
StyleBox[\\\"video\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"video\\\", \\\"TI\\\"]\\) has the form of a valid Video \
object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/VideoQ", 
                    "paclet:ref/VideoQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/VideoQ.html"], 
                    None}, "http://reference.wolfram.com/language/ref/VideoQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`VideoQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/VideoQ",
                ButtonNote->"paclet:ref/VideoQ"],
               "\"paclet:ref/VideoQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"VideoQ\\\", \\\"[\\\", \
StyleBox[\\\"video\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if \
\\!\\(\\*StyleBox[\\\"video\\\", \\\"TI\\\"]\\) has the form of a valid Video \
object, and False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"VideoQ\", \"[\", StyleBox[\"video\", \"TI\"], \
\"]\"}]\) yields True if \!\(\*StyleBox[\"video\", \"TI\"]\) has the form of \
a valid Video object, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/VideoQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/VideoQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`VideoQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/WeaklyConnectedGraphQ",
                ButtonNote->"paclet:ref/WeaklyConnectedGraphQ"],
               "\"paclet:ref/WeaklyConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WeaklyConnectedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is weakly connected, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/WeaklyConnectedGraphQ", 
                    "paclet:ref/WeaklyConnectedGraphQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
WeaklyConnectedGraphQ.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
WeaklyConnectedGraphQ.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`WeaklyConnectedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/WeaklyConnectedGraphQ",
                ButtonNote->"paclet:ref/WeaklyConnectedGraphQ"],
               "\"paclet:ref/WeaklyConnectedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WeaklyConnectedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is weakly connected, and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"WeaklyConnectedGraphQ\", \"[\", StyleBox[\"g\", \
\"TI\"], \"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) \
is weakly connected, and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/WeaklyConnectedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/WeaklyConnectedGraphQ.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`WeaklyConnectedGraphQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/WeightedGraphQ",
                ButtonNote->"paclet:ref/WeightedGraphQ"],
               "\"paclet:ref/WeightedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WeightedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a weighted graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/WeightedGraphQ", "paclet:ref/WeightedGraphQ", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/WeightedGraphQ.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/WeightedGraphQ.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`WeightedGraphQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/WeightedGraphQ",
                ButtonNote->"paclet:ref/WeightedGraphQ"],
               "\"paclet:ref/WeightedGraphQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"WeightedGraphQ\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) yields True if the \
graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\\\"]\\) is a weighted graph and \
False otherwise.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"WeightedGraphQ\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) yields True if the graph \!\(\*StyleBox[\"g\", \"TI\"]\) is a \
weighted graph and False otherwise.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/WeightedGraphQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/WeightedGraphQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`WeightedGraphQ"|>, True]]}], "}"}]], "Output",
 CellChangeTimes->{3.8701845421624823`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"6db0a870-5bcb-4915-ad77-4b9ac5f08d75"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", "\"\<*empty*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.870184627222747*^9, 3.8701846556759057`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"73aa65c7-7123-438d-87db-f8043b65516a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Name" -> "EmptyQ", "ResourceType" -> "Function", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "EmptyQ", "ShortName" -> "EmptyQ", "UUID" -> 
           "01f7fd78-1b1a-49f8-bf68-0e8c37fcece9", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Test whether a structure can be considered empty", 
           "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$e01f4e6cfc924b858b7b42ec96e20c4f`EmptyQ"|>], 
        "Description" -> "Test whether a structure can be considered empty", 
        "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
EmptyQ"]|>, <|
       "Name" -> "ContextModule", "ResourceType" -> "Function", 
        "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "ContextModule", "ShortName" -> "ContextModule", "UUID" -> 
           "c10d585b-c6b9-43df-a64f-1b6801061ddb", "ResourceType" -> 
           "Function", "Version" -> "1.0.0", "Description" -> 
           "Temporarily set $Context and $ContextPath to a unique empty \
context for an evaluation", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "SymbolName" -> 
           "FunctionRepository`$3ccd08649b384594b1c6804c9ac39aef`\
ContextModule"|>], "Description" -> 
        "Temporarily set $Context and $ContextPath to a unique empty context \
for an evaluation", "Location" -> URL["https://resources.wolframcloud.com"], 
        "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
ContextModule"]|>, <|
       "Name" -> "Sketch-RNN Trained on QuickDraw Data", "ResourceType" -> 
        "NeuralNet", "ResourceObject" -> 
        ResourceObject[<|
          "Name" -> "Sketch-RNN Trained on QuickDraw Data", "UUID" -> 
           "3733fed3-f297-454c-b18e-3789ac74856c", "ResourceType" -> 
           "NeuralNet", "Version" -> "1.1.0", "Description" -> 
           "Generate hand-drawn sketches", "RepositoryLocation" -> 
           URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
           "WolframLanguageVersionRequired" -> "12.0", 
           "ContentElements" -> {
            "ConstructionNotebook", "ConstructionNotebookExpression", 
             "EvaluationExample", "EvaluationNet", 
             "EvaluationNet:Bee-FlowerGenU", "EvaluationNet:Cat-BusGenU", 
             "EvaluationNet:CatGenU", "EvaluationNet:Cat-PigGenU", 
             "EvaluationNet:ChairGenU", "EvaluationNet:Crab-ChairGenU", 
             "EvaluationNet:ElephantGenU", "EvaluationNet:Elephant-PigGenU", 
             "EvaluationNet:FlowerGenU", "EvaluationNet:Flower-YogaGenU", 
             "UninitializedEvaluationNet", 
             "UninitializedEvaluationNet:Bee-FlowerGenU", 
             "UninitializedEvaluationNet:Cat-BusGenU", 
             "UninitializedEvaluationNet:CatGenU", 
             "UninitializedEvaluationNet:Cat-PigGenU", 
             "UninitializedEvaluationNet:ChairGenU", 
             "UninitializedEvaluationNet:Crab-ChairGenU", 
             "UninitializedEvaluationNet:ElephantGenU", 
             "UninitializedEvaluationNet:Elephant-PigGenU", 
             "UninitializedEvaluationNet:FlowerGenU", 
             "UninitializedEvaluationNet:Flower-YogaGenU", 
             "EvaluationNet:AlarmClockGenU", "EvaluationNet:AmbulanceGenU", 
             "EvaluationNet:AngelGenU", "EvaluationNet:AntGenU", 
             "EvaluationNet:Ant-YogaGenU", "EvaluationNet:BackpackGenU", 
             "EvaluationNet:BarnGenU", "EvaluationNet:BasketGenU", 
             "EvaluationNet:BearGenU", "EvaluationNet:BeeGenU", 
             "EvaluationNet:BicycleGenU", "EvaluationNet:BirdGenU", 
             "EvaluationNet:BookGenU", "EvaluationNet:BrainGenU", 
             "EvaluationNet:BridgeGenU", "EvaluationNet:BulldozerGenU", 
             "EvaluationNet:BusGenU", "EvaluationNet:ButterflyGenU", 
             "EvaluationNet:CactusGenU", "EvaluationNet:CalendarGenU", 
             "EvaluationNet:CastleGenU", "EvaluationNet:CouchGenU", 
             "EvaluationNet:CrabGenU", 
             "EvaluationNet:Crab-Rabbit-Face-PigGenU", 
             "EvaluationNet:CruiseShipGenU", "EvaluationNet:DivingBoardGenU", 
             "EvaluationNet:Dog-BunnyGenU", "EvaluationNet:DogGenU", 
             "EvaluationNet:DolphinGenU", "EvaluationNet:DuckGenU", 
             "EvaluationNet:EverythingGenU", "EvaluationNet:EyeGenU", 
             "EvaluationNet:FaceGenU", "EvaluationNet:FanGenU", 
             "EvaluationNet:FireHydrantGenU", "EvaluationNet:FireTruckGenU", 
             "EvaluationNet:FlamingoGenU", "EvaluationNet:FrogGenU", 
             "EvaluationNet:Frog-SofaGenU", "EvaluationNet:GardenGenU", 
             "EvaluationNet:HandGenU", "EvaluationNet:Hedge-BerryGenU", 
             "EvaluationNet:HedgehogGenU", "EvaluationNet:HelicopterGenU", 
             "EvaluationNet:KangarooGenU", "EvaluationNet:KeyGenU", 
             "EvaluationNet:LanternGenU", "EvaluationNet:LighthouseGenU", 
             "EvaluationNet:LionGenU", "EvaluationNet:Lion-SheepGenU", 
             "EvaluationNet:LobsterGenU", "EvaluationNet:MapGenU", 
             "EvaluationNet:MermaidGenU", "EvaluationNet:MonaLisaGenU", 
             "EvaluationNet:MonaLisa-PassportGenU", 
             "EvaluationNet:MonkeyGenU", "EvaluationNet:MosquitoGenU", 
             "EvaluationNet:OctopusGenU", "EvaluationNet:OwlGenU", 
             "EvaluationNet:PaintbrushGenU", "EvaluationNet:PalmTreeGenU", 
             "EvaluationNet:ParrotGenU", "EvaluationNet:PassportGenU", 
             "EvaluationNet:PeasGenU", "EvaluationNet:PenguinGenU", 
             "EvaluationNet:PigGenU", "EvaluationNet:PigsheepGenU", 
             "EvaluationNet:PineappleGenU", "EvaluationNet:PoolGenU", 
             "EvaluationNet:PostcardGenU", "EvaluationNet:PowerOutletGenU", 
             "EvaluationNet:RabbitGenU", "EvaluationNet:Rabbit-TurtleGenU", 
             "EvaluationNet:Radio-FaceGenU", "EvaluationNet:RadioGenU", 
             "EvaluationNet:RainGenU", "EvaluationNet:RhinocerosGenU", 
             "EvaluationNet:RifleGenU", "EvaluationNet:RollerCoasterGenU", 
             "EvaluationNet:SandwichGenU", "EvaluationNet:ScorpionGenU", 
             "EvaluationNet:SeaTurtleGenU", "EvaluationNet:SheepGenU", 
             "EvaluationNet:SkullGenU", "EvaluationNet:SnailGenU", 
             "EvaluationNet:SnowflakeGenU", "EvaluationNet:SpeedboatGenU", 
             "EvaluationNet:SpiderGenU", "EvaluationNet:SquirrelGenU", 
             "EvaluationNet:SteakGenU", "EvaluationNet:StoveGenU", 
             "EvaluationNet:StrawberryGenU", "EvaluationNet:SwanGenU", 
             "EvaluationNet:SwingSetGenU", "EvaluationNet:TigerGenU", 
             "EvaluationNet:ToothbrushGenU", "EvaluationNet:ToothpasteGenU", 
             "EvaluationNet:TractorGenU", "EvaluationNet:TromboneGenU", 
             "EvaluationNet:TruckGenU", "EvaluationNet:WhaleGenU", 
             "EvaluationNet:WindmillGenU", "EvaluationNet:Yoga-BicycleGenU", 
             "EvaluationNet:YogaGenU", 
             "UninitializedEvaluationNet:AlarmClockGenU", 
             "UninitializedEvaluationNet:AmbulanceGenU", 
             "UninitializedEvaluationNet:AngelGenU", 
             "UninitializedEvaluationNet:AntGenU", 
             "UninitializedEvaluationNet:Ant-YogaGenU", 
             "UninitializedEvaluationNet:BackpackGenU", 
             "UninitializedEvaluationNet:BarnGenU", 
             "UninitializedEvaluationNet:BasketGenU", 
             "UninitializedEvaluationNet:BearGenU", 
             "UninitializedEvaluationNet:BeeGenU", 
             "UninitializedEvaluationNet:BicycleGenU", 
             "UninitializedEvaluationNet:BirdGenU", 
             "UninitializedEvaluationNet:BookGenU", 
             "UninitializedEvaluationNet:BrainGenU", 
             "UninitializedEvaluationNet:BridgeGenU", 
             "UninitializedEvaluationNet:BulldozerGenU", 
             "UninitializedEvaluationNet:BusGenU", 
             "UninitializedEvaluationNet:ButterflyGenU", 
             "UninitializedEvaluationNet:CactusGenU", 
             "UninitializedEvaluationNet:CalendarGenU", 
             "UninitializedEvaluationNet:CastleGenU", 
             "UninitializedEvaluationNet:CouchGenU", 
             "UninitializedEvaluationNet:CrabGenU", 
             "UninitializedEvaluationNet:Crab-Rabbit-Face-PigGenU", 
             "UninitializedEvaluationNet:CruiseShipGenU", 
             "UninitializedEvaluationNet:DivingBoardGenU", 
             "UninitializedEvaluationNet:Dog-BunnyGenU", 
             "UninitializedEvaluationNet:DogGenU", 
             "UninitializedEvaluationNet:DolphinGenU", 
             "UninitializedEvaluationNet:DuckGenU", 
             "UninitializedEvaluationNet:EverythingGenU", 
             "UninitializedEvaluationNet:EyeGenU", 
             "UninitializedEvaluationNet:FaceGenU", 
             "UninitializedEvaluationNet:FanGenU", 
             "UninitializedEvaluationNet:FireHydrantGenU", 
             "UninitializedEvaluationNet:FireTruckGenU", 
             "UninitializedEvaluationNet:FlamingoGenU", 
             "UninitializedEvaluationNet:FrogGenU", 
             "UninitializedEvaluationNet:Frog-SofaGenU", 
             "UninitializedEvaluationNet:GardenGenU", 
             "UninitializedEvaluationNet:HandGenU", 
             "UninitializedEvaluationNet:Hedge-BerryGenU", 
             "UninitializedEvaluationNet:HedgehogGenU", 
             "UninitializedEvaluationNet:HelicopterGenU", 
             "UninitializedEvaluationNet:KangarooGenU", 
             "UninitializedEvaluationNet:KeyGenU", 
             "UninitializedEvaluationNet:LanternGenU", 
             "UninitializedEvaluationNet:LighthouseGenU", 
             "UninitializedEvaluationNet:LionGenU", 
             "UninitializedEvaluationNet:Lion-SheepGenU", 
             "UninitializedEvaluationNet:LobsterGenU", 
             "UninitializedEvaluationNet:MapGenU", 
             "UninitializedEvaluationNet:MermaidGenU", 
             "UninitializedEvaluationNet:MonaLisaGenU", 
             "UninitializedEvaluationNet:MonaLisa-PassportGenU", 
             "UninitializedEvaluationNet:MonkeyGenU", 
             "UninitializedEvaluationNet:MosquitoGenU", 
             "UninitializedEvaluationNet:OctopusGenU", 
             "UninitializedEvaluationNet:OwlGenU", 
             "UninitializedEvaluationNet:PaintbrushGenU", 
             "UninitializedEvaluationNet:PalmTreeGenU", 
             "UninitializedEvaluationNet:ParrotGenU", 
             "UninitializedEvaluationNet:PassportGenU", 
             "UninitializedEvaluationNet:PeasGenU", 
             "UninitializedEvaluationNet:PenguinGenU", 
             "UninitializedEvaluationNet:PigGenU", 
             "UninitializedEvaluationNet:PigsheepGenU", 
             "UninitializedEvaluationNet:PineappleGenU", 
             "UninitializedEvaluationNet:PoolGenU", 
             "UninitializedEvaluationNet:PostcardGenU", 
             "UninitializedEvaluationNet:PowerOutletGenU", 
             "UninitializedEvaluationNet:RabbitGenU", 
             "UninitializedEvaluationNet:Rabbit-TurtleGenU", 
             "UninitializedEvaluationNet:Radio-FaceGenU", 
             "UninitializedEvaluationNet:RadioGenU", 
             "UninitializedEvaluationNet:RainGenU", 
             "UninitializedEvaluationNet:RhinocerosGenU", 
             "UninitializedEvaluationNet:RifleGenU", 
             "UninitializedEvaluationNet:RollerCoasterGenU", 
             "UninitializedEvaluationNet:SandwichGenU", 
             "UninitializedEvaluationNet:ScorpionGenU", 
             "UninitializedEvaluationNet:SeaTurtleGenU", 
             "UninitializedEvaluationNet:SheepGenU", 
             "UninitializedEvaluationNet:SkullGenU", 
             "UninitializedEvaluationNet:SnailGenU", 
             "UninitializedEvaluationNet:SnowflakeGenU", 
             "UninitializedEvaluationNet:SpeedboatGenU", 
             "UninitializedEvaluationNet:SpiderGenU", 
             "UninitializedEvaluationNet:SquirrelGenU", 
             "UninitializedEvaluationNet:SteakGenU", 
             "UninitializedEvaluationNet:StoveGenU", 
             "UninitializedEvaluationNet:StrawberryGenU", 
             "UninitializedEvaluationNet:SwanGenU", 
             "UninitializedEvaluationNet:SwingSetGenU", 
             "UninitializedEvaluationNet:TigerGenU", 
             "UninitializedEvaluationNet:ToothbrushGenU", 
             "UninitializedEvaluationNet:ToothpasteGenU", 
             "UninitializedEvaluationNet:TractorGenU", 
             "UninitializedEvaluationNet:TromboneGenU", 
             "UninitializedEvaluationNet:TruckGenU", 
             "UninitializedEvaluationNet:WhaleGenU", 
             "UninitializedEvaluationNet:WindmillGenU", 
             "UninitializedEvaluationNet:Yoga-BicycleGenU", 
             "UninitializedEvaluationNet:YogaGenU"}|>], "Description" -> 
        "Generate hand-drawn sketches", "Location" -> 
        URL["https://resources.wolframcloud.com"], "DocumentationLink" -> 
        URL["https://resources.wolframcloud.com/NeuralNetRepository/resources/\
3733fed3-f297-454c-b18e-3789ac74856c"]|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Name"} -> 
        1, {All, "ResourceType"} -> 1, {All, "ResourceObject"} -> 
        1, {All, "Description"} -> 1, {All, "Location"} -> 
        1, {All, "DocumentationLink"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Name" -> TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
            "ResourceType" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
            "ResourceObject" -> TypeSystem`PackageScope`AtomShape[60], 
            "Description" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Location" -> TypeSystem`PackageScope`AtomShape[60], 
            "DocumentationLink" -> TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 6, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Name", "ResourceType", "ResourceObject", "Description", "Location", 
         "DocumentationLink"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[ResourceObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL], 
         TypeSystem`Atom[URL]}], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 3, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceType", 
                  Style[
                  "ResourceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ResourceObject", 
                  Style[
                  "ResourceObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ResourceObject"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ResourceObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Description", 
                  Style[
                  "Description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Description"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Description"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Location", 
                  Style[
                  "Location", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Location"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Location"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DocumentationLink", 
                  Style[
                  "DocumentationLink", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DocumentationLink"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DocumentationLink"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["EmptyQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", "\"EmptyQ\"", 
                  "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Test whether a structure can be considered empty", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/EmptyQ"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ContextModule", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Function", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"ContextModule\"", "\"\\\"\"", "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Temporarily set $Context and $ContextPath to a unique empty \
context for an evaluation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/FunctionReposit...", 
                URL[
                "https://resources.wolframcloud.com/FunctionRepository/\
resources/ContextModule"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Sketch-RNN Trained on QuickDraw Data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["NeuralNet", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                TemplateBox[{
                 "\"ResourceObject\"", "\"[\"", "\"\\\"\"", 
                  "\"Sketch-RNN Trained on QuickDraw Data\"", "\"\\\"\"", 
                  "\"]\""}, "RowDefault"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ResourceObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Generate hand-drawn sketches", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://resources.wolframcloud.com", 
                URL["https://resources.wolframcloud.com"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Location"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://resources.wolframcloud.com/NeuralNetReposi...", 
                URL[
                "https://resources.wolframcloud.com/NeuralNetRepository/\
resources/3733fed3-f297-454c-b18e-3789ac74856c"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DocumentationLink"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1293., {59.63403328722343, 65.36596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1293., {59.63403328722343, 65.36596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8701846399145594`*^9, 3.870184657500531*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"a0990697-e056-4595-af36-415807f5411a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", 
  RowBox[{"\"\<List\>\"", ",", "\"\<EponymousPeople\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8701844831877823`*^9, 3.8701844883859515`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b9c2ca94-82e2-4900-9063-db86561d1d37"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.8701844889359827`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"9a6afa41-979b-40cb-82c1-2a319026ae06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", 
  RowBox[{"\"\<SpearmanRho\>\"", ",", "\"\<EponymousPeople\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8701844831877823`*^9, 3.87018449559427*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"18cac9f6-f631-49b0-b4f8-88feaaf96b7d"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"Charles Spearman\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Person\"", ",", "\"CharlesSpearman::46v5p\""}], "]"}], 
    "\"Entity[\\\"Person\\\", \\\"CharlesSpearman::46v5p\\\"]\"", 
    "\"person\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{3.8701844958662953`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"29f05964-5e2f-43bc-a33d-4cbd33e41dff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EmptyQ", "[", 
  RowBox[{"WolframLanguageData", "[", 
   RowBox[{"\"\<List\>\"", ",", "\"\<EponymousPeople\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8701874586972256`*^9, 3.870187464242553*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"7069e254-4271-43fa-8327-8d6b5a2a3f70"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.870187464523196*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"8530200e-5ff5-42fd-86a6-2862476bd024"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EmptyQ", "[", 
  RowBox[{"WolframLanguageData", "[", 
   RowBox[{"\"\<SpearmanRho\>\"", ",", "\"\<EponymousPeople\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8701874586972256`*^9, 3.870187469822691*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"5c6744ba-22a2-4643-b059-4a8709da8ea7"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8701874701010036`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"803179a4-dfd8-475b-bdc7-60ee2111c0ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalName", "[", 
  RowBox[{"WolframLanguageData", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.870187494412112*^9, 3.8701875124975586`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"2ccb3a28-6f18-430e-aafb-f060d2d6530c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"$Aborted\"\>", ",", "\<\"$ActivationKey\"\>", 
   ",", "\<\"$AllowDataUpdates\"\>", 
   ",", "\<\"$AllowExternalChannelFunctions\"\>", 
   ",", "\<\"$AllowInternet\"\>", ",", "\<\"$AssertFunction\"\>", 
   ",", "\<\"$Assumptions\"\>", ",", "\<\"$AudioDecoders\"\>", 
   ",", "\<\"$AudioEncoders\"\>", ",", "\<\"$AudioInputDevices\"\>", 
   ",", "\<\"$AudioOutputDevices\"\>", ",", "\<\"$BaseDirectory\"\>", 
   ",", "\<\"$BasePacletsDirectory\"\>", ",", "\<\"$BatchInput\"\>", 
   ",", "\<\"$BatchOutput\"\>", ",", "\<\"$BlockchainBase\"\>", 
   ",", "\<\"$ByteOrdering\"\>", ",", "\<\"$CacheBaseDirectory\"\>", 
   ",", "\<\"$Canceled\"\>", ",", "\<\"$ChannelBase\"\>", 
   ",", "\<\"$CharacterEncoding\"\>", ",", "\<\"$CharacterEncodings\"\>", 
   ",", "\<\"$CloudAccountName\"\>", ",", "\<\"$CloudBase\"\>", 
   ",", "\<\"$CloudConnected\"\>", ",", "\<\"$CloudCreditsAvailable\"\>", 
   ",", "\<\"$CloudEvaluation\"\>", ",", "\<\"$CloudExpressionBase\"\>", 
   ",", "\<\"$CloudObjectNameFormat\"\>", ",", "\<\"$CloudObjectURLType\"\>", 
   ",", "\<\"$CloudRootDirectory\"\>", ",", "\<\"$CloudSymbolBase\"\>", 
   ",", "\<\"$CloudUserID\"\>", ",", "\<\"$CloudUserUUID\"\>", 
   ",", "\<\"$CloudVersion\"\>", ",", "\<\"$CommandLine\"\>", 
   ",", "\<\"$CompilationTarget\"\>", ",", "\<\"$CompilerEnvironment\"\>", 
   ",", "\<\"$Context\"\>", ",", "\<\"$ContextAliases\"\>", 
   ",", "\<\"$ContextPath\"\>", ",", "\<\"$ControlActiveSetting\"\>", 
   ",", "\<\"$CookieStore\"\>", ",", "\<\"$Cookies\"\>", 
   ",", "\<\"$CreationDate\"\>", 
   ",", "\<\"$CryptographicEllipticCurveNames\"\>", 
   ",", "\<\"$CurrentLink\"\>", ",", "\<\"$CurrentTask\"\>", 
   ",", "\<\"$CurrentWebSession\"\>", ",", "\<\"$DataStructures\"\>", 
   ",", "\<\"$DateStringFormat\"\>", ",", "\<\"$DefaultAudioInputDevice\"\>", 
   ",", "\<\"$DefaultAudioOutputDevice\"\>", ",", "\<\"$DefaultFrontEnd\"\>", 
   ",", "\<\"$DefaultImagingDevice\"\>", ",", "\<\"$DefaultKernels\"\>", 
   ",", "\<\"$DefaultLocalBase\"\>", ",", "\<\"$DefaultNetworkInterface\"\>", 
   ",", "\<\"$DefaultProxyRules\"\>", 
   ",", "\<\"$DefaultRemoteBatchSubmissionEnvironment\"\>", 
   ",", "\<\"$DefaultRemoteKernel\"\>", 
   ",", "\<\"$DefaultSystemCredentialStore\"\>", ",", "\<\"$Display\"\>", 
   ",", "\<\"$DisplayFunction\"\>", ",", "\<\"$DistributedContexts\"\>", 
   ",", "\<\"$DynamicEvaluation\"\>", ",", "\<\"$Echo\"\>", 
   ",", "\<\"$EmbedCodeEnvironments\"\>", ",", "\<\"$EmbeddableServices\"\>", 
   ",", "\<\"$Epilog\"\>", ",", "\<\"$EvaluationCloudBase\"\>", 
   ",", "\<\"$EvaluationCloudObject\"\>", 
   ",", "\<\"$EvaluationEnvironment\"\>", ",", "\<\"$ExportFormats\"\>", 
   ",", "\<\"$ExternalIdentifierTypes\"\>", 
   ",", "\<\"$ExternalStorageBase\"\>", ",", "\<\"$Failed\"\>", 
   ",", "\<\"$FontFamilies\"\>", ",", "\<\"$FrontEnd\"\>", 
   ",", "\<\"$FrontEndSession\"\>", ",", "\<\"$GeneratedAssetLocation\"\>", 
   ",", "\<\"$GeoLocation\"\>", ",", "\<\"$GeoLocationCity\"\>", 
   ",", "\<\"$GeoLocationCountry\"\>", ",", "\<\"$GeoLocationSource\"\>", 
   ",", "\<\"$HistoryLength\"\>", ",", "\<\"$HomeDirectory\"\>", 
   ",", "\<\"$IgnoreEOF\"\>", ",", "\<\"$ImageFormattingWidth\"\>", 
   ",", "\<\"$ImageResolution\"\>", ",", "\<\"$ImagingDevice\"\>", 
   ",", "\<\"$ImagingDevices\"\>", ",", "\<\"$ImportFormats\"\>", 
   ",", "\<\"$IncomingMailSettings\"\>", ",", "\<\"$InitialDirectory\"\>", 
   ",", "\<\"$Initialization\"\>", ",", "\<\"$InitializationContexts\"\>", 
   ",", "\<\"$Input\"\>", ",", "\<\"$InputFileName\"\>", 
   ",", "\<\"$InputStreamMethods\"\>", ",", "\<\"$Inspector\"\>", 
   ",", "\<\"$InstallationDirectory\"\>", ",", "\<\"$InterpreterTypes\"\>", 
   ",", "\<\"$IterationLimit\"\>", ",", "\<\"$KernelCount\"\>", 
   ",", "\<\"$KernelID\"\>", ",", "\<\"$Language\"\>", 
   ",", "\<\"$LibraryPath\"\>", ",", "\<\"$LicenseExpirationDate\"\>", 
   ",", "\<\"$LicenseID\"\>", ",", "\<\"$LicenseServer\"\>", 
   ",", "\<\"$Line\"\>", ",", "\<\"$Linked\"\>", ",", "\<\"$LocalBase\"\>", 
   ",", "\<\"$LocalSymbolBase\"\>", ",", "\<\"$MachineAddresses\"\>", 
   ",", "\<\"$MachineDomains\"\>", ",", "\<\"$MachineEpsilon\"\>", 
   ",", "\<\"$MachineID\"\>", ",", "\<\"$MachineName\"\>", 
   ",", "\<\"$MachinePrecision\"\>", ",", "\<\"$MachineType\"\>", 
   ",", "\<\"$MaxExtraPrecision\"\>", ",", "\<\"$MaxMachineNumber\"\>", 
   ",", "\<\"$MaxNumber\"\>", ",", "\<\"$MaxPiecewiseCases\"\>", 
   ",", "\<\"$MaxPrecision\"\>", ",", "\<\"$MaxRootDegree\"\>", 
   ",", "\<\"$MessageGroups\"\>", ",", "\<\"$MessageList\"\>", 
   ",", "\<\"$MessagePrePrint\"\>", ",", "\<\"$Messages\"\>", 
   ",", "\<\"$MinMachineNumber\"\>", ",", "\<\"$MinNumber\"\>", 
   ",", "\<\"$MinPrecision\"\>", ",", "\<\"$MobilePhone\"\>", 
   ",", "\<\"$ModuleNumber\"\>", ",", "\<\"$NetworkConnected\"\>", 
   ",", "\<\"$NetworkInterfaces\"\>", ",", "\<\"$NewMessage\"\>", 
   ",", "\<\"$NewSymbol\"\>", ",", "\<\"$NoValue\"\>", 
   ",", "\<\"$NotebookInlineStorageLimit\"\>", ",", "\<\"$Notebooks\"\>", 
   ",", "\<\"$NumberMarks\"\>", ",", "\<\"$OperatingSystem\"\>", 
   ",", "\<\"$Output\"\>", ",", "\<\"$OutputSizeLimit\"\>", 
   ",", "\<\"$OutputStreamMethods\"\>", ",", "\<\"$Packages\"\>", 
   ",", "\<\"$ParentLink\"\>", ",", "\<\"$ParentProcessID\"\>", 
   ",", "\<\"$PasswordFile\"\>", ",", "\<\"$Path\"\>", 
   ",", "\<\"$PathnameSeparator\"\>", ",", "\<\"$PerformanceGoal\"\>", 
   ",", "\<\"$Permissions\"\>", ",", "\<\"$PersistenceBase\"\>", 
   ",", "\<\"$PersistencePath\"\>", ",", "\<\"$PlotTheme\"\>", 
   ",", "\<\"$Post\"\>", ",", "\<\"$Pre\"\>", 
   ",", "\<\"$PreInitialization\"\>", ",", "\<\"$PrePrint\"\>", 
   ",", "\<\"$PreRead\"\>", ",", "\<\"$Printout3DPreviewer\"\>", 
   ",", "\<\"$ProcessID\"\>", ",", "\<\"$ProcessorCount\"\>", 
   ",", "\<\"$ProcessorType\"\>", ",", "\<\"$ProgressReporting\"\>", 
   ",", "\<\"$PublisherID\"\>", ",", "\<\"$RandomGeneratorState\"\>", 
   ",", "\<\"$RecursionLimit\"\>", ",", "\<\"$ReleaseNumber\"\>", 
   ",", "\<\"$RequesterAddress\"\>", ",", "\<\"$RequesterCloudUserID\"\>", 
   ",", "\<\"$RequesterCloudUserUUID\"\>", ",", "\<\"$RequesterWolframID\"\>",
    ",", "\<\"$RequesterWolframUUID\"\>", ",", "\<\"$ResourceSystemBase\"\>", 
   ",", "\<\"$ResourceSystemPath\"\>", ",", "\<\"$RootDirectory\"\>", 
   ",", "\<\"$SSHAuthentication\"\>", ",", "\<\"$ScriptCommandLine\"\>", 
   ",", "\<\"$ScriptInputString\"\>", ",", "\<\"$ServiceCreditsAvailable\"\>",
    ",", "\<\"$Services\"\>", ",", "\<\"$SessionID\"\>", 
   ",", "\<\"$SharedFunctions\"\>", ",", "\<\"$SharedVariables\"\>", 
   ",", "\<\"$SoundDisplayFunction\"\>", ",", "\<\"$SourceLink\"\>", 
   ",", "\<\"$SubtitleDecoders\"\>", ",", "\<\"$SubtitleEncoders\"\>", 
   ",", "\<\"$SynchronousEvaluation\"\>", ",", "\<\"$SyntaxHandler\"\>", 
   ",", "\<\"$System\"\>", ",", "\<\"$SystemCharacterEncoding\"\>", 
   ",", "\<\"$SystemCredentialStore\"\>", ",", "\<\"$SystemID\"\>", 
   ",", "\<\"$SystemShell\"\>", ",", "\<\"$SystemTimeZone\"\>", 
   ",", "\<\"$SystemWordLength\"\>", ",", "\<\"$TargetSystems\"\>", 
   ",", "\<\"$TemplatePath\"\>", ",", "\<\"$TemporaryDirectory\"\>", 
   ",", "\<\"$TestFileName\"\>", ",", "\<\"$TimeUnit\"\>", 
   ",", "\<\"$TimeZone\"\>", ",", "\<\"$TimeZoneEntity\"\>", 
   ",", "\<\"$TimedOut\"\>", ",", "\<\"$UnitSystem\"\>", 
   ",", "\<\"$Urgent\"\>", ",", "\<\"$UserAgentString\"\>", 
   ",", "\<\"$UserBaseDirectory\"\>", 
   ",", "\<\"$UserBasePacletsDirectory\"\>", 
   ",", "\<\"$UserDocumentsDirectory\"\>", ",", "\<\"$UserURLBase\"\>", 
   ",", "\<\"$Username\"\>", ",", "\<\"$Version\"\>", 
   ",", "\<\"$VersionNumber\"\>", ",", "\<\"$VideoDecoders\"\>", 
   ",", "\<\"$VideoEncoders\"\>", ",", "\<\"$VoiceStyles\"\>", 
   ",", "\<\"$WolframDocumentsDirectory\"\>", ",", "\<\"$WolframID\"\>", 
   ",", "\<\"$WolframUUID\"\>", ",", "\<\"AASTriangle\"\>", 
   ",", "\<\"APIFunction\"\>", ",", "\<\"ARCHProcess\"\>", 
   ",", "\<\"ARIMAProcess\"\>", ",", "\<\"ARMAProcess\"\>", 
   ",", "\<\"ARProcess\"\>", ",", "\<\"ASATriangle\"\>", 
   ",", "\<\"AbelianGroup\"\>", ",", "\<\"Abort\"\>", 
   ",", "\<\"AbortKernels\"\>", ",", "\<\"AbortProtect\"\>", 
   ",", "\<\"Above\"\>", ",", "\<\"Abs\"\>", ",", "\<\"AbsArg\"\>", 
   ",", "\<\"AbsArgPlot\"\>", ",", "\<\"AbsoluteCorrelation\"\>", 
   ",", "\<\"AbsoluteCorrelationFunction\"\>", 
   ",", "\<\"AbsoluteCurrentValue\"\>", ",", "\<\"AbsoluteDashing\"\>", 
   ",", "\<\"AbsoluteFileName\"\>", ",", "\<\"AbsoluteOptions\"\>", 
   ",", "\<\"AbsolutePointSize\"\>", ",", "\<\"AbsoluteThickness\"\>", 
   ",", "\<\"AbsoluteTime\"\>", ",", "\<\"AbsoluteTiming\"\>", 
   ",", "\<\"AcceptanceThreshold\"\>", ",", "\<\"AccountingForm\"\>", 
   ",", "\<\"Accumulate\"\>", ",", "\<\"Accuracy\"\>", 
   ",", "\<\"AccuracyGoal\"\>", ",", "\<\"AcousticAbsorbingValue\"\>", 
   ",", "\<\"AcousticImpedanceValue\"\>", 
   ",", "\<\"AcousticNormalVelocityValue\"\>", 
   ",", "\<\"AcousticPDEComponent\"\>", 
   ",", "\<\"AcousticPressureCondition\"\>", 
   ",", "\<\"AcousticRadiationValue\"\>", 
   ",", "\<\"AcousticSoundHardValue\"\>", 
   ",", "\<\"AcousticSoundSoftCondition\"\>", ",", "\<\"ActionMenu\"\>", 
   ",", "\<\"Activate\"\>", ",", "\<\"ActiveClassification\"\>", 
   ",", "\<\"ActiveClassificationObject\"\>", ",", "\<\"ActivePrediction\"\>",
    ",", "\<\"ActivePredictionObject\"\>", ",", "\<\"ActiveStyle\"\>", 
   ",", "\<\"AcyclicGraphQ\"\>", ",", "\<\"AddSides\"\>", 
   ",", "\<\"AddTo\"\>", ",", "\<\"AddToSearchIndex\"\>", 
   ",", "\<\"AddUsers\"\>", ",", "\<\"AdjacencyGraph\"\>", 
   ",", "\<\"AdjacencyList\"\>", ",", "\<\"AdjacencyMatrix\"\>", 
   ",", "\<\"AdjacentMeshCells\"\>", ",", "\<\"Adjugate\"\>", 
   ",", "\<\"AdjustTimeSeriesForecast\"\>", ",", "\<\"AdjustmentBox\"\>", 
   ",", "\<\"AdjustmentBoxOptions\"\>", 
   ",", "\<\"AdministrativeDivisionData\"\>", ",", "\<\"AffineHalfSpace\"\>", 
   ",", "\<\"AffineSpace\"\>", ",", "\<\"AffineStateSpaceModel\"\>", 
   ",", "\<\"AffineTransform\"\>", ",", "\<\"After\"\>", 
   ",", "\<\"AggregatedEntityClass\"\>", ",", "\<\"AggregationLayer\"\>", 
   ",", "\<\"AirPressureData\"\>", ",", "\<\"AirSoundAttenuation\"\>", 
   ",", "\<\"AirTemperatureData\"\>", ",", "\<\"AircraftData\"\>", 
   ",", "\<\"AirportData\"\>", ",", "\<\"AiryAi\"\>", 
   ",", "\<\"AiryAiPrime\"\>", ",", "\<\"AiryAiZero\"\>", 
   ",", "\<\"AiryBi\"\>", ",", "\<\"AiryBiPrime\"\>", 
   ",", "\<\"AiryBiZero\"\>", ",", "\<\"AlgebraicIntegerQ\"\>", 
   ",", "\<\"AlgebraicNumber\"\>", ",", "\<\"AlgebraicNumberDenominator\"\>", 
   ",", "\<\"AlgebraicNumberNorm\"\>", 
   ",", "\<\"AlgebraicNumberPolynomial\"\>", 
   ",", "\<\"AlgebraicNumberTrace\"\>", ",", "\<\"AlgebraicUnitQ\"\>", 
   ",", "\<\"Algebraics\"\>", ",", "\<\"Alignment\"\>", 
   ",", "\<\"AlignmentPoint\"\>", ",", "\<\"All\"\>", ",", "\<\"AllTrue\"\>", 
   ",", "\<\"AllowGroupClose\"\>", ",", "\<\"AllowInlineCells\"\>", 
   ",", "\<\"AllowLooseGrammar\"\>", ",", "\<\"AllowReverseGroupClose\"\>", 
   ",", "\<\"AllowVersionUpdate\"\>", 
   ",", "\<\"AllowedCloudExtraParameters\"\>", 
   ",", "\<\"AllowedCloudParameterExtensions\"\>", 
   ",", "\<\"AllowedDimensions\"\>", ",", "\<\"AllowedFrequencyRange\"\>", 
   ",", "\<\"AllowedHeads\"\>", ",", "\<\"AlphaChannel\"\>", 
   ",", "\<\"Alphabet\"\>", ",", "\<\"AlphabeticOrder\"\>", 
   ",", "\<\"AlphabeticSort\"\>", ",", "\<\"AlternatingFactorial\"\>", 
   ",", "\<\"AlternatingGroup\"\>", ",", "\<\"AlternativeHypothesis\"\>", 
   ",", "\<\"Alternatives\"\>", ",", "\<\"AltitudeMethod\"\>", 
   ",", "\<\"AmbientLight\"\>", ",", "\<\"AmbiguityFunction\"\>", 
   ",", "\<\"AmbiguityList\"\>", ",", "\<\"AnatomyData\"\>", 
   ",", "\<\"AnatomyPlot3D\"\>", ",", "\<\"AnatomySkinStyle\"\>", 
   ",", "\<\"AnatomyStyling\"\>", ",", "\<\"AnchoredSearch\"\>", 
   ",", "\<\"And\"\>", ",", "\<\"AndersonDarlingTest\"\>", 
   ",", "\<\"AngerJ\"\>", ",", "\<\"AngleBisector\"\>", 
   ",", "\<\"AngleBracket\"\>", ",", "\<\"AnglePath\"\>", 
   ",", "\<\"AnglePath3D\"\>", ",", "\<\"AngleVector\"\>", 
   ",", "\<\"AngularGauge\"\>", ",", "\<\"Animate\"\>", 
   ",", "\<\"AnimatedImage\"\>", ",", "\<\"AnimationDirection\"\>", 
   ",", "\<\"AnimationRate\"\>", ",", "\<\"AnimationRepetitions\"\>", 
   ",", "\<\"AnimationRunTime\"\>", ",", "\<\"AnimationRunning\"\>", 
   ",", "\<\"AnimationTimeIndex\"\>", ",", "\<\"AnimationVideo\"\>", 
   ",", "\<\"Animator\"\>", ",", "\<\"Annotate\"\>", 
   ",", "\<\"Annotation\"\>", ",", "\<\"AnnotationDelete\"\>", 
   ",", "\<\"AnnotationKeys\"\>", ",", "\<\"AnnotationRules\"\>", 
   ",", "\<\"AnnotationValue\"\>", ",", "\<\"Annuity\"\>", 
   ",", "\<\"AnnuityDue\"\>", ",", "\<\"Annulus\"\>", 
   ",", "\<\"AnomalyDetection\"\>", ",", "\<\"AnomalyDetector\"\>", 
   ",", "\<\"AnomalyDetectorFunction\"\>", ",", "\<\"Anonymous\"\>", 
   ",", "\<\"Antialiasing\"\>", ",", "\<\"Antihermitian\"\>", 
   ",", "\<\"AntihermitianMatrixQ\"\>", ",", "\<\"Antisymmetric\"\>", 
   ",", "\<\"AntisymmetricMatrixQ\"\>", ",", "\<\"Antonyms\"\>", 
   ",", "\<\"AnyOrder\"\>", ",", "\<\"AnySubset\"\>", ",", "\<\"AnyTrue\"\>", 
   ",", "\<\"Apart\"\>", ",", "\<\"ApartSquareFree\"\>", 
   ",", "\<\"Appearance\"\>", ",", "\<\"AppearanceElements\"\>", 
   ",", "\<\"AppearanceRules\"\>", ",", "\<\"AppellF1\"\>", 
   ",", "\<\"Append\"\>", ",", "\<\"AppendLayer\"\>", ",", "\<\"AppendTo\"\>",
    ",", "\<\"Application\"\>", ",", "\<\"Apply\"\>", 
   ",", "\<\"ApplySides\"\>", ",", "\<\"ApplyTo\"\>", ",", "\<\"ArcCos\"\>", 
   ",", "\<\"ArcCosh\"\>", ",", "\<\"ArcCot\"\>", ",", "\<\"ArcCoth\"\>", 
   ",", "\<\"ArcCsc\"\>", ",", "\<\"ArcCsch\"\>", ",", "\<\"ArcCurvature\"\>",
    ",", "\<\"ArcLength\"\>", ",", "\<\"ArcSec\"\>", ",", "\<\"ArcSech\"\>", 
   ",", "\<\"ArcSin\"\>", ",", "\<\"ArcSinDistribution\"\>", 
   ",", "\<\"ArcSinh\"\>", ",", "\<\"ArcTan\"\>", ",", "\<\"ArcTanh\"\>", 
   ",", "\<\"Area\"\>", ",", "\<\"Arg\"\>", ",", "\<\"ArgMax\"\>", 
   ",", "\<\"ArgMin\"\>", ",", "\<\"ArgumentsOptions\"\>", 
   ",", "\<\"ArithmeticGeometricMean\"\>", ",", "\<\"Around\"\>", 
   ",", "\<\"AroundReplace\"\>", ",", "\<\"Array\"\>", 
   ",", "\<\"ArrayComponents\"\>", ",", "\<\"ArrayDepth\"\>", 
   ",", "\<\"ArrayFilter\"\>", ",", "\<\"ArrayFlatten\"\>", 
   ",", "\<\"ArrayMesh\"\>", ",", "\<\"ArrayPad\"\>", 
   ",", "\<\"ArrayPlot\"\>", ",", "\<\"ArrayPlot3D\"\>", 
   ",", "\<\"ArrayQ\"\>", ",", "\<\"ArrayReduce\"\>", 
   ",", "\<\"ArrayResample\"\>", ",", "\<\"ArrayReshape\"\>", 
   ",", "\<\"ArrayRules\"\>", ",", "\<\"Arrays\"\>", ",", "\<\"Arrow\"\>", 
   ",", "\<\"Arrowheads\"\>", ",", "\<\"Ask\"\>", ",", "\<\"AskAppend\"\>", 
   ",", "\<\"AskConfirm\"\>", ",", "\<\"AskDisplay\"\>", 
   ",", "\<\"AskFunction\"\>", ",", "\<\"AskState\"\>", 
   ",", "\<\"AskTemplateDisplay\"\>", ",", "\<\"AskedQ\"\>", 
   ",", "\<\"AskedValue\"\>", ",", "\<\"AspectRatio\"\>", 
   ",", "\<\"Assert\"\>", ",", "\<\"AssessmentFunction\"\>", 
   ",", "\<\"AssessmentResultObject\"\>", ",", "\<\"AssociateTo\"\>", 
   ",", "\<\"Association\"\>", ",", "\<\"AssociationFormat\"\>", 
   ",", "\<\"AssociationMap\"\>", ",", "\<\"AssociationQ\"\>", 
   ",", "\<\"AssociationThread\"\>", ",", "\<\"AssumeDeterministic\"\>", 
   ",", "\<\"Assuming\"\>", ",", "\<\"Assumptions\"\>", 
   ",", "\<\"Asymptotic\"\>", ",", "\<\"AsymptoticDSolveValue\"\>", 
   ",", "\<\"AsymptoticEqual\"\>", ",", "\<\"AsymptoticEquivalent\"\>", 
   ",", "\<\"AsymptoticExpectation\"\>", ",", "\<\"AsymptoticGreater\"\>", 
   ",", "\<\"AsymptoticGreaterEqual\"\>", ",", "\<\"AsymptoticIntegrate\"\>", 
   ",", "\<\"AsymptoticLess\"\>", ",", "\<\"AsymptoticLessEqual\"\>", 
   ",", "\<\"AsymptoticOutputTracker\"\>", 
   ",", "\<\"AsymptoticProbability\"\>", ",", "\<\"AsymptoticProduct\"\>", 
   ",", "\<\"AsymptoticRSolveValue\"\>", ",", "\<\"AsymptoticSolve\"\>", 
   ",", "\<\"AsymptoticSum\"\>", ",", "\<\"Asynchronous\"\>", 
   ",", "\<\"Atom\"\>", ",", "\<\"AtomCoordinates\"\>", 
   ",", "\<\"AtomCount\"\>", ",", "\<\"AtomDiagramCoordinates\"\>", 
   ",", "\<\"AtomLabelStyle\"\>", ",", "\<\"AtomLabels\"\>", 
   ",", "\<\"AtomList\"\>", ",", "\<\"AtomQ\"\>", ",", "\<\"AttachCell\"\>", 
   ",", "\<\"AttachedCell\"\>", ",", "\<\"AttentionLayer\"\>", 
   ",", "\<\"Attributes\"\>", ",", "\<\"Audio\"\>", 
   ",", "\<\"AudioAmplify\"\>", ",", "\<\"AudioAnnotate\"\>", 
   ",", "\<\"AudioAnnotationLookup\"\>", ",", "\<\"AudioBlockMap\"\>", 
   ",", "\<\"AudioCapture\"\>", ",", "\<\"AudioChannelAssignment\"\>", 
   ",", "\<\"AudioChannelCombine\"\>", ",", "\<\"AudioChannelMix\"\>", 
   ",", "\<\"AudioChannelSeparate\"\>", ",", "\<\"AudioChannels\"\>", 
   ",", "\<\"AudioData\"\>", ",", "\<\"AudioDelay\"\>", 
   ",", "\<\"AudioDelete\"\>", ",", "\<\"AudioDistance\"\>", 
   ",", "\<\"AudioEncoding\"\>", ",", "\<\"AudioFade\"\>", 
   ",", "\<\"AudioFrequencyShift\"\>", ",", "\<\"AudioGenerator\"\>", 
   ",", "\<\"AudioIdentify\"\>", ",", "\<\"AudioInputDevice\"\>", 
   ",", "\<\"AudioInsert\"\>", ",", "\<\"AudioInstanceQ\"\>", 
   ",", "\<\"AudioIntervals\"\>", ",", "\<\"AudioJoin\"\>", 
   ",", "\<\"AudioLabel\"\>", ",", "\<\"AudioLength\"\>", 
   ",", "\<\"AudioLocalMeasurements\"\>", ",", "\<\"AudioLoudness\"\>", 
   ",", "\<\"AudioMeasurements\"\>", ",", "\<\"AudioNormalize\"\>", 
   ",", "\<\"AudioOutputDevice\"\>", ",", "\<\"AudioOverlay\"\>", 
   ",", "\<\"AudioPad\"\>", ",", "\<\"AudioPan\"\>", 
   ",", "\<\"AudioPartition\"\>", ",", "\<\"AudioPause\"\>", 
   ",", "\<\"AudioPitchShift\"\>", ",", "\<\"AudioPlay\"\>", 
   ",", "\<\"AudioPlot\"\>", ",", "\<\"AudioQ\"\>", 
   ",", "\<\"AudioRecord\"\>", ",", "\<\"AudioReplace\"\>", 
   ",", "\<\"AudioResample\"\>", ",", "\<\"AudioReverb\"\>", 
   ",", "\<\"AudioReverse\"\>", ",", "\<\"AudioSampleRate\"\>", 
   ",", "\<\"AudioSpectralMap\"\>", 
   ",", "\<\"AudioSpectralTransformation\"\>", ",", "\<\"AudioSplit\"\>", 
   ",", "\<\"AudioStop\"\>", ",", "\<\"AudioStream\"\>", 
   ",", "\<\"AudioStreams\"\>", ",", "\<\"AudioTimeStretch\"\>", 
   ",", "\<\"AudioTrackApply\"\>", ",", "\<\"AudioTrackSelection\"\>", 
   ",", "\<\"AudioTrim\"\>", ",", "\<\"AudioType\"\>", 
   ",", "\<\"AugmentedPolyhedron\"\>", 
   ",", "\<\"AugmentedSymmetricPolynomial\"\>", ",", "\<\"Authentication\"\>",
    ",", "\<\"AuthenticationDialog\"\>", ",", "\<\"AutoAction\"\>", 
   ",", "\<\"AutoCopy\"\>", ",", "\<\"AutoDelete\"\>", 
   ",", "\<\"AutoIndent\"\>", ",", "\<\"AutoItalicWords\"\>", 
   ",", "\<\"AutoMultiplicationSymbol\"\>", 
   ",", "\<\"AutoOperatorRenderings\"\>", ",", "\<\"AutoRefreshed\"\>", 
   ",", "\<\"AutoRemove\"\>", ",", "\<\"AutoScroll\"\>", 
   ",", "\<\"AutoSpacing\"\>", ",", "\<\"AutoSubmitting\"\>", 
   ",", "\<\"Autocomplete\"\>", ",", "\<\"AutocompletionFunction\"\>", 
   ",", "\<\"AutocorrelationTest\"\>", ",", "\<\"Automatic\"\>", 
   ",", "\<\"AutorunSequencing\"\>", ",", "\<\"Axes\"\>", 
   ",", "\<\"AxesEdge\"\>", ",", "\<\"AxesLabel\"\>", 
   ",", "\<\"AxesOrigin\"\>", ",", "\<\"AxesStyle\"\>", 
   ",", "\<\"AxiomaticTheory\"\>", ",", "\<\"Axis\"\>", 
   ",", "\<\"AxisLabel\"\>", ",", "\<\"AxisObject\"\>", 
   ",", "\<\"AxisStyle\"\>", ",", "\<\"BSplineBasis\"\>", 
   ",", "\<\"BSplineCurve\"\>", ",", "\<\"BSplineFunction\"\>", 
   ",", "\<\"BSplineSurface\"\>", ",", "\<\"BabyMonsterGroupB\"\>", 
   ",", "\<\"Back\"\>", ",", "\<\"Background\"\>", ",", "\<\"Backslash\"\>", 
   ",", "\<\"Backward\"\>", ",", "\<\"Ball\"\>", ",", "\<\"Band\"\>", 
   ",", "\<\"BandpassFilter\"\>", ",", "\<\"BandstopFilter\"\>", 
   ",", "\<\"BarChart\"\>", ",", "\<\"BarChart3D\"\>", 
   ",", "\<\"BarLegend\"\>", ",", "\<\"BarOrigin\"\>", 
   ",", "\<\"BarSpacing\"\>", ",", "\<\"BarabasiAlbertGraphDistribution\"\>", 
   ",", "\<\"BarcodeImage\"\>", ",", "\<\"BarcodeRecognize\"\>", 
   ",", "\<\"BaringhausHenzeTest\"\>", 
   ",", "\<\"BarlowProschanImportance\"\>", ",", "\<\"BarnesG\"\>", 
   ",", "\<\"BartlettHannWindow\"\>", ",", "\<\"BartlettWindow\"\>", 
   ",", "\<\"BaseDecode\"\>", ",", "\<\"BaseEncode\"\>", 
   ",", "\<\"BaseForm\"\>", ",", "\<\"BaseStyle\"\>", ",", "\<\"Baseline\"\>",
    ",", "\<\"BaselinePosition\"\>", ",", "\<\"BasicRecurrentLayer\"\>", 
   ",", "\<\"BatchNormalizationLayer\"\>", ",", "\<\"BatchSize\"\>", 
   ",", "\<\"BatesDistribution\"\>", ",", "\<\"BattleLemarieWavelet\"\>", 
   ",", "\<\"BayesianMaximization\"\>", 
   ",", "\<\"BayesianMaximizationObject\"\>", 
   ",", "\<\"BayesianMinimization\"\>", 
   ",", "\<\"BayesianMinimizationObject\"\>", ",", "\<\"Because\"\>", 
   ",", "\<\"BeckmannDistribution\"\>", ",", "\<\"Beep\"\>", 
   ",", "\<\"Before\"\>", ",", "\<\"Begin\"\>", 
   ",", "\<\"BeginDialogPacket\"\>", ",", "\<\"BeginPackage\"\>", 
   ",", "\<\"BellB\"\>", ",", "\<\"BellY\"\>", ",", "\<\"Below\"\>", 
   ",", "\<\"BenfordDistribution\"\>", ",", "\<\"BeniniDistribution\"\>", 
   ",", "\<\"BenktanderGibratDistribution\"\>", 
   ",", "\<\"BenktanderWeibullDistribution\"\>", ",", "\<\"BernoulliB\"\>", 
   ",", "\<\"BernoulliDistribution\"\>", 
   ",", "\<\"BernoulliGraphDistribution\"\>", ",", "\<\"BernoulliProcess\"\>",
    ",", "\<\"BernsteinBasis\"\>", ",", "\<\"BesagL\"\>", 
   ",", "\<\"BesselFilterModel\"\>", ",", "\<\"BesselI\"\>", 
   ",", "\<\"BesselJ\"\>", ",", "\<\"BesselJZero\"\>", ",", "\<\"BesselK\"\>",
    ",", "\<\"BesselY\"\>", ",", "\<\"BesselYZero\"\>", ",", "\<\"Beta\"\>", 
   ",", "\<\"BetaBinomialDistribution\"\>", ",", "\<\"BetaDistribution\"\>", 
   ",", "\<\"BetaNegativeBinomialDistribution\"\>", 
   ",", "\<\"BetaPrimeDistribution\"\>", ",", "\<\"BetaRegularized\"\>", 
   ",", "\<\"Between\"\>", ",", "\<\"BetweennessCentrality\"\>", 
   ",", "\<\"BeveledPolyhedron\"\>", ",", "\<\"BezierCurve\"\>", 
   ",", "\<\"BezierFunction\"\>", ",", "\<\"BilateralFilter\"\>", 
   ",", "\<\"BilateralLaplaceTransform\"\>", 
   ",", "\<\"BilateralZTransform\"\>", ",", "\<\"BinCounts\"\>", 
   ",", "\<\"BinLists\"\>", ",", "\<\"Binarize\"\>", 
   ",", "\<\"BinaryDeserialize\"\>", ",", "\<\"BinaryDistance\"\>", 
   ",", "\<\"BinaryFormat\"\>", ",", "\<\"BinaryImageQ\"\>", 
   ",", "\<\"BinaryRead\"\>", ",", "\<\"BinaryReadList\"\>", 
   ",", "\<\"BinarySerialize\"\>", ",", "\<\"BinaryWrite\"\>", 
   ",", "\<\"BinnedVariogramList\"\>", ",", "\<\"Binomial\"\>", 
   ",", "\<\"BinomialDistribution\"\>", ",", "\<\"BinomialPointProcess\"\>", 
   ",", "\<\"BinomialProcess\"\>", ",", "\<\"BinormalDistribution\"\>", 
   ",", "\<\"BioSequence\"\>", ",", "\<\"BioSequenceBackTranslateList\"\>", 
   ",", "\<\"BioSequenceComplement\"\>", ",", "\<\"BioSequenceInstances\"\>", 
   ",", "\<\"BioSequenceModify\"\>", ",", "\<\"BioSequencePlot\"\>", 
   ",", "\<\"BioSequenceQ\"\>", ",", "\<\"BioSequenceReverseComplement\"\>", 
   ",", "\<\"BioSequenceTranscribe\"\>", ",", "\<\"BioSequenceTranslate\"\>", 
   ",", "\<\"BiorthogonalSplineWavelet\"\>", ",", "\<\"BipartiteGraphQ\"\>", 
   ",", "\<\"BiquadraticFilterModel\"\>", ",", "\<\"BirnbaumImportance\"\>", 
   ",", "\<\"BirnbaumSaundersDistribution\"\>", ",", "\<\"BitAnd\"\>", 
   ",", "\<\"BitClear\"\>", ",", "\<\"BitGet\"\>", ",", "\<\"BitLength\"\>", 
   ",", "\<\"BitNot\"\>", ",", "\<\"BitOr\"\>", ",", "\<\"BitRate\"\>", 
   ",", "\<\"BitSet\"\>", ",", "\<\"BitShiftLeft\"\>", 
   ",", "\<\"BitShiftRight\"\>", ",", "\<\"BitXor\"\>", 
   ",", "\<\"BiweightLocation\"\>", ",", "\<\"BiweightMidvariance\"\>", 
   ",", "\<\"Black\"\>", ",", "\<\"BlackmanHarrisWindow\"\>", 
   ",", "\<\"BlackmanNuttallWindow\"\>", ",", "\<\"BlackmanWindow\"\>", 
   ",", "\<\"Blank\"\>", ",", "\<\"BlankNullSequence\"\>", 
   ",", "\<\"BlankSequence\"\>", ",", "\<\"Blend\"\>", ",", "\<\"Block\"\>", 
   ",", "\<\"BlockMap\"\>", ",", "\<\"BlockRandom\"\>", 
   ",", "\<\"BlockchainAddressData\"\>", ",", "\<\"BlockchainBase\"\>", 
   ",", "\<\"BlockchainBlockData\"\>", ",", "\<\"BlockchainContractValue\"\>",
    ",", "\<\"BlockchainData\"\>", ",", "\<\"BlockchainGet\"\>", 
   ",", "\<\"BlockchainKeyEncode\"\>", ",", "\<\"BlockchainPut\"\>", 
   ",", "\<\"BlockchainTokenData\"\>", ",", "\<\"BlockchainTransaction\"\>", 
   ",", "\<\"BlockchainTransactionData\"\>", 
   ",", "\<\"BlockchainTransactionSign\"\>", 
   ",", "\<\"BlockchainTransactionSubmit\"\>", ",", "\<\"BlomqvistBeta\"\>", 
   ",", "\<\"BlomqvistBetaTest\"\>", ",", "\<\"Blue\"\>", ",", "\<\"Blur\"\>",
    ",", "\<\"BodePlot\"\>", ",", "\<\"BohmanWindow\"\>", ",", "\<\"Bold\"\>",
    ",", "\<\"Bond\"\>", ",", "\<\"BondCount\"\>", 
   ",", "\<\"BondLabelStyle\"\>", ",", "\<\"BondLabels\"\>", 
   ",", "\<\"BondList\"\>", ",", "\<\"BondQ\"\>", ",", "\<\"Bookmarks\"\>", 
   ",", "\<\"Boole\"\>", ",", "\<\"BooleanConsecutiveFunction\"\>", 
   ",", "\<\"BooleanConvert\"\>", ",", "\<\"BooleanCountingFunction\"\>", 
   ",", "\<\"BooleanFunction\"\>", ",", "\<\"BooleanGraph\"\>", 
   ",", "\<\"BooleanMaxterms\"\>", ",", "\<\"BooleanMinimize\"\>", 
   ",", "\<\"BooleanMinterms\"\>", ",", "\<\"BooleanQ\"\>", 
   ",", "\<\"BooleanRegion\"\>", ",", "\<\"BooleanStrings\"\>", 
   ",", "\<\"BooleanTable\"\>", ",", "\<\"BooleanVariables\"\>", 
   ",", "\<\"Booleans\"\>", ",", "\<\"BorderDimensions\"\>", 
   ",", "\<\"BorelTannerDistribution\"\>", ",", "\<\"Bottom\"\>", 
   ",", "\<\"BottomHatTransform\"\>", 
   ",", "\<\"BoundaryDiscretizeGraphics\"\>", 
   ",", "\<\"BoundaryDiscretizeRegion\"\>", ",", "\<\"BoundaryMesh\"\>", 
   ",", "\<\"BoundaryMeshRegion\"\>", ",", "\<\"BoundaryMeshRegionQ\"\>", 
   ",", "\<\"BoundaryStyle\"\>", ",", "\<\"BoundedRegionQ\"\>", 
   ",", "\<\"BoundingRegion\"\>", ",", "\<\"BoxData\"\>", 
   ",", "\<\"BoxMatrix\"\>", ",", "\<\"BoxObject\"\>", 
   ",", "\<\"BoxRatios\"\>", ",", "\<\"BoxStyle\"\>", 
   ",", "\<\"BoxWhiskerChart\"\>", ",", "\<\"Boxed\"\>", ",", "\<\"Boxes\"\>",
    ",", "\<\"BracketingBar\"\>", ",", "\<\"BrayCurtisDistance\"\>", 
   ",", "\<\"BreadthFirstScan\"\>", ",", "\<\"Break\"\>", 
   ",", "\<\"BridgeData\"\>", ",", "\<\"BrightnessEqualize\"\>", 
   ",", "\<\"BroadcastStationData\"\>", ",", "\<\"Brown\"\>", 
   ",", "\<\"BrownForsytheTest\"\>", ",", "\<\"BrownianBridgeProcess\"\>", 
   ",", "\<\"BubbleChart\"\>", ",", "\<\"BubbleChart3D\"\>", 
   ",", "\<\"BubbleScale\"\>", ",", "\<\"BubbleSizes\"\>", 
   ",", "\<\"BuildingData\"\>", ",", "\<\"BulletGauge\"\>", 
   ",", "\<\"BusinessDayQ\"\>", ",", "\<\"ButterflyGraph\"\>", 
   ",", "\<\"ButterworthFilterModel\"\>", ",", "\<\"Button\"\>", 
   ",", "\<\"ButtonBar\"\>", ",", "\<\"ButtonBox\"\>", 
   ",", "\<\"ButtonBoxOptions\"\>", ",", "\<\"ButtonData\"\>", 
   ",", "\<\"ButtonFunction\"\>", ",", "\<\"ButtonMinHeight\"\>", 
   ",", "\<\"ButtonNotebook\"\>", ",", "\<\"ButtonSource\"\>", 
   ",", "\<\"Byte\"\>", ",", "\<\"ByteArray\"\>", 
   ",", "\<\"ByteArrayFormat\"\>", ",", "\<\"ByteArrayFormatQ\"\>", 
   ",", "\<\"ByteArrayQ\"\>", ",", "\<\"ByteArrayToString\"\>", 
   ",", "\<\"ByteCount\"\>", ",", "\<\"ByteOrdering\"\>", ",", "\<\"C\"\>", 
   ",", "\<\"CDF\"\>", ",", "\<\"CDFDeploy\"\>", ",", "\<\"CDFWavelet\"\>", 
   ",", "\<\"CForm\"\>", ",", "\<\"CMYKColor\"\>", ",", "\<\"CSGRegion\"\>", 
   ",", "\<\"CSGRegionQ\"\>", ",", "\<\"CSGRegionTree\"\>", 
   ",", "\<\"CTCLossLayer\"\>", ",", "\<\"CachePersistence\"\>", 
   ",", "\<\"CalendarConvert\"\>", ",", "\<\"CalendarData\"\>", 
   ",", "\<\"CalendarType\"\>", ",", "\<\"CallPacket\"\>", 
   ",", "\<\"Callout\"\>", ",", "\<\"CalloutMarker\"\>", 
   ",", "\<\"CalloutStyle\"\>", ",", "\<\"CanberraDistance\"\>", 
   ",", "\<\"Cancel\"\>", ",", "\<\"CancelButton\"\>", 
   ",", "\<\"CandlestickChart\"\>", ",", "\<\"CanonicalGraph\"\>", 
   ",", "\<\"CanonicalName\"\>", 
   ",", "\<\"CanonicalWarpingCorrespondence\"\>", 
   ",", "\<\"CanonicalWarpingDistance\"\>", 
   ",", "\<\"CanonicalizePolygon\"\>", ",", "\<\"CanonicalizePolyhedron\"\>", 
   ",", "\<\"CanonicalizeRegion\"\>", ",", "\<\"CantorMesh\"\>", 
   ",", "\<\"CantorStaircase\"\>", ",", "\<\"Canvas\"\>", ",", "\<\"Cap\"\>", 
   ",", "\<\"CapForm\"\>", ",", "\<\"CapitalDifferentialD\"\>", 
   ",", "\<\"Capitalize\"\>", ",", "\<\"CapsuleShape\"\>", 
   ",", "\<\"CaptureRunning\"\>", ",", "\<\"CarlemanLinearize\"\>", 
   ",", "\<\"CarlsonRC\"\>", ",", "\<\"CarlsonRD\"\>", 
   ",", "\<\"CarlsonRE\"\>", ",", "\<\"CarlsonRF\"\>", 
   ",", "\<\"CarlsonRG\"\>", ",", "\<\"CarlsonRJ\"\>", 
   ",", "\<\"CarlsonRK\"\>", ",", "\<\"CarlsonRM\"\>", 
   ",", "\<\"CarmichaelLambda\"\>", ",", "\<\"CaseOrdering\"\>", 
   ",", "\<\"CaseSensitive\"\>", ",", "\<\"Cases\"\>", 
   ",", "\<\"Cashflow\"\>", ",", "\<\"Casoratian\"\>", ",", "\<\"Catalan\"\>",
    ",", "\<\"CatalanNumber\"\>", ",", "\<\"Catch\"\>", 
   ",", "\<\"CategoricalDistribution\"\>", ",", "\<\"Catenate\"\>", 
   ",", "\<\"CatenateLayer\"\>", ",", "\<\"CauchyDistribution\"\>", 
   ",", "\<\"CauchyPointProcess\"\>", ",", "\<\"CauchyWindow\"\>", 
   ",", "\<\"CayleyGraph\"\>", ",", "\<\"Ceiling\"\>", 
   ",", "\<\"CelestialSystem\"\>", ",", "\<\"Cell\"\>", 
   ",", "\<\"CellAutoOverwrite\"\>", ",", "\<\"CellBaseline\"\>", 
   ",", "\<\"CellBracketOptions\"\>", ",", "\<\"CellChangeTimes\"\>", 
   ",", "\<\"CellContext\"\>", ",", "\<\"CellDingbat\"\>", 
   ",", "\<\"CellDynamicExpression\"\>", ",", "\<\"CellEditDuplicate\"\>", 
   ",", "\<\"CellEpilog\"\>", ",", "\<\"CellEvaluationDuplicate\"\>", 
   ",", "\<\"CellEvaluationFunction\"\>", ",", "\<\"CellEventActions\"\>", 
   ",", "\<\"CellFrame\"\>", ",", "\<\"CellFrameColor\"\>", 
   ",", "\<\"CellFrameLabelMargins\"\>", ",", "\<\"CellFrameLabels\"\>", 
   ",", "\<\"CellFrameMargins\"\>", ",", "\<\"CellGroup\"\>", 
   ",", "\<\"CellGroupData\"\>", ",", "\<\"CellGrouping\"\>", 
   ",", "\<\"CellID\"\>", ",", "\<\"CellLabel\"\>", 
   ",", "\<\"CellLabelAutoDelete\"\>", ",", "\<\"CellLabelStyle\"\>", 
   ",", "\<\"CellMargins\"\>", ",", "\<\"CellObject\"\>", 
   ",", "\<\"CellOpen\"\>", ",", "\<\"CellPrint\"\>", 
   ",", "\<\"CellProlog\"\>", ",", "\<\"CellStyle\"\>", 
   ",", "\<\"CellTags\"\>", ",", "\<\"Cells\"\>", 
   ",", "\<\"CellularAutomaton\"\>", ",", "\<\"CensoredDistribution\"\>", 
   ",", "\<\"Censoring\"\>", ",", "\<\"Center\"\>", 
   ",", "\<\"CenterArray\"\>", ",", "\<\"CenterDot\"\>", 
   ",", "\<\"CenteredInterval\"\>", ",", "\<\"CentralFeature\"\>", 
   ",", "\<\"CentralMoment\"\>", 
   ",", "\<\"CentralMomentGeneratingFunction\"\>", ",", "\<\"Cepstrogram\"\>",
    ",", "\<\"CepstrogramArray\"\>", ",", "\<\"CepstrumArray\"\>", 
   ",", "\<\"ChampernowneNumber\"\>", ",", "\<\"ChanVeseBinarize\"\>", 
   ",", "\<\"ChannelBase\"\>", ",", "\<\"ChannelBrokerAction\"\>", 
   ",", "\<\"ChannelHistoryLength\"\>", ",", "\<\"ChannelListen\"\>", 
   ",", "\<\"ChannelListener\"\>", ",", "\<\"ChannelListeners\"\>", 
   ",", "\<\"ChannelObject\"\>", ",", "\<\"ChannelReceiverFunction\"\>", 
   ",", "\<\"ChannelSend\"\>", ",", "\<\"ChannelSubscribers\"\>", 
   ",", "\<\"Character\"\>", ",", "\<\"CharacterCounts\"\>", 
   ",", "\<\"CharacterEncoding\"\>", ",", "\<\"CharacterName\"\>", 
   ",", "\<\"CharacterNormalize\"\>", ",", "\<\"CharacterRange\"\>", 
   ",", "\<\"CharacteristicFunction\"\>", 
   ",", "\<\"CharacteristicPolynomial\"\>", ",", "\<\"Characters\"\>", 
   ",", "\<\"ChartBaseStyle\"\>", ",", "\<\"ChartElementFunction\"\>", 
   ",", "\<\"ChartElements\"\>", ",", "\<\"ChartLabels\"\>", 
   ",", "\<\"ChartLayout\"\>", ",", "\<\"ChartLegends\"\>", 
   ",", "\<\"ChartStyle\"\>", ",", "\<\"Chebyshev1FilterModel\"\>", 
   ",", "\<\"Chebyshev2FilterModel\"\>", ",", "\<\"ChebyshevT\"\>", 
   ",", "\<\"ChebyshevU\"\>", ",", "\<\"Check\"\>", ",", "\<\"CheckAbort\"\>",
    ",", "\<\"CheckArguments\"\>", ",", "\<\"Checkbox\"\>", 
   ",", "\<\"CheckboxBar\"\>", ",", "\<\"ChemicalData\"\>", 
   ",", "\<\"ChemicalFormula\"\>", ",", "\<\"ChemicalReaction\"\>", 
   ",", "\<\"ChessboardDistance\"\>", ",", "\<\"ChiDistribution\"\>", 
   ",", "\<\"ChiSquareDistribution\"\>", ",", "\<\"ChineseRemainder\"\>", 
   ",", "\<\"ChoiceButtons\"\>", ",", "\<\"ChoiceDialog\"\>", 
   ",", "\<\"CholeskyDecomposition\"\>", ",", "\<\"Chop\"\>", 
   ",", "\<\"ChromaticPolynomial\"\>", ",", "\<\"ChromaticityPlot\"\>", 
   ",", "\<\"ChromaticityPlot3D\"\>", ",", "\<\"Circle\"\>", 
   ",", "\<\"CircleDot\"\>", ",", "\<\"CircleMinus\"\>", 
   ",", "\<\"CirclePlus\"\>", ",", "\<\"CirclePoints\"\>", 
   ",", "\<\"CircleThrough\"\>", ",", "\<\"CircleTimes\"\>", 
   ",", "\<\"CirculantGraph\"\>", 
   ",", "\<\"CircularOrthogonalMatrixDistribution\"\>", 
   ",", "\<\"CircularQuaternionMatrixDistribution\"\>", 
   ",", "\<\"CircularRealMatrixDistribution\"\>", 
   ",", "\<\"CircularSymplecticMatrixDistribution\"\>", 
   ",", "\<\"CircularUnitaryMatrixDistribution\"\>", 
   ",", "\<\"Circumsphere\"\>", ",", "\<\"CityData\"\>", 
   ",", "\<\"ClassPriors\"\>", ",", "\<\"ClassifierFunction\"\>", 
   ",", "\<\"ClassifierMeasurements\"\>", 
   ",", "\<\"ClassifierMeasurementsObject\"\>", ",", "\<\"Classify\"\>", 
   ",", "\<\"Clear\"\>", ",", "\<\"ClearAll\"\>", 
   ",", "\<\"ClearAttributes\"\>", ",", "\<\"ClearCookies\"\>", 
   ",", "\<\"ClearPermissions\"\>", ",", "\<\"ClearSystemCache\"\>", 
   ",", "\<\"ClebschGordan\"\>", ",", "\<\"ClickPane\"\>", 
   ",", "\<\"ClickToCopy\"\>", ",", "\<\"ClickToCopyEnabled\"\>", 
   ",", "\<\"Clip\"\>", ",", "\<\"ClipPlanes\"\>", 
   ",", "\<\"ClipPlanesStyle\"\>", ",", "\<\"ClipRange\"\>", 
   ",", "\<\"ClippingStyle\"\>", ",", "\<\"Clock\"\>", 
   ",", "\<\"ClockGauge\"\>", ",", "\<\"Close\"\>", 
   ",", "\<\"CloseKernels\"\>", ",", "\<\"ClosenessCentrality\"\>", 
   ",", "\<\"Closing\"\>", ",", "\<\"CloudAccountData\"\>", 
   ",", "\<\"CloudBase\"\>", ",", "\<\"CloudConnect\"\>", 
   ",", "\<\"CloudDeploy\"\>", ",", "\<\"CloudDirectory\"\>", 
   ",", "\<\"CloudDisconnect\"\>", ",", "\<\"CloudEvaluate\"\>", 
   ",", "\<\"CloudExport\"\>", ",", "\<\"CloudExpression\"\>", 
   ",", "\<\"CloudExpressions\"\>", ",", "\<\"CloudFunction\"\>", 
   ",", "\<\"CloudGet\"\>", ",", "\<\"CloudImport\"\>", 
   ",", "\<\"CloudLoggingData\"\>", ",", "\<\"CloudObject\"\>", 
   ",", "\<\"CloudObjectNameFormat\"\>", ",", "\<\"CloudObjectURLType\"\>", 
   ",", "\<\"CloudObjects\"\>", ",", "\<\"CloudPublish\"\>", 
   ",", "\<\"CloudPut\"\>", ",", "\<\"CloudRenderingMethod\"\>", 
   ",", "\<\"CloudSave\"\>", ",", "\<\"CloudShare\"\>", 
   ",", "\<\"CloudSubmit\"\>", ",", "\<\"CloudSymbol\"\>", 
   ",", "\<\"CloudUnshare\"\>", ",", "\<\"ClusterClassify\"\>", 
   ",", "\<\"ClusterDissimilarityFunction\"\>", 
   ",", "\<\"ClusteringComponents\"\>", ",", "\<\"ClusteringTree\"\>", 
   ",", "\<\"CodeAssistOptions\"\>", ",", "\<\"Coefficient\"\>", 
   ",", "\<\"CoefficientArrays\"\>", ",", "\<\"CoefficientList\"\>", 
   ",", "\<\"CoefficientRules\"\>", ",", "\<\"CoifletWavelet\"\>", 
   ",", "\<\"Collect\"\>", ",", "\<\"CollinearPoints\"\>", 
   ",", "\<\"Colon\"\>", ",", "\<\"ColorBalance\"\>", 
   ",", "\<\"ColorCombine\"\>", ",", "\<\"ColorConvert\"\>", 
   ",", "\<\"ColorCoverage\"\>", ",", "\<\"ColorData\"\>", 
   ",", "\<\"ColorDataFunction\"\>", ",", "\<\"ColorDetect\"\>", 
   ",", "\<\"ColorDistance\"\>", ",", "\<\"ColorFunction\"\>", 
   ",", "\<\"ColorFunctionBinning\"\>", ",", "\<\"ColorFunctionScaling\"\>", 
   ",", "\<\"ColorNegate\"\>", ",", "\<\"ColorProfileData\"\>", 
   ",", "\<\"ColorQ\"\>", ",", "\<\"ColorQuantize\"\>", 
   ",", "\<\"ColorReplace\"\>", ",", "\<\"ColorRules\"\>", 
   ",", "\<\"ColorSeparate\"\>", ",", "\<\"ColorSetter\"\>", 
   ",", "\<\"ColorSlider\"\>", ",", "\<\"ColorSpace\"\>", 
   ",", "\<\"ColorToneMapping\"\>", ",", "\<\"Colorize\"\>", 
   ",", "\<\"ColorsNear\"\>", ",", "\<\"Column\"\>", 
   ",", "\<\"ColumnAlignments\"\>", ",", "\<\"ColumnLines\"\>", 
   ",", "\<\"ColumnSpacings\"\>", ",", "\<\"ColumnWidths\"\>", 
   ",", "\<\"ColumnsEqual\"\>", ",", "\<\"CombinatorB\"\>", 
   ",", "\<\"CombinatorC\"\>", ",", "\<\"CombinatorI\"\>", 
   ",", "\<\"CombinatorK\"\>", ",", "\<\"CombinatorS\"\>", 
   ",", "\<\"CombinatorW\"\>", ",", "\<\"CombinatorY\"\>", 
   ",", "\<\"CombinedEntityClass\"\>", ",", "\<\"CombinerFunction\"\>", 
   ",", "\<\"CometData\"\>", ",", "\<\"CommonName\"\>", 
   ",", "\<\"CommonUnits\"\>", ",", "\<\"Commonest\"\>", 
   ",", "\<\"CommonestFilter\"\>", ",", "\<\"CommunityBoundaryStyle\"\>", 
   ",", "\<\"CommunityGraphPlot\"\>", ",", "\<\"CommunityLabels\"\>", 
   ",", "\<\"CommunityRegionStyle\"\>", ",", "\<\"CompanyData\"\>", 
   ",", "\<\"CompatibleUnitQ\"\>", ",", "\<\"CompilationOptions\"\>", 
   ",", "\<\"CompilationTarget\"\>", ",", "\<\"Compile\"\>", 
   ",", "\<\"Compiled\"\>", ",", "\<\"CompiledCodeFunction\"\>", 
   ",", "\<\"CompiledFunction\"\>", ",", "\<\"CompiledLayer\"\>", 
   ",", "\<\"CompilerEnvironment\"\>", 
   ",", "\<\"CompilerEnvironmentAppendTo\"\>", 
   ",", "\<\"CompilerEnvironmentObject\"\>", ",", "\<\"CompilerOptions\"\>", 
   ",", "\<\"Complement\"\>", ",", "\<\"ComplementedEntityClass\"\>", 
   ",", "\<\"CompleteGraph\"\>", ",", "\<\"CompleteGraphQ\"\>", 
   ",", "\<\"CompleteIntegral\"\>", ",", "\<\"CompleteKaryTree\"\>", 
   ",", "\<\"Complex\"\>", ",", "\<\"ComplexArrayPlot\"\>", 
   ",", "\<\"ComplexContourPlot\"\>", ",", "\<\"ComplexExpand\"\>", 
   ",", "\<\"ComplexInfinity\"\>", ",", "\<\"ComplexListPlot\"\>", 
   ",", "\<\"ComplexPlot\"\>", ",", "\<\"ComplexPlot3D\"\>", 
   ",", "\<\"ComplexRegionPlot\"\>", ",", "\<\"ComplexStreamPlot\"\>", 
   ",", "\<\"ComplexVectorPlot\"\>", ",", "\<\"Complexes\"\>", 
   ",", "\<\"ComplexityFunction\"\>", ",", "\<\"ComponentMeasurements\"\>", 
   ",", "\<\"ComposeList\"\>", ",", "\<\"ComposeSeries\"\>", 
   ",", "\<\"CompositeQ\"\>", ",", "\<\"Composition\"\>", 
   ",", "\<\"CompoundElement\"\>", ",", "\<\"CompoundExpression\"\>", 
   ",", "\<\"CompoundPoissonDistribution\"\>", 
   ",", "\<\"CompoundPoissonProcess\"\>", 
   ",", "\<\"CompoundRenewalProcess\"\>", ",", "\<\"Compress\"\>", 
   ",", "\<\"CompressionLevel\"\>", ",", "\<\"ComputeUncertainty\"\>", 
   ",", "\<\"ConcaveHullMesh\"\>", ",", "\<\"Condition\"\>", 
   ",", "\<\"ConditionalExpression\"\>", ",", "\<\"Conditioned\"\>", 
   ",", "\<\"Cone\"\>", ",", "\<\"ConfidenceLevel\"\>", 
   ",", "\<\"ConfidenceRange\"\>", ",", "\<\"ConfidenceTransform\"\>", 
   ",", "\<\"Confirm\"\>", ",", "\<\"ConfirmAssert\"\>", 
   ",", "\<\"ConfirmBy\"\>", ",", "\<\"ConfirmMatch\"\>", 
   ",", "\<\"ConfirmQuiet\"\>", ",", "\<\"ConformAudio\"\>", 
   ",", "\<\"ConformImages\"\>", ",", "\<\"ConformationMethod\"\>", 
   ",", "\<\"Congruent\"\>", ",", "\<\"ConicGradientFilling\"\>", 
   ",", "\<\"ConicHullRegion\"\>", ",", "\<\"ConicOptimization\"\>", 
   ",", "\<\"Conjugate\"\>", ",", "\<\"ConjugateTranspose\"\>", 
   ",", "\<\"Conjunction\"\>", ",", "\<\"ConnectLibraryCallbackFunction\"\>", 
   ",", "\<\"ConnectSystemModelComponents\"\>", 
   ",", "\<\"ConnectSystemModelController\"\>", 
   ",", "\<\"ConnectedComponents\"\>", 
   ",", "\<\"ConnectedGraphComponents\"\>", ",", "\<\"ConnectedGraphQ\"\>", 
   ",", "\<\"ConnectedMeshComponents\"\>", 
   ",", "\<\"ConnectedMoleculeComponents\"\>", 
   ",", "\<\"ConnectedMoleculeQ\"\>", ",", "\<\"ConnectionSettings\"\>", 
   ",", "\<\"ConnesWindow\"\>", ",", "\<\"ConoverTest\"\>", 
   ",", "\<\"ConservativeConvectionPDETerm\"\>", ",", "\<\"Constant\"\>", 
   ",", "\<\"ConstantArray\"\>", ",", "\<\"ConstantImage\"\>", 
   ",", "\<\"ConstantRegionQ\"\>", ",", "\<\"Constants\"\>", 
   ",", "\<\"ConstellationData\"\>", ",", "\<\"Construct\"\>", 
   ",", "\<\"Containing\"\>", ",", "\<\"ContainsAll\"\>", 
   ",", "\<\"ContainsAny\"\>", ",", "\<\"ContainsExactly\"\>", 
   ",", "\<\"ContainsNone\"\>", ",", "\<\"ContainsOnly\"\>", 
   ",", "\<\"ContentDetectorFunction\"\>", ",", "\<\"ContentFieldOptions\"\>",
    ",", "\<\"ContentLocationFunction\"\>", ",", "\<\"ContentObject\"\>", 
   ",", "\<\"ContentPadding\"\>", ",", "\<\"ContentSelectable\"\>", 
   ",", "\<\"ContentSize\"\>", ",", "\<\"Context\"\>", 
   ",", "\<\"ContextToFileName\"\>", ",", "\<\"Contexts\"\>", 
   ",", "\<\"Continue\"\>", ",", "\<\"ContinuedFraction\"\>", 
   ",", "\<\"ContinuedFractionK\"\>", ",", "\<\"ContinuousAction\"\>", 
   ",", "\<\"ContinuousMarkovProcess\"\>", ",", "\<\"ContinuousTask\"\>", 
   ",", "\<\"ContinuousTimeModelQ\"\>", ",", "\<\"ContinuousWaveletData\"\>", 
   ",", "\<\"ContinuousWaveletTransform\"\>", ",", "\<\"ContourDetect\"\>", 
   ",", "\<\"ContourLabels\"\>", ",", "\<\"ContourPlot\"\>", 
   ",", "\<\"ContourPlot3D\"\>", ",", "\<\"ContourShading\"\>", 
   ",", "\<\"ContourStyle\"\>", ",", "\<\"Contours\"\>", 
   ",", "\<\"ContraharmonicMean\"\>", ",", "\<\"ContrastiveLossLayer\"\>", 
   ",", "\<\"Control\"\>", ",", "\<\"ControlActive\"\>", 
   ",", "\<\"ControlPlacement\"\>", ",", "\<\"ControlType\"\>", 
   ",", "\<\"ControllabilityGramian\"\>", 
   ",", "\<\"ControllabilityMatrix\"\>", 
   ",", "\<\"ControllableDecomposition\"\>", 
   ",", "\<\"ControllableModelQ\"\>", ",", "\<\"ControllerInformation\"\>", 
   ",", "\<\"ControllerLinking\"\>", ",", "\<\"ControllerManipulate\"\>", 
   ",", "\<\"ControllerMethod\"\>", ",", "\<\"ControllerPath\"\>", 
   ",", "\<\"ControllerState\"\>", ",", "\<\"ControlsRendering\"\>", 
   ",", "\<\"ConvectionPDETerm\"\>", ",", "\<\"Convergents\"\>", 
   ",", "\<\"ConversionRules\"\>", ",", "\<\"ConvexHullMesh\"\>", 
   ",", "\<\"ConvexHullRegion\"\>", ",", "\<\"ConvexOptimization\"\>", 
   ",", "\<\"ConvexPolygonQ\"\>", ",", "\<\"ConvexPolyhedronQ\"\>", 
   ",", "\<\"ConvexRegionQ\"\>", ",", "\<\"ConvolutionLayer\"\>", 
   ",", "\<\"Convolve\"\>", ",", "\<\"ConwayGroupCo1\"\>", 
   ",", "\<\"ConwayGroupCo2\"\>", ",", "\<\"ConwayGroupCo3\"\>", 
   ",", "\<\"CookieFunction\"\>", ",", "\<\"CoordinateBoundingBox\"\>", 
   ",", "\<\"CoordinateBoundingBoxArray\"\>", ",", "\<\"CoordinateBounds\"\>",
    ",", "\<\"CoordinateBoundsArray\"\>", ",", "\<\"CoordinateChartData\"\>", 
   ",", "\<\"CoordinateTransform\"\>", ",", "\<\"CoordinateTransformData\"\>",
    ",", "\<\"CoordinatesToolOptions\"\>", ",", "\<\"CoplanarPoints\"\>", 
   ",", "\<\"CoprimeQ\"\>", ",", "\<\"Coproduct\"\>", 
   ",", "\<\"CopulaDistribution\"\>", ",", "\<\"CopyDatabin\"\>", 
   ",", "\<\"CopyDirectory\"\>", ",", "\<\"CopyFile\"\>", 
   ",", "\<\"CopyFunction\"\>", ",", "\<\"CopyToClipboard\"\>", 
   ",", "\<\"Copyable\"\>", ",", "\<\"CoreNilpotentDecomposition\"\>", 
   ",", "\<\"CornerFilter\"\>", ",", "\<\"CornerNeighbors\"\>", 
   ",", "\<\"Correlation\"\>", ",", "\<\"CorrelationDistance\"\>", 
   ",", "\<\"CorrelationFunction\"\>", ",", "\<\"CorrelationTest\"\>", 
   ",", "\<\"Cos\"\>", ",", "\<\"CosIntegral\"\>", ",", "\<\"Cosh\"\>", 
   ",", "\<\"CoshIntegral\"\>", ",", "\<\"CosineDistance\"\>", 
   ",", "\<\"CosineWindow\"\>", ",", "\<\"Cot\"\>", ",", "\<\"Coth\"\>", 
   ",", "\<\"CoulombF\"\>", ",", "\<\"CoulombG\"\>", ",", "\<\"CoulombH1\"\>",
    ",", "\<\"CoulombH2\"\>", ",", "\<\"Count\"\>", 
   ",", "\<\"CountDistinct\"\>", ",", "\<\"CountDistinctBy\"\>", 
   ",", "\<\"CountRoots\"\>", ",", "\<\"CountryData\"\>", 
   ",", "\<\"Counts\"\>", ",", "\<\"CountsBy\"\>", ",", "\<\"Covariance\"\>", 
   ",", "\<\"CovarianceEstimatorFunction\"\>", 
   ",", "\<\"CovarianceFunction\"\>", ",", "\<\"CoxIngersollRossProcess\"\>", 
   ",", "\<\"CoxModel\"\>", ",", "\<\"CoxModelFit\"\>", 
   ",", "\<\"CoxianDistribution\"\>", ",", "\<\"CramerVonMisesTest\"\>", 
   ",", "\<\"CreateArchive\"\>", ",", "\<\"CreateCellID\"\>", 
   ",", "\<\"CreateChannel\"\>", ",", "\<\"CreateCloudExpression\"\>", 
   ",", "\<\"CreateCompilerEnvironment\"\>", 
   ",", "\<\"CreateDataStructure\"\>", ",", "\<\"CreateDataSystemModel\"\>", 
   ",", "\<\"CreateDatabin\"\>", ",", "\<\"CreateDialog\"\>", 
   ",", "\<\"CreateDirectory\"\>", ",", "\<\"CreateDocument\"\>", 
   ",", "\<\"CreateFile\"\>", ",", "\<\"CreateIntermediateDirectories\"\>", 
   ",", "\<\"CreateLicenseEntitlement\"\>", 
   ",", "\<\"CreateManagedLibraryExpression\"\>", 
   ",", "\<\"CreateNotebook\"\>", ",", "\<\"CreatePacletArchive\"\>", 
   ",", "\<\"CreatePalette\"\>", ",", "\<\"CreatePermissionsGroup\"\>", 
   ",", "\<\"CreateSearchIndex\"\>", ",", "\<\"CreateSystemModel\"\>", 
   ",", "\<\"CreateUUID\"\>", ",", "\<\"CreateWindow\"\>", 
   ",", "\<\"CriterionFunction\"\>", ",", "\<\"CriticalSection\"\>", 
   ",", "\<\"CriticalityFailureImportance\"\>", 
   ",", "\<\"CriticalitySuccessImportance\"\>", ",", "\<\"Cross\"\>", 
   ",", "\<\"CrossEntropyLossLayer\"\>", ",", "\<\"CrossMatrix\"\>", 
   ",", "\<\"CrossingCount\"\>", ",", "\<\"CrossingDetect\"\>", 
   ",", "\<\"CrossingPolygon\"\>", ",", "\<\"Csc\"\>", ",", "\<\"Csch\"\>", 
   ",", "\<\"Cube\"\>", ",", "\<\"CubeRoot\"\>", ",", "\<\"Cubics\"\>", 
   ",", "\<\"Cuboid\"\>", ",", "\<\"Cumulant\"\>", 
   ",", "\<\"CumulantGeneratingFunction\"\>", ",", "\<\"Cup\"\>", 
   ",", "\<\"CupCap\"\>", ",", "\<\"Curl\"\>", ",", "\<\"CurrencyConvert\"\>",
    ",", "\<\"CurrentDate\"\>", ",", "\<\"CurrentImage\"\>", 
   ",", "\<\"CurrentNotebookImage\"\>", ",", "\<\"CurrentScreenImage\"\>", 
   ",", "\<\"CurrentValue\"\>", ",", "\<\"CurryApplied\"\>", 
   ",", "\<\"CurvatureFlowFilter\"\>", ",", "\<\"CurveClosed\"\>", 
   ",", "\<\"Cyan\"\>", ",", "\<\"CycleGraph\"\>", 
   ",", "\<\"CycleIndexPolynomial\"\>", ",", "\<\"Cycles\"\>", 
   ",", "\<\"CyclicGroup\"\>", ",", "\<\"Cyclotomic\"\>", 
   ",", "\<\"Cylinder\"\>", ",", "\<\"CylindricalDecomposition\"\>", 
   ",", "\<\"CylindricalDecompositionFunction\"\>", ",", "\<\"D\"\>", 
   ",", "\<\"DEigensystem\"\>", ",", "\<\"DEigenvalues\"\>", 
   ",", "\<\"DGaussianWavelet\"\>", ",", "\<\"DMSList\"\>", 
   ",", "\<\"DMSString\"\>", ",", "\<\"DSolve\"\>", 
   ",", "\<\"DSolveValue\"\>", ",", "\<\"DagumDistribution\"\>", 
   ",", "\<\"DamData\"\>", ",", "\<\"DamerauLevenshteinDistance\"\>", 
   ",", "\<\"Darker\"\>", ",", "\<\"Dashed\"\>", ",", "\<\"Dashing\"\>", 
   ",", "\<\"DataDistribution\"\>", ",", "\<\"DataRange\"\>", 
   ",", "\<\"DataReversed\"\>", ",", "\<\"DataStructure\"\>", 
   ",", "\<\"DataStructureQ\"\>", ",", "\<\"DatabaseConnect\"\>", 
   ",", "\<\"DatabaseDisconnect\"\>", ",", "\<\"DatabaseReference\"\>", 
   ",", "\<\"Databin\"\>", ",", "\<\"DatabinAdd\"\>", 
   ",", "\<\"DatabinSubmit\"\>", ",", "\<\"DatabinUpload\"\>", 
   ",", "\<\"Databins\"\>", ",", "\<\"Dataset\"\>", 
   ",", "\<\"DatasetTheme\"\>", ",", "\<\"DateBounds\"\>", 
   ",", "\<\"DateDifference\"\>", ",", "\<\"DateFormat\"\>", 
   ",", "\<\"DateFunction\"\>", ",", "\<\"DateHistogram\"\>", 
   ",", "\<\"DateInterval\"\>", ",", "\<\"DateList\"\>", 
   ",", "\<\"DateListLogPlot\"\>", ",", "\<\"DateListPlot\"\>", 
   ",", "\<\"DateListStepPlot\"\>", ",", "\<\"DateObject\"\>", 
   ",", "\<\"DateObjectQ\"\>", ",", "\<\"DateOverlapsQ\"\>", 
   ",", "\<\"DatePattern\"\>", ",", "\<\"DatePlus\"\>", 
   ",", "\<\"DateRange\"\>", ",", "\<\"DateReduction\"\>", 
   ",", "\<\"DateScale\"\>", ",", "\<\"DateSelect\"\>", 
   ",", "\<\"DateString\"\>", ",", "\<\"DateTicksFormat\"\>", 
   ",", "\<\"DateValue\"\>", ",", "\<\"DateWithinQ\"\>", ",", "\<\"Dated\"\>",
    ",", "\<\"DatedUnit\"\>", ",", "\<\"DaubechiesWavelet\"\>", 
   ",", "\<\"DavisDistribution\"\>", ",", "\<\"DawsonF\"\>", 
   ",", "\<\"DayCount\"\>", ",", "\<\"DayCountConvention\"\>", 
   ",", "\<\"DayHemisphere\"\>", ",", "\<\"DayMatchQ\"\>", 
   ",", "\<\"DayName\"\>", ",", "\<\"DayNightTerminator\"\>", 
   ",", "\<\"DayPlus\"\>", ",", "\<\"DayRange\"\>", ",", "\<\"DayRound\"\>", 
   ",", "\<\"DaylightQ\"\>", ",", "\<\"DeBruijnGraph\"\>", 
   ",", "\<\"DeBruijnSequence\"\>", ",", "\<\"Decapitalize\"\>", 
   ",", "\<\"DecimalForm\"\>", ",", "\<\"DeclarePackage\"\>", 
   ",", "\<\"Decompose\"\>", ",", "\<\"DeconvolutionLayer\"\>", 
   ",", "\<\"Decrement\"\>", ",", "\<\"Decrypt\"\>", 
   ",", "\<\"DecryptFile\"\>", ",", "\<\"DedekindEta\"\>", 
   ",", "\<\"DeepSpaceProbeData\"\>", ",", "\<\"Default\"\>", 
   ",", "\<\"DefaultAxesStyle\"\>", ",", "\<\"DefaultBaseStyle\"\>", 
   ",", "\<\"DefaultBoxStyle\"\>", ",", "\<\"DefaultButton\"\>", 
   ",", "\<\"DefaultDuplicateCellStyle\"\>", ",", "\<\"DefaultDuration\"\>", 
   ",", "\<\"DefaultElement\"\>", ",", "\<\"DefaultFaceGridsStyle\"\>", 
   ",", "\<\"DefaultFieldHintStyle\"\>", ",", "\<\"DefaultFrameStyle\"\>", 
   ",", "\<\"DefaultFrameTicksStyle\"\>", 
   ",", "\<\"DefaultGridLinesStyle\"\>", ",", "\<\"DefaultLabelStyle\"\>", 
   ",", "\<\"DefaultMenuStyle\"\>", ",", "\<\"DefaultNaturalLanguage\"\>", 
   ",", "\<\"DefaultNewCellStyle\"\>", ",", "\<\"DefaultOptions\"\>", 
   ",", "\<\"DefaultPrintPrecision\"\>", ",", "\<\"DefaultTicksStyle\"\>", 
   ",", "\<\"DefaultTooltipStyle\"\>", ",", "\<\"DefaultValues\"\>", 
   ",", "\<\"Defer\"\>", ",", "\<\"DefineInputStreamMethod\"\>", 
   ",", "\<\"DefineOutputStreamMethod\"\>", 
   ",", "\<\"DefineResourceFunction\"\>", ",", "\<\"Definition\"\>", 
   ",", "\<\"Degree\"\>", ",", "\<\"DegreeCentrality\"\>", 
   ",", "\<\"DegreeGraphDistribution\"\>", ",", "\<\"Deinitialization\"\>", 
   ",", "\<\"Del\"\>", ",", "\<\"DelaunayMesh\"\>", ",", "\<\"Delayed\"\>", 
   ",", "\<\"Deletable\"\>", ",", "\<\"Delete\"\>", 
   ",", "\<\"DeleteAnomalies\"\>", ",", "\<\"DeleteBorderComponents\"\>", 
   ",", "\<\"DeleteCases\"\>", ",", "\<\"DeleteChannel\"\>", 
   ",", "\<\"DeleteCloudExpression\"\>", ",", "\<\"DeleteContents\"\>", 
   ",", "\<\"DeleteDirectory\"\>", ",", "\<\"DeleteDuplicates\"\>", 
   ",", "\<\"DeleteDuplicatesBy\"\>", ",", "\<\"DeleteFile\"\>", 
   ",", "\<\"DeleteMissing\"\>", ",", "\<\"DeleteObject\"\>", 
   ",", "\<\"DeletePermissionsKey\"\>", ",", "\<\"DeleteSearchIndex\"\>", 
   ",", "\<\"DeleteSmallComponents\"\>", ",", "\<\"DeleteStopwords\"\>", 
   ",", "\<\"DelimitedSequence\"\>", ",", "\<\"Delimiter\"\>", 
   ",", "\<\"DelimiterAutoMatching\"\>", ",", "\<\"DelimiterFlashTime\"\>", 
   ",", "\<\"Delimiters\"\>", ",", "\<\"DeliveryFunction\"\>", 
   ",", "\<\"Dendrogram\"\>", ",", "\<\"Denominator\"\>", 
   ",", "\<\"DensityHistogram\"\>", ",", "\<\"DensityPlot\"\>", 
   ",", "\<\"DensityPlot3D\"\>", ",", "\<\"DependentVariables\"\>", 
   ",", "\<\"Deploy\"\>", ",", "\<\"Deployed\"\>", ",", "\<\"Depth\"\>", 
   ",", "\<\"DepthFirstScan\"\>", ",", "\<\"Derivative\"\>", 
   ",", "\<\"DerivativeFilter\"\>", ",", "\<\"DerivativePDETerm\"\>", 
   ",", "\<\"DerivedKey\"\>", ",", "\<\"DescriptorStateSpace\"\>", 
   ",", "\<\"DesignMatrix\"\>", ",", "\<\"Det\"\>", 
   ",", "\<\"DeviceClose\"\>", ",", "\<\"DeviceConfigure\"\>", 
   ",", "\<\"DeviceExecute\"\>", ",", "\<\"DeviceExecuteAsynchronous\"\>", 
   ",", "\<\"DeviceObject\"\>", ",", "\<\"DeviceOpen\"\>", 
   ",", "\<\"DeviceRead\"\>", ",", "\<\"DeviceReadBuffer\"\>", 
   ",", "\<\"DeviceReadLatest\"\>", ",", "\<\"DeviceReadList\"\>", 
   ",", "\<\"DeviceReadTimeSeries\"\>", ",", "\<\"DeviceStreams\"\>", 
   ",", "\<\"DeviceWrite\"\>", ",", "\<\"DeviceWriteBuffer\"\>", 
   ",", "\<\"Devices\"\>", ",", "\<\"Diagonal\"\>", 
   ",", "\<\"DiagonalMatrix\"\>", ",", "\<\"DiagonalMatrixQ\"\>", 
   ",", "\<\"DiagonalizableMatrixQ\"\>", ",", "\<\"Dialog\"\>", 
   ",", "\<\"DialogInput\"\>", ",", "\<\"DialogNotebook\"\>", 
   ",", "\<\"DialogProlog\"\>", ",", "\<\"DialogReturn\"\>", 
   ",", "\<\"DialogSymbols\"\>", ",", "\<\"Diamond\"\>", 
   ",", "\<\"DiamondMatrix\"\>", ",", "\<\"DiceDissimilarity\"\>", 
   ",", "\<\"DictionaryLookup\"\>", ",", "\<\"DictionaryWordQ\"\>", 
   ",", "\<\"DifferenceDelta\"\>", ",", "\<\"DifferenceQuotient\"\>", 
   ",", "\<\"DifferenceRoot\"\>", ",", "\<\"DifferenceRootReduce\"\>", 
   ",", "\<\"Differences\"\>", ",", "\<\"DifferentialD\"\>", 
   ",", "\<\"DifferentialRoot\"\>", ",", "\<\"DifferentialRootReduce\"\>", 
   ",", "\<\"DifferentiatorFilter\"\>", ",", "\<\"DiffusionPDETerm\"\>", 
   ",", "\<\"DiggleGatesPointProcess\"\>", 
   ",", "\<\"DiggleGrattonPointProcess\"\>", ",", "\<\"DigitBlock\"\>", 
   ",", "\<\"DigitCharacter\"\>", ",", "\<\"DigitCount\"\>", 
   ",", "\<\"DigitQ\"\>", ",", "\<\"DigitalSignature\"\>", 
   ",", "\<\"DihedralAngle\"\>", ",", "\<\"DihedralGroup\"\>", 
   ",", "\<\"Dilation\"\>", ",", "\<\"DimensionReduce\"\>", 
   ",", "\<\"DimensionReducerFunction\"\>", ",", "\<\"DimensionReduction\"\>",
    ",", "\<\"DimensionalCombinations\"\>", 
   ",", "\<\"DimensionalMeshComponents\"\>", ",", "\<\"Dimensions\"\>", 
   ",", "\<\"DiracComb\"\>", ",", "\<\"DiracDelta\"\>", 
   ",", "\<\"DirectedEdge\"\>", ",", "\<\"DirectedEdges\"\>", 
   ",", "\<\"DirectedGraph\"\>", ",", "\<\"DirectedGraphQ\"\>", 
   ",", "\<\"DirectedInfinity\"\>", ",", "\<\"Direction\"\>", 
   ",", "\<\"DirectionalLight\"\>", ",", "\<\"Directive\"\>", 
   ",", "\<\"Directory\"\>", ",", "\<\"DirectoryName\"\>", 
   ",", "\<\"DirectoryQ\"\>", ",", "\<\"DirectoryStack\"\>", 
   ",", "\<\"DirichletBeta\"\>", ",", "\<\"DirichletCharacter\"\>", 
   ",", "\<\"DirichletCondition\"\>", ",", "\<\"DirichletConvolve\"\>", 
   ",", "\<\"DirichletDistribution\"\>", ",", "\<\"DirichletEta\"\>", 
   ",", "\<\"DirichletL\"\>", ",", "\<\"DirichletLambda\"\>", 
   ",", "\<\"DirichletTransform\"\>", ",", "\<\"DirichletWindow\"\>", 
   ",", "\<\"DisableFormatting\"\>", ",", "\<\"DiscreteAsymptotic\"\>", 
   ",", "\<\"DiscreteChirpZTransform\"\>", ",", "\<\"DiscreteConvolve\"\>", 
   ",", "\<\"DiscreteDelta\"\>", ",", "\<\"DiscreteHadamardTransform\"\>", 
   ",", "\<\"DiscreteIndicator\"\>", ",", "\<\"DiscreteLQEstimatorGains\"\>", 
   ",", "\<\"DiscreteLQRegulatorGains\"\>", ",", "\<\"DiscreteLimit\"\>", 
   ",", "\<\"DiscreteLyapunovSolve\"\>", ",", "\<\"DiscreteMarkovProcess\"\>",
    ",", "\<\"DiscreteMaxLimit\"\>", ",", "\<\"DiscreteMinLimit\"\>", 
   ",", "\<\"DiscretePlot\"\>", ",", "\<\"DiscretePlot3D\"\>", 
   ",", "\<\"DiscreteRatio\"\>", ",", "\<\"DiscreteRiccatiSolve\"\>", 
   ",", "\<\"DiscreteShift\"\>", ",", "\<\"DiscreteTimeModelQ\"\>", 
   ",", "\<\"DiscreteUniformDistribution\"\>", 
   ",", "\<\"DiscreteVariables\"\>", ",", "\<\"DiscreteWaveletData\"\>", 
   ",", "\<\"DiscreteWaveletPacketTransform\"\>", 
   ",", "\<\"DiscreteWaveletTransform\"\>", ",", "\<\"DiscretizeGraphics\"\>",
    ",", "\<\"DiscretizeRegion\"\>", ",", "\<\"Discriminant\"\>", 
   ",", "\<\"DisjointQ\"\>", ",", "\<\"Disjunction\"\>", ",", "\<\"Disk\"\>", 
   ",", "\<\"DiskMatrix\"\>", ",", "\<\"DiskSegment\"\>", 
   ",", "\<\"Dispatch\"\>", ",", "\<\"DispersionEstimatorFunction\"\>", 
   ",", "\<\"DisplayAllSteps\"\>", ",", "\<\"DisplayEndPacket\"\>", 
   ",", "\<\"DisplayForm\"\>", ",", "\<\"DisplayFunction\"\>", 
   ",", "\<\"DisplayPacket\"\>", ",", "\<\"DistanceFunction\"\>", 
   ",", "\<\"DistanceMatrix\"\>", ",", "\<\"DistanceTransform\"\>", 
   ",", "\<\"Distribute\"\>", ",", "\<\"DistributeDefinitions\"\>", 
   ",", "\<\"Distributed\"\>", ",", "\<\"DistributedContexts\"\>", 
   ",", "\<\"DistributionChart\"\>", ",", "\<\"DistributionFitTest\"\>", 
   ",", "\<\"DistributionParameterAssumptions\"\>", 
   ",", "\<\"DistributionParameterQ\"\>", ",", "\<\"Dithering\"\>", 
   ",", "\<\"Div\"\>", ",", "\<\"Divide\"\>", ",", "\<\"DivideBy\"\>", 
   ",", "\<\"DivideSides\"\>", ",", "\<\"Dividers\"\>", 
   ",", "\<\"Divisible\"\>", ",", "\<\"DivisorSigma\"\>", 
   ",", "\<\"DivisorSum\"\>", ",", "\<\"Divisors\"\>", ",", "\<\"Do\"\>", 
   ",", "\<\"DockedCells\"\>", ",", "\<\"DocumentGenerator\"\>", 
   ",", "\<\"DocumentGeneratorInformation\"\>", 
   ",", "\<\"DocumentGenerators\"\>", ",", "\<\"DocumentNotebook\"\>", 
   ",", "\<\"DocumentWeightingRules\"\>", ",", "\<\"Dodecahedron\"\>", 
   ",", "\<\"DominantColors\"\>", ",", "\<\"DominatorTreeGraph\"\>", 
   ",", "\<\"DominatorVertexList\"\>", ",", "\<\"Dot\"\>", 
   ",", "\<\"DotDashed\"\>", ",", "\<\"DotEqual\"\>", ",", "\<\"DotLayer\"\>",
    ",", "\<\"Dotted\"\>", ",", "\<\"DoubleBracketingBar\"\>", 
   ",", "\<\"DoubleDownArrow\"\>", ",", "\<\"DoubleLeftArrow\"\>", 
   ",", "\<\"DoubleLeftRightArrow\"\>", ",", "\<\"DoubleLeftTee\"\>", 
   ",", "\<\"DoubleLongLeftArrow\"\>", 
   ",", "\<\"DoubleLongLeftRightArrow\"\>", 
   ",", "\<\"DoubleLongRightArrow\"\>", ",", "\<\"DoubleRightArrow\"\>", 
   ",", "\<\"DoubleRightTee\"\>", ",", "\<\"DoubleUpArrow\"\>", 
   ",", "\<\"DoubleUpDownArrow\"\>", ",", "\<\"DoubleVerticalBar\"\>", 
   ",", "\<\"DownArrow\"\>", ",", "\<\"DownArrowBar\"\>", 
   ",", "\<\"DownArrowUpArrow\"\>", ",", "\<\"DownLeftRightVector\"\>", 
   ",", "\<\"DownLeftTeeVector\"\>", ",", "\<\"DownLeftVector\"\>", 
   ",", "\<\"DownLeftVectorBar\"\>", ",", "\<\"DownRightTeeVector\"\>", 
   ",", "\<\"DownRightVector\"\>", ",", "\<\"DownRightVectorBar\"\>", 
   ",", "\<\"DownTee\"\>", ",", "\<\"DownTeeArrow\"\>", 
   ",", "\<\"DownValues\"\>", ",", "\<\"Downsample\"\>", 
   ",", "\<\"DrazinInverse\"\>", ",", "\<\"Drop\"\>", 
   ",", "\<\"DropoutLayer\"\>", ",", "\<\"Dt\"\>", 
   ",", "\<\"DualPlanarGraph\"\>", ",", "\<\"DualPolyhedron\"\>", 
   ",", "\<\"DualSystemsModel\"\>", ",", "\<\"DumpSave\"\>", 
   ",", "\<\"DuplicateFreeQ\"\>", ",", "\<\"Duration\"\>", 
   ",", "\<\"Dynamic\"\>", ",", "\<\"DynamicEvaluationTimeout\"\>", 
   ",", "\<\"DynamicGeoGraphics\"\>", ",", "\<\"DynamicImage\"\>", 
   ",", "\<\"DynamicModule\"\>", ",", "\<\"DynamicModuleValues\"\>", 
   ",", "\<\"DynamicSetting\"\>", ",", "\<\"DynamicUpdating\"\>", 
   ",", "\<\"DynamicWrapper\"\>", ",", "\<\"E\"\>", 
   ",", "\<\"EarthImpactData\"\>", ",", "\<\"EarthquakeData\"\>", 
   ",", "\<\"EccentricityCentrality\"\>", ",", "\<\"Echo\"\>", 
   ",", "\<\"EchoEvaluation\"\>", ",", "\<\"EchoFunction\"\>", 
   ",", "\<\"EchoLabel\"\>", ",", "\<\"EchoTiming\"\>", 
   ",", "\<\"EclipseType\"\>", ",", "\<\"EdgeAdd\"\>", 
   ",", "\<\"EdgeBetweennessCentrality\"\>", ",", "\<\"EdgeCapacity\"\>", 
   ",", "\<\"EdgeChromaticNumber\"\>", ",", "\<\"EdgeConnectivity\"\>", 
   ",", "\<\"EdgeContract\"\>", ",", "\<\"EdgeCost\"\>", 
   ",", "\<\"EdgeCount\"\>", ",", "\<\"EdgeCoverQ\"\>", 
   ",", "\<\"EdgeCycleMatrix\"\>", ",", "\<\"EdgeDelete\"\>", 
   ",", "\<\"EdgeDetect\"\>", ",", "\<\"EdgeForm\"\>", 
   ",", "\<\"EdgeIndex\"\>", ",", "\<\"EdgeLabelStyle\"\>", 
   ",", "\<\"EdgeLabels\"\>", ",", "\<\"EdgeList\"\>", ",", "\<\"EdgeQ\"\>", 
   ",", "\<\"EdgeRules\"\>", ",", "\<\"EdgeShapeFunction\"\>", 
   ",", "\<\"EdgeStyle\"\>", ",", "\<\"EdgeTaggedGraph\"\>", 
   ",", "\<\"EdgeTaggedGraphQ\"\>", ",", "\<\"EdgeTags\"\>", 
   ",", "\<\"EdgeTransitiveGraphQ\"\>", ",", "\<\"EdgeValueRange\"\>", 
   ",", "\<\"EdgeValueSizes\"\>", ",", "\<\"EdgeWeight\"\>", 
   ",", "\<\"EdgeWeightedGraphQ\"\>", ",", "\<\"EditDistance\"\>", 
   ",", "\<\"Editable\"\>", ",", "\<\"EffectiveInterest\"\>", 
   ",", "\<\"Eigensystem\"\>", ",", "\<\"Eigenvalues\"\>", 
   ",", "\<\"EigenvectorCentrality\"\>", ",", "\<\"Eigenvectors\"\>", 
   ",", "\<\"Element\"\>", ",", "\<\"ElementData\"\>", 
   ",", "\<\"ElementwiseLayer\"\>", ",", "\<\"ElidedForms\"\>", 
   ",", "\<\"Eliminate\"\>", ",", "\<\"Ellipsoid\"\>", 
   ",", "\<\"EllipticE\"\>", ",", "\<\"EllipticExp\"\>", 
   ",", "\<\"EllipticExpPrime\"\>", ",", "\<\"EllipticF\"\>", 
   ",", "\<\"EllipticFilterModel\"\>", ",", "\<\"EllipticK\"\>", 
   ",", "\<\"EllipticLog\"\>", ",", "\<\"EllipticNomeQ\"\>", 
   ",", "\<\"EllipticPi\"\>", ",", "\<\"EllipticTheta\"\>", 
   ",", "\<\"EllipticThetaPrime\"\>", ",", "\<\"EmbedCode\"\>", 
   ",", "\<\"EmbeddedHTML\"\>", ",", "\<\"EmbeddedSQLEntityClass\"\>", 
   ",", "\<\"EmbeddedSQLExpression\"\>", ",", "\<\"EmbeddedService\"\>", 
   ",", "\<\"EmbeddingLayer\"\>", ",", "\<\"EmitSound\"\>", 
   ",", "\<\"EmpiricalDistribution\"\>", ",", "\<\"EmptyGraphQ\"\>", 
   ",", "\<\"EmptyRegion\"\>", ",", "\<\"EmptySpaceF\"\>", 
   ",", "\<\"Enabled\"\>", ",", "\<\"Enclose\"\>", ",", "\<\"Encode\"\>", 
   ",", "\<\"Encrypt\"\>", ",", "\<\"EncryptFile\"\>", 
   ",", "\<\"EncryptedObject\"\>", ",", "\<\"End\"\>", 
   ",", "\<\"EndDialogPacket\"\>", ",", "\<\"EndOfBuffer\"\>", 
   ",", "\<\"EndOfFile\"\>", ",", "\<\"EndOfLine\"\>", 
   ",", "\<\"EndOfString\"\>", ",", "\<\"EndPackage\"\>", 
   ",", "\<\"EngineeringForm\"\>", ",", "\<\"EnterExpressionPacket\"\>", 
   ",", "\<\"EnterTextPacket\"\>", ",", "\<\"Entity\"\>", 
   ",", "\<\"EntityClass\"\>", ",", "\<\"EntityClassList\"\>", 
   ",", "\<\"EntityCopies\"\>", ",", "\<\"EntityFunction\"\>", 
   ",", "\<\"EntityGroup\"\>", ",", "\<\"EntityInstance\"\>", 
   ",", "\<\"EntityList\"\>", ",", "\<\"EntityPrefetch\"\>", 
   ",", "\<\"EntityProperties\"\>", ",", "\<\"EntityProperty\"\>", 
   ",", "\<\"EntityPropertyClass\"\>", ",", "\<\"EntityRegister\"\>", 
   ",", "\<\"EntityStore\"\>", ",", "\<\"EntityStores\"\>", 
   ",", "\<\"EntityTypeName\"\>", ",", "\<\"EntityUnregister\"\>", 
   ",", "\<\"EntityValue\"\>", ",", "\<\"Entropy\"\>", 
   ",", "\<\"EntropyFilter\"\>", ",", "\<\"Environment\"\>", 
   ",", "\<\"Epilog\"\>", ",", "\<\"EpilogFunction\"\>", ",", "\<\"Equal\"\>",
    ",", "\<\"EqualTilde\"\>", ",", "\<\"EqualTo\"\>", 
   ",", "\<\"Equilibrium\"\>", ",", "\<\"EquirippleFilterKernel\"\>", 
   ",", "\<\"Equivalent\"\>", ",", "\<\"Erf\"\>", ",", "\<\"Erfc\"\>", 
   ",", "\<\"Erfi\"\>", ",", "\<\"ErlangB\"\>", ",", "\<\"ErlangC\"\>", 
   ",", "\<\"ErlangDistribution\"\>", ",", "\<\"Erosion\"\>", 
   ",", "\<\"ErrorBox\"\>", ",", "\<\"EscapeRadius\"\>", 
   ",", "\<\"EstimatedBackground\"\>", ",", "\<\"EstimatedDistribution\"\>", 
   ",", "\<\"EstimatedPointProcess\"\>", ",", "\<\"EstimatedProcess\"\>", 
   ",", "\<\"EstimatedVariogramModel\"\>", ",", "\<\"EstimatorGains\"\>", 
   ",", "\<\"EstimatorRegulator\"\>", ",", "\<\"EuclideanDistance\"\>", 
   ",", "\<\"EulerAngles\"\>", ",", "\<\"EulerCharacteristic\"\>", 
   ",", "\<\"EulerE\"\>", ",", "\<\"EulerGamma\"\>", 
   ",", "\<\"EulerMatrix\"\>", ",", "\<\"EulerPhi\"\>", 
   ",", "\<\"EulerianGraphQ\"\>", ",", "\<\"Evaluatable\"\>", 
   ",", "\<\"Evaluate\"\>", ",", "\<\"EvaluatePacket\"\>", 
   ",", "\<\"EvaluationBox\"\>", ",", "\<\"EvaluationCell\"\>", 
   ",", "\<\"EvaluationData\"\>", ",", "\<\"EvaluationElements\"\>", 
   ",", "\<\"EvaluationEnvironment\"\>", ",", "\<\"EvaluationMonitor\"\>", 
   ",", "\<\"EvaluationNotebook\"\>", ",", "\<\"EvaluationObject\"\>", 
   ",", "\<\"EvaluationPrivileges\"\>", ",", "\<\"Evaluator\"\>", 
   ",", "\<\"EvaluatorNames\"\>", ",", "\<\"EvenQ\"\>", 
   ",", "\<\"EventData\"\>", ",", "\<\"EventHandler\"\>", 
   ",", "\<\"EventLabels\"\>", ",", "\<\"EventSeries\"\>", 
   ",", "\<\"ExactBlackmanWindow\"\>", ",", "\<\"ExactNumberQ\"\>", 
   ",", "\<\"ExampleData\"\>", ",", "\<\"Except\"\>", 
   ",", "\<\"ExcludePods\"\>", ",", "\<\"ExcludedContexts\"\>", 
   ",", "\<\"ExcludedForms\"\>", ",", "\<\"ExcludedLines\"\>", 
   ",", "\<\"ExcludedPhysicalQuantities\"\>", ",", "\<\"Exclusions\"\>", 
   ",", "\<\"ExclusionsStyle\"\>", ",", "\<\"Exists\"\>", ",", "\<\"Exit\"\>",
    ",", "\<\"ExoplanetData\"\>", ",", "\<\"Exp\"\>", 
   ",", "\<\"ExpGammaDistribution\"\>", ",", "\<\"ExpIntegralE\"\>", 
   ",", "\<\"ExpIntegralEi\"\>", ",", "\<\"ExpToTrig\"\>", 
   ",", "\<\"Expand\"\>", ",", "\<\"ExpandAll\"\>", 
   ",", "\<\"ExpandDenominator\"\>", ",", "\<\"ExpandFileName\"\>", 
   ",", "\<\"ExpandNumerator\"\>", ",", "\<\"Expectation\"\>", 
   ",", "\<\"ExpirationDate\"\>", ",", "\<\"Exponent\"\>", 
   ",", "\<\"ExponentFunction\"\>", ",", "\<\"ExponentStep\"\>", 
   ",", "\<\"ExponentialDistribution\"\>", ",", "\<\"ExponentialFamily\"\>", 
   ",", "\<\"ExponentialGeneratingFunction\"\>", 
   ",", "\<\"ExponentialMovingAverage\"\>", 
   ",", "\<\"ExponentialPowerDistribution\"\>", ",", "\<\"Export\"\>", 
   ",", "\<\"ExportByteArray\"\>", ",", "\<\"ExportForm\"\>", 
   ",", "\<\"ExportString\"\>", ",", "\<\"Expression\"\>", 
   ",", "\<\"ExpressionCell\"\>", ",", "\<\"ExpressionGraph\"\>", 
   ",", "\<\"ExpressionTree\"\>", ",", "\<\"ExpressionUUID\"\>", 
   ",", "\<\"ExtendedEntityClass\"\>", ",", "\<\"ExtendedGCD\"\>", 
   ",", "\<\"Extension\"\>", ",", "\<\"ExtentElementFunction\"\>", 
   ",", "\<\"ExtentMarkers\"\>", ",", "\<\"ExtentSize\"\>", 
   ",", "\<\"ExternalBundle\"\>", ",", "\<\"ExternalEvaluate\"\>", 
   ",", "\<\"ExternalFunction\"\>", ",", "\<\"ExternalIdentifier\"\>", 
   ",", "\<\"ExternalObject\"\>", ",", "\<\"ExternalOptions\"\>", 
   ",", "\<\"ExternalSessionObject\"\>", ",", "\<\"ExternalSessions\"\>", 
   ",", "\<\"ExternalStorageBase\"\>", ",", "\<\"ExternalStorageDownload\"\>",
    ",", "\<\"ExternalStorageGet\"\>", ",", "\<\"ExternalStorageObject\"\>", 
   ",", "\<\"ExternalStoragePut\"\>", ",", "\<\"ExternalStorageUpload\"\>", 
   ",", "\<\"ExternalTypeSignature\"\>", ",", "\<\"ExternalValue\"\>", 
   ",", "\<\"Extract\"\>", ",", "\<\"ExtractArchive\"\>", 
   ",", "\<\"ExtractLayer\"\>", ",", "\<\"ExtractPacletArchive\"\>", 
   ",", "\<\"ExtremeValueDistribution\"\>", ",", "\<\"FARIMAProcess\"\>", 
   ",", "\<\"FRatioDistribution\"\>", ",", "\<\"FaceAlign\"\>", 
   ",", "\<\"FaceForm\"\>", ",", "\<\"FaceGrids\"\>", 
   ",", "\<\"FaceGridsStyle\"\>", ",", "\<\"FaceRecognize\"\>", 
   ",", "\<\"FacialFeatures\"\>", ",", "\<\"Factor\"\>", 
   ",", "\<\"FactorInteger\"\>", ",", "\<\"FactorList\"\>", 
   ",", "\<\"FactorSquareFree\"\>", ",", "\<\"FactorSquareFreeList\"\>", 
   ",", "\<\"FactorTerms\"\>", ",", "\<\"FactorTermsList\"\>", 
   ",", "\<\"Factorial\"\>", ",", "\<\"Factorial2\"\>", 
   ",", "\<\"FactorialMoment\"\>", 
   ",", "\<\"FactorialMomentGeneratingFunction\"\>", 
   ",", "\<\"FactorialPower\"\>", ",", "\<\"Failure\"\>", 
   ",", "\<\"FailureAction\"\>", ",", "\<\"FailureDistribution\"\>", 
   ",", "\<\"FailureQ\"\>", ",", "\<\"False\"\>", 
   ",", "\<\"FareySequence\"\>", ",", "\<\"FeatureDistance\"\>", 
   ",", "\<\"FeatureExtract\"\>", ",", "\<\"FeatureExtraction\"\>", 
   ",", "\<\"FeatureExtractor\"\>", ",", "\<\"FeatureExtractorFunction\"\>", 
   ",", "\<\"FeatureNames\"\>", ",", "\<\"FeatureNearest\"\>", 
   ",", "\<\"FeatureSpacePlot\"\>", ",", "\<\"FeatureSpacePlot3D\"\>", 
   ",", "\<\"FeatureTypes\"\>", ",", "\<\"FeedbackLinearize\"\>", 
   ",", "\<\"FeedbackSector\"\>", ",", "\<\"FeedbackSectorStyle\"\>", 
   ",", "\<\"FeedbackType\"\>", ",", "\<\"FetalGrowthData\"\>", 
   ",", "\<\"Fibonacci\"\>", ",", "\<\"Fibonorial\"\>", 
   ",", "\<\"FieldCompletionFunction\"\>", ",", "\<\"FieldHint\"\>", 
   ",", "\<\"FieldHintStyle\"\>", ",", "\<\"FieldMasked\"\>", 
   ",", "\<\"FieldSize\"\>", ",", "\<\"File\"\>", ",", "\<\"FileBaseName\"\>",
    ",", "\<\"FileByteCount\"\>", ",", "\<\"FileConvert\"\>", 
   ",", "\<\"FileDate\"\>", ",", "\<\"FileExistsQ\"\>", 
   ",", "\<\"FileExtension\"\>", ",", "\<\"FileFormat\"\>", 
   ",", "\<\"FileFormatProperties\"\>", ",", "\<\"FileFormatQ\"\>", 
   ",", "\<\"FileHash\"\>", ",", "\<\"FileNameDepth\"\>", 
   ",", "\<\"FileNameDrop\"\>", ",", "\<\"FileNameForms\"\>", 
   ",", "\<\"FileNameJoin\"\>", ",", "\<\"FileNameSetter\"\>", 
   ",", "\<\"FileNameSplit\"\>", ",", "\<\"FileNameTake\"\>", 
   ",", "\<\"FileNameToFormatList\"\>", ",", "\<\"FileNames\"\>", 
   ",", "\<\"FilePrint\"\>", ",", "\<\"FileSize\"\>", 
   ",", "\<\"FileSystemMap\"\>", ",", "\<\"FileSystemScan\"\>", 
   ",", "\<\"FileTemplate\"\>", ",", "\<\"FileTemplateApply\"\>", 
   ",", "\<\"FileType\"\>", ",", "\<\"FilledCurve\"\>", 
   ",", "\<\"FilledTorus\"\>", ",", "\<\"Filling\"\>", 
   ",", "\<\"FillingStyle\"\>", ",", "\<\"FillingTransform\"\>", 
   ",", "\<\"FilterRules\"\>", ",", "\<\"FilteredEntityClass\"\>", 
   ",", "\<\"FinancialBond\"\>", ",", "\<\"FinancialData\"\>", 
   ",", "\<\"FinancialDerivative\"\>", ",", "\<\"FinancialIndicator\"\>", 
   ",", "\<\"Find\"\>", ",", "\<\"FindAnomalies\"\>", 
   ",", "\<\"FindArgMax\"\>", ",", "\<\"FindArgMin\"\>", 
   ",", "\<\"FindChannels\"\>", ",", "\<\"FindClique\"\>", 
   ",", "\<\"FindClusters\"\>", ",", "\<\"FindCookies\"\>", 
   ",", "\<\"FindCurvePath\"\>", ",", "\<\"FindCycle\"\>", 
   ",", "\<\"FindDevices\"\>", ",", "\<\"FindDistribution\"\>", 
   ",", "\<\"FindDistributionParameters\"\>", ",", "\<\"FindDivisions\"\>", 
   ",", "\<\"FindEdgeColoring\"\>", ",", "\<\"FindEdgeCover\"\>", 
   ",", "\<\"FindEdgeCut\"\>", ",", "\<\"FindEdgeIndependentPaths\"\>", 
   ",", "\<\"FindEquationalProof\"\>", ",", "\<\"FindEulerianCycle\"\>", 
   ",", "\<\"FindExternalEvaluators\"\>", ",", "\<\"FindFaces\"\>", 
   ",", "\<\"FindFile\"\>", ",", "\<\"FindFit\"\>", 
   ",", "\<\"FindFormula\"\>", ",", "\<\"FindFundamentalCycles\"\>", 
   ",", "\<\"FindGeneratingFunction\"\>", ",", "\<\"FindGeoLocation\"\>", 
   ",", "\<\"FindGeometricConjectures\"\>", 
   ",", "\<\"FindGeometricTransform\"\>", ",", "\<\"FindGraphCommunities\"\>",
    ",", "\<\"FindGraphIsomorphism\"\>", ",", "\<\"FindGraphPartition\"\>", 
   ",", "\<\"FindHamiltonianCycle\"\>", ",", "\<\"FindHamiltonianPath\"\>", 
   ",", "\<\"FindHiddenMarkovStates\"\>", ",", "\<\"FindImageText\"\>", 
   ",", "\<\"FindIndependentEdgeSet\"\>", 
   ",", "\<\"FindIndependentVertexSet\"\>", ",", "\<\"FindInstance\"\>", 
   ",", "\<\"FindIntegerNullVector\"\>", ",", "\<\"FindIsomers\"\>", 
   ",", "\<\"FindIsomorphicSubgraph\"\>", ",", "\<\"FindKClan\"\>", 
   ",", "\<\"FindKClique\"\>", ",", "\<\"FindKClub\"\>", 
   ",", "\<\"FindKPlex\"\>", ",", "\<\"FindLibrary\"\>", 
   ",", "\<\"FindLinearRecurrence\"\>", ",", "\<\"FindList\"\>", 
   ",", "\<\"FindMatchingColor\"\>", ",", "\<\"FindMaxValue\"\>", 
   ",", "\<\"FindMaximum\"\>", ",", "\<\"FindMaximumCut\"\>", 
   ",", "\<\"FindMaximumFlow\"\>", ",", "\<\"FindMeshDefects\"\>", 
   ",", "\<\"FindMinValue\"\>", ",", "\<\"FindMinimum\"\>", 
   ",", "\<\"FindMinimumCostFlow\"\>", ",", "\<\"FindMinimumCut\"\>", 
   ",", "\<\"FindMoleculeSubstructure\"\>", ",", "\<\"FindPath\"\>", 
   ",", "\<\"FindPeaks\"\>", ",", "\<\"FindPermutation\"\>", 
   ",", "\<\"FindPlanarColoring\"\>", 
   ",", "\<\"FindPointProcessParameters\"\>", ",", "\<\"FindPostmanTour\"\>", 
   ",", "\<\"FindProcessParameters\"\>", ",", "\<\"FindRegionTransform\"\>", 
   ",", "\<\"FindRepeat\"\>", ",", "\<\"FindRoot\"\>", 
   ",", "\<\"FindSequenceFunction\"\>", ",", "\<\"FindSettings\"\>", 
   ",", "\<\"FindShortestPath\"\>", ",", "\<\"FindShortestTour\"\>", 
   ",", "\<\"FindSpanningTree\"\>", ",", "\<\"FindSubgraphIsomorphism\"\>", 
   ",", "\<\"FindSystemModelEquilibrium\"\>", 
   ",", "\<\"FindTextualAnswer\"\>", ",", "\<\"FindThreshold\"\>", 
   ",", "\<\"FindTransientRepeat\"\>", ",", "\<\"FindVertexColoring\"\>", 
   ",", "\<\"FindVertexCover\"\>", ",", "\<\"FindVertexCut\"\>", 
   ",", "\<\"FindVertexIndependentPaths\"\>", ",", "\<\"FinishDynamic\"\>", 
   ",", "\<\"FiniteAbelianGroupCount\"\>", ",", "\<\"FiniteGroupCount\"\>", 
   ",", "\<\"FiniteGroupData\"\>", ",", "\<\"First\"\>", 
   ",", "\<\"FirstCase\"\>", ",", "\<\"FirstPassageTimeDistribution\"\>", 
   ",", "\<\"FirstPosition\"\>", ",", "\<\"FischerGroupFi22\"\>", 
   ",", "\<\"FischerGroupFi23\"\>", ",", "\<\"FischerGroupFi24Prime\"\>", 
   ",", "\<\"FisherHypergeometricDistribution\"\>", 
   ",", "\<\"FisherRatioTest\"\>", ",", "\<\"FisherZDistribution\"\>", 
   ",", "\<\"Fit\"\>", ",", "\<\"FitRegularization\"\>", 
   ",", "\<\"FittedModel\"\>", ",", "\<\"FixedOrder\"\>", 
   ",", "\<\"FixedPoint\"\>", ",", "\<\"FixedPointList\"\>", 
   ",", "\<\"Flat\"\>", ",", "\<\"FlatTopWindow\"\>", ",", "\<\"Flatten\"\>", 
   ",", "\<\"FlattenAt\"\>", ",", "\<\"FlattenLayer\"\>", 
   ",", "\<\"FlightData\"\>", ",", "\<\"FlipView\"\>", ",", "\<\"Floor\"\>", 
   ",", "\<\"FlowPolynomial\"\>", ",", "\<\"Fold\"\>", 
   ",", "\<\"FoldList\"\>", ",", "\<\"FoldPair\"\>", 
   ",", "\<\"FoldPairList\"\>", ",", "\<\"FoldWhile\"\>", 
   ",", "\<\"FoldWhileList\"\>", ",", "\<\"FollowRedirects\"\>", 
   ",", "\<\"FontColor\"\>", ",", "\<\"FontFamily\"\>", 
   ",", "\<\"FontSize\"\>", ",", "\<\"FontSlant\"\>", 
   ",", "\<\"FontSubstitutions\"\>", ",", "\<\"FontTracking\"\>", 
   ",", "\<\"FontVariations\"\>", ",", "\<\"FontWeight\"\>", 
   ",", "\<\"For\"\>", ",", "\<\"ForAll\"\>", 
   ",", "\<\"ForceVersionInstall\"\>", ",", "\<\"FormBox\"\>", 
   ",", "\<\"FormBoxOptions\"\>", ",", "\<\"FormControl\"\>", 
   ",", "\<\"FormFunction\"\>", ",", "\<\"FormLayoutFunction\"\>", 
   ",", "\<\"FormObject\"\>", ",", "\<\"FormPage\"\>", 
   ",", "\<\"FormProtectionMethod\"\>", ",", "\<\"Format\"\>", 
   ",", "\<\"FormatType\"\>", ",", "\<\"FormulaData\"\>", 
   ",", "\<\"FormulaLookup\"\>", ",", "\<\"FortranForm\"\>", 
   ",", "\<\"Forward\"\>", ",", "\<\"ForwardBackward\"\>", 
   ",", "\<\"ForwardCloudCredentials\"\>", ",", "\<\"Fourier\"\>", 
   ",", "\<\"FourierCoefficient\"\>", ",", "\<\"FourierCosCoefficient\"\>", 
   ",", "\<\"FourierCosSeries\"\>", ",", "\<\"FourierCosTransform\"\>", 
   ",", "\<\"FourierDCT\"\>", ",", "\<\"FourierDCTFilter\"\>", 
   ",", "\<\"FourierDCTMatrix\"\>", ",", "\<\"FourierDST\"\>", 
   ",", "\<\"FourierDSTMatrix\"\>", ",", "\<\"FourierMatrix\"\>", 
   ",", "\<\"FourierParameters\"\>", ",", "\<\"FourierSequenceTransform\"\>", 
   ",", "\<\"FourierSeries\"\>", ",", "\<\"FourierSinCoefficient\"\>", 
   ",", "\<\"FourierSinSeries\"\>", ",", "\<\"FourierSinTransform\"\>", 
   ",", "\<\"FourierTransform\"\>", ",", "\<\"FourierTrigSeries\"\>", 
   ",", "\<\"FoxH\"\>", ",", "\<\"FoxHReduce\"\>", ",", "\<\"FractionBox\"\>",
    ",", "\<\"FractionBoxOptions\"\>", 
   ",", "\<\"FractionalBrownianMotionProcess\"\>", 
   ",", "\<\"FractionalGaussianNoiseProcess\"\>", 
   ",", "\<\"FractionalPart\"\>", ",", "\<\"Frame\"\>", 
   ",", "\<\"FrameBox\"\>", ",", "\<\"FrameBoxOptions\"\>", 
   ",", "\<\"FrameLabel\"\>", ",", "\<\"FrameListVideo\"\>", 
   ",", "\<\"FrameMargins\"\>", ",", "\<\"FrameRate\"\>", 
   ",", "\<\"FrameStyle\"\>", ",", "\<\"FrameTicks\"\>", 
   ",", "\<\"FrameTicksStyle\"\>", ",", "\<\"Framed\"\>", 
   ",", "\<\"FrechetDistribution\"\>", ",", "\<\"FreeQ\"\>", 
   ",", "\<\"FrenetSerretSystem\"\>", 
   ",", "\<\"FrequencySamplingFilterKernel\"\>", ",", "\<\"FresnelC\"\>", 
   ",", "\<\"FresnelF\"\>", ",", "\<\"FresnelG\"\>", ",", "\<\"FresnelS\"\>", 
   ",", "\<\"Friday\"\>", ",", "\<\"FrobeniusNumber\"\>", 
   ",", "\<\"FrobeniusSolve\"\>", ",", "\<\"FromAbsoluteTime\"\>", 
   ",", "\<\"FromCharacterCode\"\>", ",", "\<\"FromCoefficientRules\"\>", 
   ",", "\<\"FromContinuedFraction\"\>", ",", "\<\"FromDMS\"\>", 
   ",", "\<\"FromDateString\"\>", ",", "\<\"FromDigits\"\>", 
   ",", "\<\"FromEntity\"\>", ",", "\<\"FromJulianDate\"\>", 
   ",", "\<\"FromLetterNumber\"\>", ",", "\<\"FromPolarCoordinates\"\>", 
   ",", "\<\"FromRomanNumeral\"\>", ",", "\<\"FromSphericalCoordinates\"\>", 
   ",", "\<\"FromUnixTime\"\>", ",", "\<\"Front\"\>", 
   ",", "\<\"FrontEndDynamicExpression\"\>", 
   ",", "\<\"FrontEndEventActions\"\>", ",", "\<\"FrontEndExecute\"\>", 
   ",", "\<\"FrontEndToken\"\>", ",", "\<\"FrontEndTokenExecute\"\>", 
   ",", "\<\"Full\"\>", ",", "\<\"FullDefinition\"\>", 
   ",", "\<\"FullForm\"\>", ",", "\<\"FullGraphics\"\>", 
   ",", "\<\"FullInformationOutputRegulator\"\>", ",", "\<\"FullRegion\"\>", 
   ",", "\<\"FullSimplify\"\>", ",", "\<\"Function\"\>", 
   ",", "\<\"FunctionAnalytic\"\>", ",", "\<\"FunctionBijective\"\>", 
   ",", "\<\"FunctionCompile\"\>", ",", "\<\"FunctionCompileExport\"\>", 
   ",", "\<\"FunctionCompileExportByteArray\"\>", 
   ",", "\<\"FunctionCompileExportLibrary\"\>", 
   ",", "\<\"FunctionCompileExportString\"\>", 
   ",", "\<\"FunctionContinuous\"\>", ",", "\<\"FunctionConvexity\"\>", 
   ",", "\<\"FunctionDeclaration\"\>", ",", "\<\"FunctionDiscontinuities\"\>",
    ",", "\<\"FunctionDomain\"\>", ",", "\<\"FunctionExpand\"\>", 
   ",", "\<\"FunctionInjective\"\>", ",", "\<\"FunctionInterpolation\"\>", 
   ",", "\<\"FunctionLayer\"\>", ",", "\<\"FunctionMeromorphic\"\>", 
   ",", "\<\"FunctionMonotonicity\"\>", ",", "\<\"FunctionPeriod\"\>", 
   ",", "\<\"FunctionPoles\"\>", ",", "\<\"FunctionRange\"\>", 
   ",", "\<\"FunctionSign\"\>", ",", "\<\"FunctionSingularities\"\>", 
   ",", "\<\"FunctionSpace\"\>", ",", "\<\"FunctionSurjective\"\>", 
   ",", "\<\"FussellVeselyImportance\"\>", ",", "\<\"GARCHProcess\"\>", 
   ",", "\<\"GCD\"\>", ",", "\<\"GaborFilter\"\>", ",", "\<\"GaborMatrix\"\>",
    ",", "\<\"GaborWavelet\"\>", ",", "\<\"GainMargins\"\>", 
   ",", "\<\"GainPhaseMargins\"\>", ",", "\<\"GalaxyData\"\>", 
   ",", "\<\"GalleryView\"\>", ",", "\<\"Gamma\"\>", 
   ",", "\<\"GammaDistribution\"\>", ",", "\<\"GammaRegularized\"\>", 
   ",", "\<\"GapPenalty\"\>", ",", "\<\"GatedRecurrentLayer\"\>", 
   ",", "\<\"Gather\"\>", ",", "\<\"GatherBy\"\>", 
   ",", "\<\"GaugeFaceElementFunction\"\>", ",", "\<\"GaugeFaceStyle\"\>", 
   ",", "\<\"GaugeFrameElementFunction\"\>", ",", "\<\"GaugeFrameSize\"\>", 
   ",", "\<\"GaugeFrameStyle\"\>", ",", "\<\"GaugeLabels\"\>", 
   ",", "\<\"GaugeMarkers\"\>", ",", "\<\"GaugeStyle\"\>", 
   ",", "\<\"GaussianFilter\"\>", ",", "\<\"GaussianIntegers\"\>", 
   ",", "\<\"GaussianMatrix\"\>", 
   ",", "\<\"GaussianOrthogonalMatrixDistribution\"\>", 
   ",", "\<\"GaussianSymplecticMatrixDistribution\"\>", 
   ",", "\<\"GaussianUnitaryMatrixDistribution\"\>", 
   ",", "\<\"GaussianWindow\"\>", ",", "\<\"GegenbauerC\"\>", 
   ",", "\<\"General\"\>", ",", "\<\"GeneralizedLinearModelFit\"\>", 
   ",", "\<\"GenerateAsymmetricKeyPair\"\>", 
   ",", "\<\"GenerateConditions\"\>", ",", "\<\"GenerateDerivedKey\"\>", 
   ",", "\<\"GenerateDigitalSignature\"\>", ",", "\<\"GenerateDocument\"\>", 
   ",", "\<\"GenerateFileSignature\"\>", ",", "\<\"GenerateHTTPResponse\"\>", 
   ",", "\<\"GenerateSecuredAuthenticationKey\"\>", 
   ",", "\<\"GenerateSymmetricKey\"\>", ",", "\<\"GeneratedAssetFormat\"\>", 
   ",", "\<\"GeneratedAssetLocation\"\>", ",", "\<\"GeneratedCell\"\>", 
   ",", "\<\"GeneratedDocumentBinding\"\>", 
   ",", "\<\"GeneratedParameters\"\>", 
   ",", "\<\"GeneratedQuantityMagnitudes\"\>", 
   ",", "\<\"GeneratingFunction\"\>", ",", "\<\"GeneratorDescription\"\>", 
   ",", "\<\"GeneratorHistoryLength\"\>", ",", "\<\"GeneratorOutputType\"\>", 
   ",", "\<\"GenericCylindricalDecomposition\"\>", ",", "\<\"GenomeData\"\>", 
   ",", "\<\"GenomeLookup\"\>", ",", "\<\"GeoAntipode\"\>", 
   ",", "\<\"GeoArea\"\>", ",", "\<\"GeoArraySize\"\>", 
   ",", "\<\"GeoBackground\"\>", ",", "\<\"GeoBoundary\"\>", 
   ",", "\<\"GeoBoundingBox\"\>", ",", "\<\"GeoBounds\"\>", 
   ",", "\<\"GeoBoundsRegion\"\>", ",", "\<\"GeoBoundsRegionBoundary\"\>", 
   ",", "\<\"GeoBubbleChart\"\>", ",", "\<\"GeoCenter\"\>", 
   ",", "\<\"GeoCircle\"\>", ",", "\<\"GeoContourPlot\"\>", 
   ",", "\<\"GeoDensityPlot\"\>", ",", "\<\"GeoDestination\"\>", 
   ",", "\<\"GeoDirection\"\>", ",", "\<\"GeoDisk\"\>", 
   ",", "\<\"GeoDisplacement\"\>", ",", "\<\"GeoDistance\"\>", 
   ",", "\<\"GeoDistanceList\"\>", ",", "\<\"GeoElevationData\"\>", 
   ",", "\<\"GeoEntities\"\>", ",", "\<\"GeoGraphPlot\"\>", 
   ",", "\<\"GeoGraphValuePlot\"\>", ",", "\<\"GeoGraphics\"\>", 
   ",", "\<\"GeoGridDirectionDifference\"\>", ",", "\<\"GeoGridLines\"\>", 
   ",", "\<\"GeoGridLinesStyle\"\>", ",", "\<\"GeoGridPosition\"\>", 
   ",", "\<\"GeoGridRange\"\>", ",", "\<\"GeoGridRangePadding\"\>", 
   ",", "\<\"GeoGridUnitArea\"\>", ",", "\<\"GeoGridUnitDistance\"\>", 
   ",", "\<\"GeoGridVector\"\>", ",", "\<\"GeoGroup\"\>", 
   ",", "\<\"GeoHemisphere\"\>", ",", "\<\"GeoHemisphereBoundary\"\>", 
   ",", "\<\"GeoHistogram\"\>", ",", "\<\"GeoIdentify\"\>", 
   ",", "\<\"GeoImage\"\>", ",", "\<\"GeoLabels\"\>", 
   ",", "\<\"GeoLength\"\>", ",", "\<\"GeoListPlot\"\>", 
   ",", "\<\"GeoLocation\"\>", ",", "\<\"GeoMarker\"\>", 
   ",", "\<\"GeoModel\"\>", ",", "\<\"GeoNearest\"\>", 
   ",", "\<\"GeoOrientationData\"\>", ",", "\<\"GeoPath\"\>", 
   ",", "\<\"GeoPolygon\"\>", ",", "\<\"GeoPosition\"\>", 
   ",", "\<\"GeoPositionENU\"\>", ",", "\<\"GeoPositionXYZ\"\>", 
   ",", "\<\"GeoProjection\"\>", ",", "\<\"GeoProjectionData\"\>", 
   ",", "\<\"GeoRange\"\>", ",", "\<\"GeoRangePadding\"\>", 
   ",", "\<\"GeoRegionValuePlot\"\>", ",", "\<\"GeoResolution\"\>", 
   ",", "\<\"GeoScaleBar\"\>", ",", "\<\"GeoServer\"\>", 
   ",", "\<\"GeoSmoothHistogram\"\>", ",", "\<\"GeoStreamPlot\"\>", 
   ",", "\<\"GeoStyling\"\>", ",", "\<\"GeoStylingImageFunction\"\>", 
   ",", "\<\"GeoVariant\"\>", ",", "\<\"GeoVector\"\>", 
   ",", "\<\"GeoVectorENU\"\>", ",", "\<\"GeoVectorPlot\"\>", 
   ",", "\<\"GeoVectorXYZ\"\>", ",", "\<\"GeoVisibleRegion\"\>", 
   ",", "\<\"GeoVisibleRegionBoundary\"\>", ",", "\<\"GeoWithinQ\"\>", 
   ",", "\<\"GeoZoomLevel\"\>", ",", "\<\"GeodesicClosing\"\>", 
   ",", "\<\"GeodesicDilation\"\>", ",", "\<\"GeodesicErosion\"\>", 
   ",", "\<\"GeodesicOpening\"\>", ",", "\<\"GeodesyData\"\>", 
   ",", "\<\"GeogravityModelData\"\>", ",", "\<\"GeologicalPeriodData\"\>", 
   ",", "\<\"GeomagneticModelData\"\>", ",", "\<\"GeometricAssertion\"\>", 
   ",", "\<\"GeometricBrownianMotionProcess\"\>", 
   ",", "\<\"GeometricDistribution\"\>", ",", "\<\"GeometricMean\"\>", 
   ",", "\<\"GeometricMeanFilter\"\>", ",", "\<\"GeometricOptimization\"\>", 
   ",", "\<\"GeometricScene\"\>", ",", "\<\"GeometricStep\"\>", 
   ",", "\<\"GeometricTest\"\>", ",", "\<\"GeometricTransformation\"\>", 
   ",", "\<\"GestureHandler\"\>", ",", "\<\"Get\"\>", 
   ",", "\<\"GetEnvironment\"\>", ",", "\<\"GibbsPointProcess\"\>", 
   ",", "\<\"Glaisher\"\>", ",", "\<\"GlobalClusteringCoefficient\"\>", 
   ",", "\<\"Glow\"\>", ",", "\<\"GoldenAngle\"\>", 
   ",", "\<\"GoldenRatio\"\>", ",", "\<\"GompertzMakehamDistribution\"\>", 
   ",", "\<\"GoochShading\"\>", ",", "\<\"GoodmanKruskalGamma\"\>", 
   ",", "\<\"GoodmanKruskalGammaTest\"\>", ",", "\<\"Goto\"\>", 
   ",", "\<\"Grad\"\>", ",", "\<\"Gradient\"\>", 
   ",", "\<\"GradientFilter\"\>", ",", "\<\"GradientFittedMesh\"\>", 
   ",", "\<\"GradientOrientationFilter\"\>", ",", "\<\"GrammarApply\"\>", 
   ",", "\<\"GrammarRules\"\>", ",", "\<\"GrammarToken\"\>", 
   ",", "\<\"Graph\"\>", ",", "\<\"Graph3D\"\>", 
   ",", "\<\"GraphAssortativity\"\>", ",", "\<\"GraphAutomorphismGroup\"\>", 
   ",", "\<\"GraphCenter\"\>", ",", "\<\"GraphComplement\"\>", 
   ",", "\<\"GraphData\"\>", ",", "\<\"GraphDensity\"\>", 
   ",", "\<\"GraphDiameter\"\>", ",", "\<\"GraphDifference\"\>", 
   ",", "\<\"GraphDisjointUnion\"\>", ",", "\<\"GraphDistance\"\>", 
   ",", "\<\"GraphDistanceMatrix\"\>", ",", "\<\"GraphEmbedding\"\>", 
   ",", "\<\"GraphHighlight\"\>", ",", "\<\"GraphHighlightStyle\"\>", 
   ",", "\<\"GraphHub\"\>", ",", "\<\"GraphIntersection\"\>", 
   ",", "\<\"GraphLayerStyle\"\>", ",", "\<\"GraphLayers\"\>", 
   ",", "\<\"GraphLayout\"\>", ",", "\<\"GraphLinkEfficiency\"\>", 
   ",", "\<\"GraphPeriphery\"\>", ",", "\<\"GraphPlot\"\>", 
   ",", "\<\"GraphPlot3D\"\>", ",", "\<\"GraphPower\"\>", 
   ",", "\<\"GraphPropertyDistribution\"\>", ",", "\<\"GraphQ\"\>", 
   ",", "\<\"GraphRadius\"\>", ",", "\<\"GraphReciprocity\"\>", 
   ",", "\<\"GraphTree\"\>", ",", "\<\"GraphUnion\"\>", 
   ",", "\<\"Graphics\"\>", ",", "\<\"Graphics3D\"\>", 
   ",", "\<\"GraphicsColumn\"\>", ",", "\<\"GraphicsComplex\"\>", 
   ",", "\<\"GraphicsGrid\"\>", ",", "\<\"GraphicsGroup\"\>", 
   ",", "\<\"GraphicsRow\"\>", ",", "\<\"Gray\"\>", ",", "\<\"GrayLevel\"\>", 
   ",", "\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
   ",", "\<\"GreaterEqualLess\"\>", ",", "\<\"GreaterEqualThan\"\>", 
   ",", "\<\"GreaterFullEqual\"\>", ",", "\<\"GreaterGreater\"\>", 
   ",", "\<\"GreaterLess\"\>", ",", "\<\"GreaterSlantEqual\"\>", 
   ",", "\<\"GreaterThan\"\>", ",", "\<\"GreaterTilde\"\>", 
   ",", "\<\"Green\"\>", ",", "\<\"GreenFunction\"\>", ",", "\<\"Grid\"\>", 
   ",", "\<\"GridBox\"\>", ",", "\<\"GridDefaultElement\"\>", 
   ",", "\<\"GridGraph\"\>", ",", "\<\"GridLines\"\>", 
   ",", "\<\"GridLinesStyle\"\>", ",", "\<\"GridVideo\"\>", 
   ",", "\<\"GroebnerBasis\"\>", ",", "\<\"GroupActionBase\"\>", 
   ",", "\<\"GroupBy\"\>", ",", "\<\"GroupCentralizer\"\>", 
   ",", "\<\"GroupElementFromWord\"\>", ",", "\<\"GroupElementPosition\"\>", 
   ",", "\<\"GroupElementQ\"\>", ",", "\<\"GroupElementToWord\"\>", 
   ",", "\<\"GroupElements\"\>", ",", "\<\"GroupGenerators\"\>", 
   ",", "\<\"GroupMultiplicationTable\"\>", ",", "\<\"GroupOrbits\"\>", 
   ",", "\<\"GroupOrder\"\>", ",", "\<\"GroupPageBreakWithin\"\>", 
   ",", "\<\"GroupSetwiseStabilizer\"\>", ",", "\<\"GroupStabilizer\"\>", 
   ",", "\<\"GroupStabilizerChain\"\>", ",", "\<\"Groupings\"\>", 
   ",", "\<\"GrowCutComponents\"\>", ",", "\<\"Gudermannian\"\>", 
   ",", "\<\"GuidedFilter\"\>", ",", "\<\"GumbelDistribution\"\>", 
   ",", "\<\"HITSCentrality\"\>", ",", "\<\"HTTPErrorResponse\"\>", 
   ",", "\<\"HTTPRedirect\"\>", ",", "\<\"HTTPRequest\"\>", 
   ",", "\<\"HTTPRequestData\"\>", ",", "\<\"HTTPResponse\"\>", 
   ",", "\<\"HaarWavelet\"\>", ",", "\<\"HadamardMatrix\"\>", 
   ",", "\<\"HalfLine\"\>", ",", "\<\"HalfNormalDistribution\"\>", 
   ",", "\<\"HalfPlane\"\>", ",", "\<\"HalfSpace\"\>", 
   ",", "\<\"HalftoneShading\"\>", ",", "\<\"HamiltonianGraphQ\"\>", 
   ",", "\<\"HammingDistance\"\>", ",", "\<\"HammingWindow\"\>", 
   ",", "\<\"HandlerFunctions\"\>", ",", "\<\"HandlerFunctionsKeys\"\>", 
   ",", "\<\"HankelH1\"\>", ",", "\<\"HankelH2\"\>", 
   ",", "\<\"HankelMatrix\"\>", ",", "\<\"HankelTransform\"\>", 
   ",", "\<\"HannPoissonWindow\"\>", ",", "\<\"HannWindow\"\>", 
   ",", "\<\"HaradaNortonGroupHN\"\>", ",", "\<\"HararyGraph\"\>", 
   ",", "\<\"HardcorePointProcess\"\>", ",", "\<\"HarmonicMean\"\>", 
   ",", "\<\"HarmonicMeanFilter\"\>", ",", "\<\"HarmonicNumber\"\>", 
   ",", "\<\"Hash\"\>", ",", "\<\"HatchFilling\"\>", 
   ",", "\<\"HatchShading\"\>", ",", "\<\"Haversine\"\>", 
   ",", "\<\"HazardFunction\"\>", ",", "\<\"Head\"\>", 
   ",", "\<\"HeaderAlignment\"\>", ",", "\<\"HeaderBackground\"\>", 
   ",", "\<\"HeaderDisplayFunction\"\>", ",", "\<\"HeaderLines\"\>", 
   ",", "\<\"HeaderSize\"\>", ",", "\<\"HeaderStyle\"\>", 
   ",", "\<\"Heads\"\>", ",", "\<\"HeatFluxValue\"\>", 
   ",", "\<\"HeatInsulationValue\"\>", ",", "\<\"HeatOutflowValue\"\>", 
   ",", "\<\"HeatRadiationValue\"\>", ",", "\<\"HeatSymmetryValue\"\>", 
   ",", "\<\"HeatTemperatureCondition\"\>", 
   ",", "\<\"HeatTransferPDEComponent\"\>", ",", "\<\"HeatTransferValue\"\>", 
   ",", "\<\"HeavisideLambda\"\>", ",", "\<\"HeavisidePi\"\>", 
   ",", "\<\"HeavisideTheta\"\>", ",", "\<\"HeldGroupHe\"\>", 
   ",", "\<\"HelmholtzPDEComponent\"\>", ",", "\<\"Here\"\>", 
   ",", "\<\"HermiteDecomposition\"\>", ",", "\<\"HermiteH\"\>", 
   ",", "\<\"Hermitian\"\>", ",", "\<\"HermitianMatrixQ\"\>", 
   ",", "\<\"HessenbergDecomposition\"\>", ",", "\<\"HeunB\"\>", 
   ",", "\<\"HeunBPrime\"\>", ",", "\<\"HeunC\"\>", ",", "\<\"HeunCPrime\"\>",
    ",", "\<\"HeunD\"\>", ",", "\<\"HeunDPrime\"\>", ",", "\<\"HeunG\"\>", 
   ",", "\<\"HeunGPrime\"\>", ",", "\<\"HeunT\"\>", ",", "\<\"HeunTPrime\"\>",
    ",", "\<\"HexadecimalCharacter\"\>", ",", "\<\"Hexahedron\"\>", 
   ",", "\<\"HiddenItems\"\>", ",", "\<\"HiddenMarkovProcess\"\>", 
   ",", "\<\"HighlightGraph\"\>", ",", "\<\"HighlightImage\"\>", 
   ",", "\<\"HighlightMesh\"\>", ",", "\<\"Highlighted\"\>", 
   ",", "\<\"HighpassFilter\"\>", ",", "\<\"HigmanSimsGroupHS\"\>", 
   ",", "\<\"HilbertCurve\"\>", ",", "\<\"HilbertFilter\"\>", 
   ",", "\<\"HilbertMatrix\"\>", ",", "\<\"Histogram\"\>", 
   ",", "\<\"Histogram3D\"\>", ",", "\<\"HistogramDistribution\"\>", 
   ",", "\<\"HistogramList\"\>", ",", "\<\"HistogramPointDensity\"\>", 
   ",", "\<\"HistogramTransform\"\>", 
   ",", "\<\"HistogramTransformInterpolation\"\>", 
   ",", "\<\"HistoricalPeriodData\"\>", ",", "\<\"HitMissTransform\"\>", 
   ",", "\<\"HjorthDistribution\"\>", ",", "\<\"HodgeDual\"\>", 
   ",", "\<\"HoeffdingD\"\>", ",", "\<\"HoeffdingDTest\"\>", 
   ",", "\<\"Hold\"\>", ",", "\<\"HoldAll\"\>", 
   ",", "\<\"HoldAllComplete\"\>", ",", "\<\"HoldComplete\"\>", 
   ",", "\<\"HoldFirst\"\>", ",", "\<\"HoldForm\"\>", 
   ",", "\<\"HoldPattern\"\>", ",", "\<\"HoldRest\"\>", 
   ",", "\<\"HolidayCalendar\"\>", ",", "\<\"HorizontalGauge\"\>", 
   ",", "\<\"HornerForm\"\>", ",", "\<\"HostLookup\"\>", 
   ",", "\<\"HotellingTSquareDistribution\"\>", 
   ",", "\<\"HoytDistribution\"\>", ",", "\<\"Hue\"\>", 
   ",", "\<\"HumanGrowthData\"\>", ",", "\<\"HumpDownHump\"\>", 
   ",", "\<\"HumpEqual\"\>", ",", "\<\"HurwitzLerchPhi\"\>", 
   ",", "\<\"HurwitzZeta\"\>", ",", "\<\"HyperbolicDistribution\"\>", 
   ",", "\<\"HypercubeGraph\"\>", ",", "\<\"HyperexponentialDistribution\"\>",
    ",", "\<\"Hyperfactorial\"\>", ",", "\<\"Hypergeometric0F1\"\>", 
   ",", "\<\"Hypergeometric0F1Regularized\"\>", 
   ",", "\<\"Hypergeometric1F1\"\>", 
   ",", "\<\"Hypergeometric1F1Regularized\"\>", 
   ",", "\<\"Hypergeometric2F1\"\>", 
   ",", "\<\"Hypergeometric2F1Regularized\"\>", 
   ",", "\<\"HypergeometricDistribution\"\>", 
   ",", "\<\"HypergeometricPFQ\"\>", 
   ",", "\<\"HypergeometricPFQRegularized\"\>", 
   ",", "\<\"HypergeometricU\"\>", ",", "\<\"Hyperlink\"\>", 
   ",", "\<\"HyperlinkAction\"\>", ",", "\<\"Hyperplane\"\>", 
   ",", "\<\"Hyphenation\"\>", ",", "\<\"HypoexponentialDistribution\"\>", 
   ",", "\<\"HypothesisTestData\"\>", ",", "\<\"I\"\>", 
   ",", "\<\"IPAddress\"\>", ",", "\<\"IconData\"\>", 
   ",", "\<\"IconRules\"\>", ",", "\<\"Iconize\"\>", 
   ",", "\<\"Icosahedron\"\>", ",", "\<\"Identity\"\>", 
   ",", "\<\"IdentityMatrix\"\>", ",", "\<\"If\"\>", 
   ",", "\<\"IgnoreCase\"\>", ",", "\<\"IgnoreDiacritics\"\>", 
   ",", "\<\"IgnoreIsotopes\"\>", ",", "\<\"IgnorePunctuation\"\>", 
   ",", "\<\"IgnoreStereochemistry\"\>", ",", "\<\"IgnoringInactive\"\>", 
   ",", "\<\"Im\"\>", ",", "\<\"Image\"\>", ",", "\<\"Image3D\"\>", 
   ",", "\<\"Image3DProjection\"\>", ",", "\<\"Image3DSlices\"\>", 
   ",", "\<\"ImageAccumulate\"\>", ",", "\<\"ImageAdd\"\>", 
   ",", "\<\"ImageAdjust\"\>", ",", "\<\"ImageAlign\"\>", 
   ",", "\<\"ImageApply\"\>", ",", "\<\"ImageApplyIndexed\"\>", 
   ",", "\<\"ImageAspectRatio\"\>", ",", "\<\"ImageAssemble\"\>", 
   ",", "\<\"ImageAugmentationLayer\"\>", ",", "\<\"ImageBoundingBoxes\"\>", 
   ",", "\<\"ImageCapture\"\>", ",", "\<\"ImageCaptureFunction\"\>", 
   ",", "\<\"ImageCases\"\>", ",", "\<\"ImageChannels\"\>", 
   ",", "\<\"ImageClip\"\>", ",", "\<\"ImageCollage\"\>", 
   ",", "\<\"ImageColorSpace\"\>", ",", "\<\"ImageCompose\"\>", 
   ",", "\<\"ImageContainsQ\"\>", ",", "\<\"ImageContents\"\>", 
   ",", "\<\"ImageConvolve\"\>", ",", "\<\"ImageCooccurrence\"\>", 
   ",", "\<\"ImageCorners\"\>", ",", "\<\"ImageCorrelate\"\>", 
   ",", "\<\"ImageCorrespondingPoints\"\>", ",", "\<\"ImageCrop\"\>", 
   ",", "\<\"ImageData\"\>", ",", "\<\"ImageDeconvolve\"\>", 
   ",", "\<\"ImageDemosaic\"\>", ",", "\<\"ImageDifference\"\>", 
   ",", "\<\"ImageDimensions\"\>", ",", "\<\"ImageDisplacements\"\>", 
   ",", "\<\"ImageDistance\"\>", ",", "\<\"ImageEffect\"\>", 
   ",", "\<\"ImageExposureCombine\"\>", ",", "\<\"ImageFeatureTrack\"\>", 
   ",", "\<\"ImageFileApply\"\>", ",", "\<\"ImageFileFilter\"\>", 
   ",", "\<\"ImageFileScan\"\>", ",", "\<\"ImageFilter\"\>", 
   ",", "\<\"ImageFocusCombine\"\>", ",", "\<\"ImageForestingComponents\"\>", 
   ",", "\<\"ImageFormattingWidth\"\>", 
   ",", "\<\"ImageForwardTransformation\"\>", ",", "\<\"ImageGraphics\"\>", 
   ",", "\<\"ImageHistogram\"\>", ",", "\<\"ImageIdentify\"\>", 
   ",", "\<\"ImageInstanceQ\"\>", ",", "\<\"ImageKeypoints\"\>", 
   ",", "\<\"ImageLabels\"\>", ",", "\<\"ImageLegends\"\>", 
   ",", "\<\"ImageLevels\"\>", ",", "\<\"ImageLines\"\>", 
   ",", "\<\"ImageMargins\"\>", ",", "\<\"ImageMarker\"\>", 
   ",", "\<\"ImageMeasurements\"\>", ",", "\<\"ImageMesh\"\>", 
   ",", "\<\"ImageMultiply\"\>", ",", "\<\"ImagePad\"\>", 
   ",", "\<\"ImagePadding\"\>", ",", "\<\"ImagePartition\"\>", 
   ",", "\<\"ImagePeriodogram\"\>", 
   ",", "\<\"ImagePerspectiveTransformation\"\>", 
   ",", "\<\"ImagePosition\"\>", ",", "\<\"ImagePreviewFunction\"\>", 
   ",", "\<\"ImagePyramid\"\>", ",", "\<\"ImagePyramidApply\"\>", 
   ",", "\<\"ImageQ\"\>", ",", "\<\"ImageRecolor\"\>", 
   ",", "\<\"ImageReflect\"\>", ",", "\<\"ImageResize\"\>", 
   ",", "\<\"ImageResolution\"\>", ",", "\<\"ImageRestyle\"\>", 
   ",", "\<\"ImageRotate\"\>", ",", "\<\"ImageSaliencyFilter\"\>", 
   ",", "\<\"ImageScaled\"\>", ",", "\<\"ImageScan\"\>", 
   ",", "\<\"ImageSize\"\>", ",", "\<\"ImageSizeAction\"\>", 
   ",", "\<\"ImageSizeMultipliers\"\>", ",", "\<\"ImageStitch\"\>", 
   ",", "\<\"ImageSubtract\"\>", ",", "\<\"ImageTake\"\>", 
   ",", "\<\"ImageTransformation\"\>", ",", "\<\"ImageTrim\"\>", 
   ",", "\<\"ImageType\"\>", ",", "\<\"ImageValue\"\>", 
   ",", "\<\"ImageValuePositions\"\>", ",", "\<\"ImageVectorscopePlot\"\>", 
   ",", "\<\"ImageWaveformPlot\"\>", ",", "\<\"ImagingDevice\"\>", 
   ",", "\<\"ImplicitRegion\"\>", ",", "\<\"Implies\"\>", 
   ",", "\<\"Import\"\>", ",", "\<\"ImportByteArray\"\>", 
   ",", "\<\"ImportOptions\"\>", ",", "\<\"ImportString\"\>", 
   ",", "\<\"ImportedObject\"\>", ",", "\<\"ImprovementImportance\"\>", 
   ",", "\<\"In\"\>", ",", "\<\"InString\"\>", ",", "\<\"Inactivate\"\>", 
   ",", "\<\"Inactive\"\>", ",", "\<\"IncidenceGraph\"\>", 
   ",", "\<\"IncidenceList\"\>", ",", "\<\"IncidenceMatrix\"\>", 
   ",", "\<\"IncludeAromaticBonds\"\>", ",", "\<\"IncludeConstantBasis\"\>", 
   ",", "\<\"IncludeDefinitions\"\>", ",", "\<\"IncludeDirectories\"\>", 
   ",", "\<\"IncludeGeneratorTasks\"\>", ",", "\<\"IncludeHydrogens\"\>", 
   ",", "\<\"IncludeInflections\"\>", ",", "\<\"IncludeMetaInformation\"\>", 
   ",", "\<\"IncludePods\"\>", ",", "\<\"IncludeQuantities\"\>", 
   ",", "\<\"IncludeRelatedTables\"\>", ",", "\<\"IncludeWindowTimes\"\>", 
   ",", "\<\"IncludedContexts\"\>", ",", "\<\"Increment\"\>", 
   ",", "\<\"IndefiniteMatrixQ\"\>", ",", "\<\"IndependenceTest\"\>", 
   ",", "\<\"IndependentEdgeSetQ\"\>", 
   ",", "\<\"IndependentPhysicalQuantity\"\>", ",", "\<\"IndependentUnit\"\>",
    ",", "\<\"IndependentUnitDimension\"\>", 
   ",", "\<\"IndependentVertexSetQ\"\>", ",", "\<\"Indeterminate\"\>", 
   ",", "\<\"IndeterminateThreshold\"\>", ",", "\<\"IndexEdgeTaggedGraph\"\>",
    ",", "\<\"IndexGraph\"\>", ",", "\<\"Indexed\"\>", 
   ",", "\<\"InexactNumberQ\"\>", ",", "\<\"InfiniteFuture\"\>", 
   ",", "\<\"InfiniteLine\"\>", ",", "\<\"InfinitePast\"\>", 
   ",", "\<\"InfinitePlane\"\>", ",", "\<\"Infinity\"\>", 
   ",", "\<\"Infix\"\>", ",", "\<\"InflationAdjust\"\>", 
   ",", "\<\"InflationMethod\"\>", ",", "\<\"Information\"\>", 
   ",", "\<\"InheritScope\"\>", ",", "\<\"Inherited\"\>", 
   ",", "\<\"InhomogeneousPoissonPointProcess\"\>", 
   ",", "\<\"InhomogeneousPoissonProcess\"\>", 
   ",", "\<\"InitialEvaluationHistory\"\>", ",", "\<\"InitialSeeding\"\>", 
   ",", "\<\"Initialization\"\>", ",", "\<\"InitializationCell\"\>", 
   ",", "\<\"InitializationObject\"\>", ",", "\<\"InitializationObjects\"\>", 
   ",", "\<\"InitializationValue\"\>", ",", "\<\"Initialize\"\>", 
   ",", "\<\"Inner\"\>", ",", "\<\"InnerPolygon\"\>", 
   ",", "\<\"InnerPolyhedron\"\>", ",", "\<\"Inpaint\"\>", 
   ",", "\<\"Input\"\>", ",", "\<\"InputAliases\"\>", 
   ",", "\<\"InputAssumptions\"\>", ",", "\<\"InputAutoReplacements\"\>", 
   ",", "\<\"InputField\"\>", ",", "\<\"InputForm\"\>", 
   ",", "\<\"InputNamePacket\"\>", ",", "\<\"InputNotebook\"\>", 
   ",", "\<\"InputPacket\"\>", ",", "\<\"InputPorts\"\>", 
   ",", "\<\"InputStream\"\>", ",", "\<\"InputString\"\>", 
   ",", "\<\"InputStringPacket\"\>", ",", "\<\"Insert\"\>", 
   ",", "\<\"InsertLinebreaks\"\>", ",", "\<\"InsertResults\"\>", 
   ",", "\<\"InsertionFunction\"\>", ",", "\<\"Inset\"\>", 
   ",", "\<\"Insphere\"\>", ",", "\<\"Install\"\>", 
   ",", "\<\"InstallService\"\>", ",", "\<\"Integer\"\>", 
   ",", "\<\"IntegerDigits\"\>", ",", "\<\"IntegerExponent\"\>", 
   ",", "\<\"IntegerLength\"\>", ",", "\<\"IntegerName\"\>", 
   ",", "\<\"IntegerPart\"\>", ",", "\<\"IntegerPartitions\"\>", 
   ",", "\<\"IntegerQ\"\>", ",", "\<\"IntegerReverse\"\>", 
   ",", "\<\"IntegerString\"\>", ",", "\<\"Integers\"\>", 
   ",", "\<\"Integrate\"\>", ",", "\<\"Interactive\"\>", 
   ",", "\<\"InteractiveTradingChart\"\>", ",", "\<\"InterfaceSwitched\"\>", 
   ",", "\<\"Interleaving\"\>", 
   ",", "\<\"InternallyBalancedDecomposition\"\>", 
   ",", "\<\"InterpolatingFunction\"\>", 
   ",", "\<\"InterpolatingPolynomial\"\>", ",", "\<\"Interpolation\"\>", 
   ",", "\<\"InterpolationOrder\"\>", ",", "\<\"InterpolationPoints\"\>", 
   ",", "\<\"Interpretation\"\>", ",", "\<\"InterpretationBox\"\>", 
   ",", "\<\"InterpretationBoxOptions\"\>", 
   ",", "\<\"InterpretationFunction\"\>", ",", "\<\"Interpreter\"\>", 
   ",", "\<\"InterquartileRange\"\>", ",", "\<\"Interrupt\"\>", 
   ",", "\<\"IntersectedEntityClass\"\>", ",", "\<\"IntersectingQ\"\>", 
   ",", "\<\"Intersection\"\>", ",", "\<\"Interval\"\>", 
   ",", "\<\"IntervalIntersection\"\>", ",", "\<\"IntervalMarkers\"\>", 
   ",", "\<\"IntervalMarkersStyle\"\>", ",", "\<\"IntervalMemberQ\"\>", 
   ",", "\<\"IntervalSlider\"\>", ",", "\<\"IntervalUnion\"\>", 
   ",", "\<\"Inverse\"\>", ",", "\<\"InverseBetaRegularized\"\>", 
   ",", "\<\"InverseBilateralLaplaceTransform\"\>", 
   ",", "\<\"InverseBilateralZTransform\"\>", ",", "\<\"InverseCDF\"\>", 
   ",", "\<\"InverseChiSquareDistribution\"\>", 
   ",", "\<\"InverseContinuousWaveletTransform\"\>", 
   ",", "\<\"InverseDistanceTransform\"\>", 
   ",", "\<\"InverseEllipticNomeQ\"\>", ",", "\<\"InverseErf\"\>", 
   ",", "\<\"InverseErfc\"\>", ",", "\<\"InverseFourier\"\>", 
   ",", "\<\"InverseFourierCosTransform\"\>", 
   ",", "\<\"InverseFourierSequenceTransform\"\>", 
   ",", "\<\"InverseFourierSinTransform\"\>", 
   ",", "\<\"InverseFourierTransform\"\>", ",", "\<\"InverseFunction\"\>", 
   ",", "\<\"InverseFunctions\"\>", ",", "\<\"InverseGammaDistribution\"\>", 
   ",", "\<\"InverseGammaRegularized\"\>", 
   ",", "\<\"InverseGaussianDistribution\"\>", 
   ",", "\<\"InverseGudermannian\"\>", ",", "\<\"InverseHankelTransform\"\>", 
   ",", "\<\"InverseHaversine\"\>", ",", "\<\"InverseImagePyramid\"\>", 
   ",", "\<\"InverseJacobiCD\"\>", ",", "\<\"InverseJacobiCN\"\>", 
   ",", "\<\"InverseJacobiCS\"\>", ",", "\<\"InverseJacobiDC\"\>", 
   ",", "\<\"InverseJacobiDN\"\>", ",", "\<\"InverseJacobiDS\"\>", 
   ",", "\<\"InverseJacobiNC\"\>", ",", "\<\"InverseJacobiND\"\>", 
   ",", "\<\"InverseJacobiNS\"\>", ",", "\<\"InverseJacobiSC\"\>", 
   ",", "\<\"InverseJacobiSD\"\>", ",", "\<\"InverseJacobiSN\"\>", 
   ",", "\<\"InverseLaplaceTransform\"\>", 
   ",", "\<\"InverseMellinTransform\"\>", ",", "\<\"InversePermutation\"\>", 
   ",", "\<\"InverseRadon\"\>", ",", "\<\"InverseRadonTransform\"\>", 
   ",", "\<\"InverseSeries\"\>", ",", "\<\"InverseShortTimeFourier\"\>", 
   ",", "\<\"InverseSpectrogram\"\>", ",", "\<\"InverseSurvivalFunction\"\>", 
   ",", "\<\"InverseTransformedRegion\"\>", 
   ",", "\<\"InverseWaveletTransform\"\>", ",", "\<\"InverseWeierstrassP\"\>",
    ",", "\<\"InverseWishartMatrixDistribution\"\>", 
   ",", "\<\"InverseZTransform\"\>", ",", "\<\"Invisible\"\>", 
   ",", "\<\"IrreduciblePolynomialQ\"\>", ",", "\<\"IslandData\"\>", 
   ",", "\<\"IsolatingInterval\"\>", ",", "\<\"IsomorphicGraphQ\"\>", 
   ",", "\<\"IsomorphicSubgraphQ\"\>", ",", "\<\"IsotopeData\"\>", 
   ",", "\<\"Italic\"\>", ",", "\<\"Item\"\>", ",", "\<\"ItemAspectRatio\"\>",
    ",", "\<\"ItemDisplayFunction\"\>", ",", "\<\"ItemSize\"\>", 
   ",", "\<\"ItemStyle\"\>", ",", "\<\"ItoProcess\"\>", 
   ",", "\<\"JaccardDissimilarity\"\>", ",", "\<\"JacobiAmplitude\"\>", 
   ",", "\<\"JacobiCD\"\>", ",", "\<\"JacobiCN\"\>", ",", "\<\"JacobiCS\"\>", 
   ",", "\<\"JacobiDC\"\>", ",", "\<\"JacobiDN\"\>", ",", "\<\"JacobiDS\"\>", 
   ",", "\<\"JacobiEpsilon\"\>", ",", "\<\"JacobiNC\"\>", 
   ",", "\<\"JacobiND\"\>", ",", "\<\"JacobiNS\"\>", ",", "\<\"JacobiP\"\>", 
   ",", "\<\"JacobiSC\"\>", ",", "\<\"JacobiSD\"\>", ",", "\<\"JacobiSN\"\>", 
   ",", "\<\"JacobiSymbol\"\>", ",", "\<\"JacobiZN\"\>", 
   ",", "\<\"JacobiZeta\"\>", ",", "\<\"JankoGroupJ1\"\>", 
   ",", "\<\"JankoGroupJ2\"\>", ",", "\<\"JankoGroupJ3\"\>", 
   ",", "\<\"JankoGroupJ4\"\>", ",", "\<\"JarqueBeraALMTest\"\>", 
   ",", "\<\"JohnsonDistribution\"\>", ",", "\<\"Join\"\>", 
   ",", "\<\"JoinAcross\"\>", ",", "\<\"JoinForm\"\>", ",", "\<\"Joined\"\>", 
   ",", "\<\"JoinedCurve\"\>", ",", "\<\"JordanDecomposition\"\>", 
   ",", "\<\"JordanModelDecomposition\"\>", ",", "\<\"JuliaSetBoettcher\"\>", 
   ",", "\<\"JuliaSetIterationCount\"\>", ",", "\<\"JuliaSetPlot\"\>", 
   ",", "\<\"JuliaSetPoints\"\>", ",", "\<\"JulianDate\"\>", 
   ",", "\<\"KCoreComponents\"\>", ",", "\<\"KDistribution\"\>", 
   ",", "\<\"KEdgeConnectedComponents\"\>", 
   ",", "\<\"KEdgeConnectedGraphQ\"\>", 
   ",", "\<\"KVertexConnectedComponents\"\>", 
   ",", "\<\"KVertexConnectedGraphQ\"\>", ",", "\<\"KagiChart\"\>", 
   ",", "\<\"KaiserBesselWindow\"\>", ",", "\<\"KaiserWindow\"\>", 
   ",", "\<\"KalmanEstimator\"\>", ",", "\<\"KalmanFilter\"\>", 
   ",", "\<\"KarhunenLoeveDecomposition\"\>", ",", "\<\"KaryTree\"\>", 
   ",", "\<\"KatzCentrality\"\>", ",", "\<\"KeepExistingVersion\"\>", 
   ",", "\<\"KelvinBei\"\>", ",", "\<\"KelvinBer\"\>", 
   ",", "\<\"KelvinKei\"\>", ",", "\<\"KelvinKer\"\>", 
   ",", "\<\"KendallTau\"\>", ",", "\<\"KendallTauTest\"\>", 
   ",", "\<\"KernelFunction\"\>", ",", "\<\"KernelMixtureDistribution\"\>", 
   ",", "\<\"KernelObject\"\>", ",", "\<\"Kernels\"\>", ",", "\<\"Key\"\>", 
   ",", "\<\"KeyCollisionFunction\"\>", ",", "\<\"KeyComplement\"\>", 
   ",", "\<\"KeyDrop\"\>", ",", "\<\"KeyDropFrom\"\>", 
   ",", "\<\"KeyExistsQ\"\>", ",", "\<\"KeyFreeQ\"\>", 
   ",", "\<\"KeyIntersection\"\>", ",", "\<\"KeyMap\"\>", 
   ",", "\<\"KeyMemberQ\"\>", ",", "\<\"KeySelect\"\>", 
   ",", "\<\"KeySort\"\>", ",", "\<\"KeySortBy\"\>", ",", "\<\"KeyTake\"\>", 
   ",", "\<\"KeyUnion\"\>", ",", "\<\"KeyValueMap\"\>", 
   ",", "\<\"KeyValuePattern\"\>", ",", "\<\"KeypointStrength\"\>", 
   ",", "\<\"Keys\"\>", ",", "\<\"Khinchin\"\>", ",", "\<\"KillProcess\"\>", 
   ",", "\<\"KirchhoffGraph\"\>", ",", "\<\"KirchhoffMatrix\"\>", 
   ",", "\<\"KleinInvariantJ\"\>", ",", "\<\"KnapsackSolve\"\>", 
   ",", "\<\"KnightTourGraph\"\>", ",", "\<\"KnotData\"\>", 
   ",", "\<\"KnownUnitQ\"\>", ",", "\<\"KochCurve\"\>", 
   ",", "\<\"KolmogorovSmirnovTest\"\>", ",", "\<\"KroneckerDelta\"\>", 
   ",", "\<\"KroneckerModelDecomposition\"\>", 
   ",", "\<\"KroneckerProduct\"\>", ",", "\<\"KroneckerSymbol\"\>", 
   ",", "\<\"KuiperTest\"\>", ",", "\<\"KumaraswamyDistribution\"\>", 
   ",", "\<\"Kurtosis\"\>", ",", "\<\"KuwaharaFilter\"\>", 
   ",", "\<\"LABColor\"\>", ",", "\<\"LCHColor\"\>", ",", "\<\"LCM\"\>", 
   ",", "\<\"LQEstimatorGains\"\>", ",", "\<\"LQGRegulator\"\>", 
   ",", "\<\"LQOutputRegulatorGains\"\>", ",", "\<\"LQRegulatorGains\"\>", 
   ",", "\<\"LUDecomposition\"\>", ",", "\<\"LUVColor\"\>", 
   ",", "\<\"Label\"\>", ",", "\<\"LabelStyle\"\>", 
   ",", "\<\"LabelVisibility\"\>", ",", "\<\"Labeled\"\>", 
   ",", "\<\"LabelingFunction\"\>", ",", "\<\"LabelingSize\"\>", 
   ",", "\<\"LaguerreL\"\>", ",", "\<\"LakeData\"\>", 
   ",", "\<\"LambdaComponents\"\>", ",", "\<\"LameC\"\>", 
   ",", "\<\"LameCPrime\"\>", ",", "\<\"LameEigenvalueA\"\>", 
   ",", "\<\"LameEigenvalueB\"\>", ",", "\<\"LameS\"\>", 
   ",", "\<\"LameSPrime\"\>", ",", "\<\"LaminaData\"\>", 
   ",", "\<\"LanczosWindow\"\>", ",", "\<\"LandauDistribution\"\>", 
   ",", "\<\"Language\"\>", ",", "\<\"LanguageCategory\"\>", 
   ",", "\<\"LanguageData\"\>", ",", "\<\"LanguageIdentify\"\>", 
   ",", "\<\"LaplaceDistribution\"\>", ",", "\<\"LaplaceTransform\"\>", 
   ",", "\<\"Laplacian\"\>", ",", "\<\"LaplacianFilter\"\>", 
   ",", "\<\"LaplacianGaussianFilter\"\>", ",", "\<\"LaplacianPDETerm\"\>", 
   ",", "\<\"Large\"\>", ",", "\<\"Larger\"\>", ",", "\<\"Last\"\>", 
   ",", "\<\"Latitude\"\>", ",", "\<\"LatitudeLongitude\"\>", 
   ",", "\<\"LatticeData\"\>", ",", "\<\"LatticeReduce\"\>", 
   ",", "\<\"LaunchKernels\"\>", ",", "\<\"LayerSizeFunction\"\>", 
   ",", "\<\"LayeredGraphPlot\"\>", ",", "\<\"LayeredGraphPlot3D\"\>", 
   ",", "\<\"LeaderSize\"\>", ",", "\<\"LeafCount\"\>", 
   ",", "\<\"LeapVariant\"\>", ",", "\<\"LeapYearQ\"\>", 
   ",", "\<\"LearnDistribution\"\>", ",", "\<\"LearnedDistribution\"\>", 
   ",", "\<\"LearningRate\"\>", ",", "\<\"LearningRateMultipliers\"\>", 
   ",", "\<\"LeastSquares\"\>", ",", "\<\"LeastSquaresFilterKernel\"\>", 
   ",", "\<\"Left\"\>", ",", "\<\"LeftArrow\"\>", ",", "\<\"LeftArrowBar\"\>",
    ",", "\<\"LeftArrowRightArrow\"\>", ",", "\<\"LeftDownTeeVector\"\>", 
   ",", "\<\"LeftDownVector\"\>", ",", "\<\"LeftDownVectorBar\"\>", 
   ",", "\<\"LeftRightArrow\"\>", ",", "\<\"LeftRightVector\"\>", 
   ",", "\<\"LeftTee\"\>", ",", "\<\"LeftTeeArrow\"\>", 
   ",", "\<\"LeftTeeVector\"\>", ",", "\<\"LeftTriangle\"\>", 
   ",", "\<\"LeftTriangleBar\"\>", ",", "\<\"LeftTriangleEqual\"\>", 
   ",", "\<\"LeftUpDownVector\"\>", ",", "\<\"LeftUpTeeVector\"\>", 
   ",", "\<\"LeftUpVector\"\>", ",", "\<\"LeftUpVectorBar\"\>", 
   ",", "\<\"LeftVector\"\>", ",", "\<\"LeftVectorBar\"\>", 
   ",", "\<\"LegendAppearance\"\>", ",", "\<\"LegendFunction\"\>", 
   ",", "\<\"LegendLabel\"\>", ",", "\<\"LegendLayout\"\>", 
   ",", "\<\"LegendMargins\"\>", ",", "\<\"LegendMarkerSize\"\>", 
   ",", "\<\"LegendMarkers\"\>", ",", "\<\"Legended\"\>", 
   ",", "\<\"LegendreP\"\>", ",", "\<\"LegendreQ\"\>", ",", "\<\"Length\"\>", 
   ",", "\<\"LengthWhile\"\>", ",", "\<\"LerchPhi\"\>", ",", "\<\"Less\"\>", 
   ",", "\<\"LessEqual\"\>", ",", "\<\"LessEqualGreater\"\>", 
   ",", "\<\"LessEqualThan\"\>", ",", "\<\"LessFullEqual\"\>", 
   ",", "\<\"LessGreater\"\>", ",", "\<\"LessLess\"\>", 
   ",", "\<\"LessSlantEqual\"\>", ",", "\<\"LessThan\"\>", 
   ",", "\<\"LessTilde\"\>", ",", "\<\"LetterCharacter\"\>", 
   ",", "\<\"LetterCounts\"\>", ",", "\<\"LetterNumber\"\>", 
   ",", "\<\"LetterQ\"\>", ",", "\<\"Level\"\>", ",", "\<\"LeveneTest\"\>", 
   ",", "\<\"LeviCivitaTensor\"\>", ",", "\<\"LevyDistribution\"\>", 
   ",", "\<\"LexicographicOrder\"\>", ",", "\<\"LexicographicSort\"\>", 
   ",", "\<\"LibraryDataType\"\>", ",", "\<\"LibraryFunction\"\>", 
   ",", "\<\"LibraryFunctionError\"\>", 
   ",", "\<\"LibraryFunctionInformation\"\>", 
   ",", "\<\"LibraryFunctionLoad\"\>", ",", "\<\"LibraryFunctionUnload\"\>", 
   ",", "\<\"LibraryLoad\"\>", ",", "\<\"LibraryUnload\"\>", 
   ",", "\<\"LicenseEntitlementObject\"\>", 
   ",", "\<\"LicenseEntitlements\"\>", ",", "\<\"LicensingSettings\"\>", 
   ",", "\<\"LiftingFilterData\"\>", ",", "\<\"LiftingWaveletTransform\"\>", 
   ",", "\<\"LightBlue\"\>", ",", "\<\"LightBrown\"\>", 
   ",", "\<\"LightCyan\"\>", ",", "\<\"LightGray\"\>", 
   ",", "\<\"LightGreen\"\>", ",", "\<\"LightMagenta\"\>", 
   ",", "\<\"LightOrange\"\>", ",", "\<\"LightPink\"\>", 
   ",", "\<\"LightPurple\"\>", ",", "\<\"LightRed\"\>", 
   ",", "\<\"LightYellow\"\>", ",", "\<\"Lighter\"\>", 
   ",", "\<\"Lighting\"\>", ",", "\<\"LightingAngle\"\>", 
   ",", "\<\"Likelihood\"\>", ",", "\<\"Limit\"\>", 
   ",", "\<\"LimitsPositioning\"\>", ",", "\<\"LindleyDistribution\"\>", 
   ",", "\<\"Line\"\>", ",", "\<\"LineBreakChart\"\>", 
   ",", "\<\"LineGraph\"\>", ",", "\<\"LineIndent\"\>", 
   ",", "\<\"LineIndentMaxFraction\"\>", 
   ",", "\<\"LineIntegralConvolutionPlot\"\>", 
   ",", "\<\"LineIntegralConvolutionScale\"\>", ",", "\<\"LineLegend\"\>", 
   ",", "\<\"LineSpacing\"\>", ",", "\<\"LinearFractionalOptimization\"\>", 
   ",", "\<\"LinearFractionalTransform\"\>", 
   ",", "\<\"LinearGradientFilling\"\>", ",", "\<\"LinearGradientImage\"\>", 
   ",", "\<\"LinearLayer\"\>", ",", "\<\"LinearModelFit\"\>", 
   ",", "\<\"LinearOffsetFunction\"\>", ",", "\<\"LinearOptimization\"\>", 
   ",", "\<\"LinearRecurrence\"\>", ",", "\<\"LinearSolve\"\>", 
   ",", "\<\"LinearSolveFunction\"\>", 
   ",", "\<\"LinearizingTransformationData\"\>", ",", "\<\"LinkActivate\"\>", 
   ",", "\<\"LinkClose\"\>", ",", "\<\"LinkConnect\"\>", 
   ",", "\<\"LinkCreate\"\>", ",", "\<\"LinkFunction\"\>", 
   ",", "\<\"LinkInterrupt\"\>", ",", "\<\"LinkLaunch\"\>", 
   ",", "\<\"LinkObject\"\>", ",", "\<\"LinkPatterns\"\>", 
   ",", "\<\"LinkProtocol\"\>", ",", "\<\"LinkRankCentrality\"\>", 
   ",", "\<\"LinkRead\"\>", ",", "\<\"LinkReadyQ\"\>", 
   ",", "\<\"LinkWrite\"\>", ",", "\<\"Links\"\>", 
   ",", "\<\"LiouvilleLambda\"\>", ",", "\<\"List\"\>", 
   ",", "\<\"ListAnimate\"\>", ",", "\<\"ListContourPlot\"\>", 
   ",", "\<\"ListContourPlot3D\"\>", ",", "\<\"ListConvolve\"\>", 
   ",", "\<\"ListCorrelate\"\>", ",", "\<\"ListCurvePathPlot\"\>", 
   ",", "\<\"ListDeconvolve\"\>", ",", "\<\"ListDensityPlot\"\>", 
   ",", "\<\"ListDensityPlot3D\"\>", ",", "\<\"ListFormat\"\>", 
   ",", "\<\"ListFourierSequenceTransform\"\>", 
   ",", "\<\"ListInterpolation\"\>", 
   ",", "\<\"ListLineIntegralConvolutionPlot\"\>", 
   ",", "\<\"ListLinePlot\"\>", ",", "\<\"ListLinePlot3D\"\>", 
   ",", "\<\"ListLogLinearPlot\"\>", ",", "\<\"ListLogLogPlot\"\>", 
   ",", "\<\"ListLogPlot\"\>", ",", "\<\"ListPicker\"\>", 
   ",", "\<\"ListPickerBox\"\>", ",", "\<\"ListPickerBoxOptions\"\>", 
   ",", "\<\"ListPlay\"\>", ",", "\<\"ListPlot\"\>", 
   ",", "\<\"ListPlot3D\"\>", ",", "\<\"ListPointPlot3D\"\>", 
   ",", "\<\"ListPolarPlot\"\>", ",", "\<\"ListQ\"\>", 
   ",", "\<\"ListSliceContourPlot3D\"\>", 
   ",", "\<\"ListSliceDensityPlot3D\"\>", 
   ",", "\<\"ListSliceVectorPlot3D\"\>", ",", "\<\"ListStepPlot\"\>", 
   ",", "\<\"ListStreamDensityPlot\"\>", ",", "\<\"ListStreamPlot\"\>", 
   ",", "\<\"ListStreamPlot3D\"\>", ",", "\<\"ListSurfacePlot3D\"\>", 
   ",", "\<\"ListVectorDensityPlot\"\>", 
   ",", "\<\"ListVectorDisplacementPlot\"\>", 
   ",", "\<\"ListVectorDisplacementPlot3D\"\>", ",", "\<\"ListVectorPlot\"\>",
    ",", "\<\"ListVectorPlot3D\"\>", ",", "\<\"ListZTransform\"\>", 
   ",", "\<\"Listable\"\>", ",", "\<\"LocalAdaptiveBinarize\"\>", 
   ",", "\<\"LocalCache\"\>", ",", "\<\"LocalClusteringCoefficient\"\>", 
   ",", "\<\"LocalObject\"\>", ",", "\<\"LocalObjects\"\>", 
   ",", "\<\"LocalResponseNormalizationLayer\"\>", ",", "\<\"LocalSubmit\"\>",
    ",", "\<\"LocalSymbol\"\>", ",", "\<\"LocalTime\"\>", 
   ",", "\<\"LocalTimeZone\"\>", ",", "\<\"LocalizeVariables\"\>", 
   ",", "\<\"LocationEquivalenceTest\"\>", ",", "\<\"LocationTest\"\>", 
   ",", "\<\"Locator\"\>", ",", "\<\"LocatorAutoCreate\"\>", 
   ",", "\<\"LocatorPane\"\>", ",", "\<\"LocatorRegion\"\>", 
   ",", "\<\"Locked\"\>", ",", "\<\"Log\"\>", ",", "\<\"Log10\"\>", 
   ",", "\<\"Log2\"\>", ",", "\<\"LogBarnesG\"\>", ",", "\<\"LogGamma\"\>", 
   ",", "\<\"LogGammaDistribution\"\>", ",", "\<\"LogIntegral\"\>", 
   ",", "\<\"LogLikelihood\"\>", ",", "\<\"LogLinearPlot\"\>", 
   ",", "\<\"LogLogPlot\"\>", ",", "\<\"LogLogisticDistribution\"\>", 
   ",", "\<\"LogMultinormalDistribution\"\>", 
   ",", "\<\"LogNormalDistribution\"\>", ",", "\<\"LogPlot\"\>", 
   ",", "\<\"LogRankTest\"\>", ",", "\<\"LogSeriesDistribution\"\>", 
   ",", "\<\"LogicalExpand\"\>", ",", "\<\"LogisticDistribution\"\>", 
   ",", "\<\"LogisticSigmoid\"\>", ",", "\<\"LogitModelFit\"\>", 
   ",", "\<\"LongLeftArrow\"\>", ",", "\<\"LongLeftRightArrow\"\>", 
   ",", "\<\"LongRightArrow\"\>", ",", "\<\"LongShortTermMemoryLayer\"\>", 
   ",", "\<\"Longest\"\>", ",", "\<\"LongestCommonSequence\"\>", 
   ",", "\<\"LongestCommonSequencePositions\"\>", 
   ",", "\<\"LongestCommonSubsequence\"\>", 
   ",", "\<\"LongestCommonSubsequencePositions\"\>", 
   ",", "\<\"LongestOrderedSequence\"\>", ",", "\<\"Longitude\"\>", 
   ",", "\<\"Lookup\"\>", ",", "\<\"LoopFreeGraphQ\"\>", 
   ",", "\<\"Looping\"\>", ",", "\<\"LossFunction\"\>", 
   ",", "\<\"LowerCaseQ\"\>", ",", "\<\"LowerLeftArrow\"\>", 
   ",", "\<\"LowerRightArrow\"\>", ",", "\<\"LowerTriangularMatrixQ\"\>", 
   ",", "\<\"LowerTriangularize\"\>", ",", "\<\"LowpassFilter\"\>", 
   ",", "\<\"LucasL\"\>", ",", "\<\"LuccioSamiComponents\"\>", 
   ",", "\<\"LunarEclipse\"\>", ",", "\<\"LyapunovSolve\"\>", 
   ",", "\<\"LyonsGroupLy\"\>", ",", "\<\"MAProcess\"\>", 
   ",", "\<\"MIMETypeToFormatList\"\>", ",", "\<\"MachineNumberQ\"\>", 
   ",", "\<\"MachinePrecision\"\>", ",", "\<\"Magenta\"\>", 
   ",", "\<\"Magnification\"\>", ",", "\<\"Magnify\"\>", 
   ",", "\<\"MailAddressValidation\"\>", ",", "\<\"MailExecute\"\>", 
   ",", "\<\"MailFolder\"\>", ",", "\<\"MailItem\"\>", 
   ",", "\<\"MailReceiverFunction\"\>", ",", "\<\"MailResponseFunction\"\>", 
   ",", "\<\"MailSearch\"\>", ",", "\<\"MailServerConnect\"\>", 
   ",", "\<\"MailServerConnection\"\>", ",", "\<\"MailSettings\"\>", 
   ",", "\<\"Majority\"\>", ",", "\<\"MakeBoxes\"\>", 
   ",", "\<\"MakeExpression\"\>", ",", "\<\"ManagedLibraryExpressionID\"\>", 
   ",", "\<\"ManagedLibraryExpressionQ\"\>", 
   ",", "\<\"MandelbrotSetBoettcher\"\>", 
   ",", "\<\"MandelbrotSetDistance\"\>", 
   ",", "\<\"MandelbrotSetIterationCount\"\>", 
   ",", "\<\"MandelbrotSetMemberQ\"\>", ",", "\<\"MandelbrotSetPlot\"\>", 
   ",", "\<\"MangoldtLambda\"\>", ",", "\<\"ManhattanDistance\"\>", 
   ",", "\<\"Manipulate\"\>", ",", "\<\"Manipulator\"\>", 
   ",", "\<\"MannWhitneyTest\"\>", ",", "\<\"MannedSpaceMissionData\"\>", 
   ",", "\<\"MantissaExponent\"\>", ",", "\<\"Manual\"\>", ",", "\<\"Map\"\>",
    ",", "\<\"MapAll\"\>", ",", "\<\"MapAt\"\>", ",", "\<\"MapIndexed\"\>", 
   ",", "\<\"MapThread\"\>", ",", "\<\"MarchenkoPasturDistribution\"\>", 
   ",", "\<\"MarcumQ\"\>", ",", "\<\"MardiaCombinedTest\"\>", 
   ",", "\<\"MardiaKurtosisTest\"\>", ",", "\<\"MardiaSkewnessTest\"\>", 
   ",", "\<\"MarginalDistribution\"\>", 
   ",", "\<\"MarkovProcessProperties\"\>", ",", "\<\"Masking\"\>", 
   ",", "\<\"MassConcentrationCondition\"\>", ",", "\<\"MassFluxValue\"\>", 
   ",", "\<\"MassImpermeableBoundaryValue\"\>", 
   ",", "\<\"MassOutflowValue\"\>", ",", "\<\"MassSymmetryValue\"\>", 
   ",", "\<\"MassTransferValue\"\>", ",", "\<\"MassTransportPDEComponent\"\>",
    ",", "\<\"MatchLocalNames\"\>", ",", "\<\"MatchQ\"\>", 
   ",", "\<\"MatchingDissimilarity\"\>", ",", "\<\"MaterialShading\"\>", 
   ",", "\<\"MaternPointProcess\"\>", ",", "\<\"MathMLForm\"\>", 
   ",", "\<\"MathematicalFunctionData\"\>", ",", "\<\"MathieuC\"\>", 
   ",", "\<\"MathieuCPrime\"\>", ",", "\<\"MathieuCharacteristicA\"\>", 
   ",", "\<\"MathieuCharacteristicB\"\>", 
   ",", "\<\"MathieuCharacteristicExponent\"\>", 
   ",", "\<\"MathieuGroupM11\"\>", ",", "\<\"MathieuGroupM12\"\>", 
   ",", "\<\"MathieuGroupM22\"\>", ",", "\<\"MathieuGroupM23\"\>", 
   ",", "\<\"MathieuGroupM24\"\>", ",", "\<\"MathieuS\"\>", 
   ",", "\<\"MathieuSPrime\"\>", ",", "\<\"Matrices\"\>", 
   ",", "\<\"MatrixExp\"\>", ",", "\<\"MatrixForm\"\>", 
   ",", "\<\"MatrixFunction\"\>", ",", "\<\"MatrixLog\"\>", 
   ",", "\<\"MatrixNormalDistribution\"\>", ",", "\<\"MatrixPlot\"\>", 
   ",", "\<\"MatrixPower\"\>", ",", "\<\"MatrixPropertyDistribution\"\>", 
   ",", "\<\"MatrixQ\"\>", ",", "\<\"MatrixRank\"\>", 
   ",", "\<\"MatrixTDistribution\"\>", ",", "\<\"Max\"\>", 
   ",", "\<\"MaxCellMeasure\"\>", ",", "\<\"MaxColorDistance\"\>", 
   ",", "\<\"MaxDate\"\>", ",", "\<\"MaxDetect\"\>", 
   ",", "\<\"MaxDuration\"\>", ",", "\<\"MaxExtraBandwidths\"\>", 
   ",", "\<\"MaxExtraConditions\"\>", ",", "\<\"MaxFeatureDisplacement\"\>", 
   ",", "\<\"MaxFeatures\"\>", ",", "\<\"MaxFilter\"\>", 
   ",", "\<\"MaxItems\"\>", ",", "\<\"MaxIterations\"\>", 
   ",", "\<\"MaxLimit\"\>", ",", "\<\"MaxMemoryUsed\"\>", 
   ",", "\<\"MaxMixtureKernels\"\>", ",", "\<\"MaxOverlapFraction\"\>", 
   ",", "\<\"MaxPlotPoints\"\>", ",", "\<\"MaxRecursion\"\>", 
   ",", "\<\"MaxStableDistribution\"\>", ",", "\<\"MaxStepFraction\"\>", 
   ",", "\<\"MaxStepSize\"\>", ",", "\<\"MaxSteps\"\>", 
   ",", "\<\"MaxTrainingRounds\"\>", ",", "\<\"MaxValue\"\>", 
   ",", "\<\"MaxWordGap\"\>", ",", "\<\"MaximalBy\"\>", 
   ",", "\<\"Maximize\"\>", ",", "\<\"MaxwellDistribution\"\>", 
   ",", "\<\"McLaughlinGroupMcL\"\>", ",", "\<\"Mean\"\>", 
   ",", "\<\"MeanAbsoluteLossLayer\"\>", ",", "\<\"MeanAround\"\>", 
   ",", "\<\"MeanClusteringCoefficient\"\>", 
   ",", "\<\"MeanDegreeConnectivity\"\>", ",", "\<\"MeanDeviation\"\>", 
   ",", "\<\"MeanFilter\"\>", ",", "\<\"MeanGraphDistance\"\>", 
   ",", "\<\"MeanNeighborDegree\"\>", ",", "\<\"MeanPointDensity\"\>", 
   ",", "\<\"MeanShift\"\>", ",", "\<\"MeanShiftFilter\"\>", 
   ",", "\<\"MeanSquaredLossLayer\"\>", ",", "\<\"Median\"\>", 
   ",", "\<\"MedianDeviation\"\>", ",", "\<\"MedianFilter\"\>", 
   ",", "\<\"MedicalTestData\"\>", ",", "\<\"Medium\"\>", 
   ",", "\<\"MeijerG\"\>", ",", "\<\"MeijerGReduce\"\>", 
   ",", "\<\"MeixnerDistribution\"\>", ",", "\<\"MellinConvolve\"\>", 
   ",", "\<\"MellinTransform\"\>", ",", "\<\"MemberQ\"\>", 
   ",", "\<\"MemoryAvailable\"\>", ",", "\<\"MemoryConstrained\"\>", 
   ",", "\<\"MemoryConstraint\"\>", ",", "\<\"MemoryInUse\"\>", 
   ",", "\<\"MengerMesh\"\>", ",", "\<\"MenuCommandKey\"\>", 
   ",", "\<\"MenuPacket\"\>", ",", "\<\"MenuSortingValue\"\>", 
   ",", "\<\"MenuStyle\"\>", ",", "\<\"MenuView\"\>", ",", "\<\"Merge\"\>", 
   ",", "\<\"MergingFunction\"\>", ",", "\<\"MersennePrimeExponent\"\>", 
   ",", "\<\"MersennePrimeExponentQ\"\>", ",", "\<\"Mesh\"\>", 
   ",", "\<\"MeshCellCentroid\"\>", ",", "\<\"MeshCellCount\"\>", 
   ",", "\<\"MeshCellHighlight\"\>", ",", "\<\"MeshCellIndex\"\>", 
   ",", "\<\"MeshCellLabel\"\>", ",", "\<\"MeshCellMarker\"\>", 
   ",", "\<\"MeshCellMeasure\"\>", ",", "\<\"MeshCellQuality\"\>", 
   ",", "\<\"MeshCellShapeFunction\"\>", ",", "\<\"MeshCellStyle\"\>", 
   ",", "\<\"MeshCells\"\>", ",", "\<\"MeshConnectivityGraph\"\>", 
   ",", "\<\"MeshCoordinates\"\>", ",", "\<\"MeshFunctions\"\>", 
   ",", "\<\"MeshPrimitives\"\>", ",", "\<\"MeshQualityGoal\"\>", 
   ",", "\<\"MeshRefinementFunction\"\>", ",", "\<\"MeshRegion\"\>", 
   ",", "\<\"MeshRegionQ\"\>", ",", "\<\"MeshShading\"\>", 
   ",", "\<\"MeshStyle\"\>", ",", "\<\"Message\"\>", 
   ",", "\<\"MessageDialog\"\>", ",", "\<\"MessageList\"\>", 
   ",", "\<\"MessageName\"\>", ",", "\<\"MessagePacket\"\>", 
   ",", "\<\"Messages\"\>", ",", "\<\"MetaInformation\"\>", 
   ",", "\<\"MeteorShowerData\"\>", ",", "\<\"Method\"\>", 
   ",", "\<\"MexicanHatWavelet\"\>", ",", "\<\"MeyerWavelet\"\>", 
   ",", "\<\"Midpoint\"\>", ",", "\<\"Min\"\>", 
   ",", "\<\"MinColorDistance\"\>", ",", "\<\"MinDate\"\>", 
   ",", "\<\"MinDetect\"\>", ",", "\<\"MinFilter\"\>", 
   ",", "\<\"MinIntervalSize\"\>", ",", "\<\"MinLimit\"\>", 
   ",", "\<\"MinMax\"\>", ",", "\<\"MinPointSeparation\"\>", 
   ",", "\<\"MinStableDistribution\"\>", ",", "\<\"MinValue\"\>", 
   ",", "\<\"MineralData\"\>", ",", "\<\"MinimalBy\"\>", 
   ",", "\<\"MinimalPolynomial\"\>", ",", "\<\"MinimalStateSpaceModel\"\>", 
   ",", "\<\"Minimize\"\>", ",", "\<\"MinimumTimeIncrement\"\>", 
   ",", "\<\"MinkowskiQuestionMark\"\>", ",", "\<\"MinorPlanetData\"\>", 
   ",", "\<\"Minors\"\>", ",", "\<\"Minus\"\>", ",", "\<\"MinusPlus\"\>", 
   ",", "\<\"Missing\"\>", ",", "\<\"MissingBehavior\"\>", 
   ",", "\<\"MissingDataMethod\"\>", ",", "\<\"MissingDataRules\"\>", 
   ",", "\<\"MissingQ\"\>", ",", "\<\"MissingString\"\>", 
   ",", "\<\"MissingStyle\"\>", ",", "\<\"MissingValuePattern\"\>", 
   ",", "\<\"MissingValueSynthesis\"\>", ",", "\<\"MittagLefflerE\"\>", 
   ",", "\<\"MixedFractionParts\"\>", ",", "\<\"MixedGraphQ\"\>", 
   ",", "\<\"MixedMagnitude\"\>", ",", "\<\"MixedRadix\"\>", 
   ",", "\<\"MixedRadixQuantity\"\>", ",", "\<\"MixedUnit\"\>", 
   ",", "\<\"MixtureDistribution\"\>", ",", "\<\"Mod\"\>", 
   ",", "\<\"Modal\"\>", ",", "\<\"ModularInverse\"\>", 
   ",", "\<\"ModularLambda\"\>", ",", "\<\"Module\"\>", 
   ",", "\<\"Modulus\"\>", ",", "\<\"MoebiusMu\"\>", ",", "\<\"Molecule\"\>", 
   ",", "\<\"MoleculeAlign\"\>", ",", "\<\"MoleculeContainsQ\"\>", 
   ",", "\<\"MoleculeDraw\"\>", ",", "\<\"MoleculeFreeQ\"\>", 
   ",", "\<\"MoleculeGraph\"\>", ",", "\<\"MoleculeMatchQ\"\>", 
   ",", "\<\"MoleculeMaximumCommonSubstructure\"\>", 
   ",", "\<\"MoleculeModify\"\>", ",", "\<\"MoleculeName\"\>", 
   ",", "\<\"MoleculePattern\"\>", ",", "\<\"MoleculePlot\"\>", 
   ",", "\<\"MoleculePlot3D\"\>", ",", "\<\"MoleculeProperty\"\>", 
   ",", "\<\"MoleculeQ\"\>", ",", "\<\"MoleculeRecognize\"\>", 
   ",", "\<\"MoleculeSubstructureCount\"\>", ",", "\<\"MoleculeValue\"\>", 
   ",", "\<\"Moment\"\>", ",", "\<\"MomentConvert\"\>", 
   ",", "\<\"MomentEvaluate\"\>", ",", "\<\"MomentGeneratingFunction\"\>", 
   ",", "\<\"MomentOfInertia\"\>", ",", "\<\"Monday\"\>", 
   ",", "\<\"Monitor\"\>", ",", "\<\"MonomialList\"\>", 
   ",", "\<\"MonsterGroupM\"\>", ",", "\<\"MoonPhase\"\>", 
   ",", "\<\"MoonPosition\"\>", ",", "\<\"MorletWavelet\"\>", 
   ",", "\<\"MorphologicalBinarize\"\>", 
   ",", "\<\"MorphologicalBranchPoints\"\>", 
   ",", "\<\"MorphologicalComponents\"\>", 
   ",", "\<\"MorphologicalEulerNumber\"\>", ",", "\<\"MorphologicalGraph\"\>",
    ",", "\<\"MorphologicalPerimeter\"\>", 
   ",", "\<\"MorphologicalTransform\"\>", ",", "\<\"MortalityData\"\>", 
   ",", "\<\"Most\"\>", ",", "\<\"MountainData\"\>", 
   ",", "\<\"MouseAnnotation\"\>", ",", "\<\"MouseAppearance\"\>", 
   ",", "\<\"MousePosition\"\>", ",", "\<\"Mouseover\"\>", 
   ",", "\<\"MovieData\"\>", ",", "\<\"MovingAverage\"\>", 
   ",", "\<\"MovingMap\"\>", ",", "\<\"MovingMedian\"\>", 
   ",", "\<\"MoyalDistribution\"\>", ",", "\<\"MultiaxisArrangement\"\>", 
   ",", "\<\"Multicolumn\"\>", ",", "\<\"MultiedgeStyle\"\>", 
   ",", "\<\"MultigraphQ\"\>", ",", "\<\"Multinomial\"\>", 
   ",", "\<\"MultinomialDistribution\"\>", 
   ",", "\<\"MultinormalDistribution\"\>", ",", "\<\"MultiplicativeOrder\"\>",
    ",", "\<\"MultiplySides\"\>", ",", "\<\"Multiselection\"\>", 
   ",", "\<\"MultivariateHypergeometricDistribution\"\>", 
   ",", "\<\"MultivariatePoissonDistribution\"\>", 
   ",", "\<\"MultivariateTDistribution\"\>", ",", "\<\"N\"\>", 
   ",", "\<\"NArgMax\"\>", ",", "\<\"NArgMin\"\>", 
   ",", "\<\"NBodySimulation\"\>", ",", "\<\"NBodySimulationData\"\>", 
   ",", "\<\"NCache\"\>", ",", "\<\"NDEigensystem\"\>", 
   ",", "\<\"NDEigenvalues\"\>", ",", "\<\"NDSolve\"\>", 
   ",", "\<\"NDSolveValue\"\>", ",", "\<\"NExpectation\"\>", 
   ",", "\<\"NHoldAll\"\>", ",", "\<\"NHoldFirst\"\>", 
   ",", "\<\"NHoldRest\"\>", ",", "\<\"NIntegrate\"\>", 
   ",", "\<\"NMaxValue\"\>", ",", "\<\"NMaximize\"\>", 
   ",", "\<\"NMinValue\"\>", ",", "\<\"NMinimize\"\>", 
   ",", "\<\"NProbability\"\>", ",", "\<\"NProduct\"\>", 
   ",", "\<\"NRoots\"\>", ",", "\<\"NSolve\"\>", ",", "\<\"NSolveValues\"\>", 
   ",", "\<\"NSum\"\>", ",", "\<\"NakagamiDistribution\"\>", 
   ",", "\<\"NameQ\"\>", ",", "\<\"Names\"\>", ",", "\<\"Nand\"\>", 
   ",", "\<\"Nearest\"\>", ",", "\<\"NearestFunction\"\>", 
   ",", "\<\"NearestMeshCells\"\>", ",", "\<\"NearestNeighborG\"\>", 
   ",", "\<\"NearestNeighborGraph\"\>", ",", "\<\"NearestTo\"\>", 
   ",", "\<\"NebulaData\"\>", ",", "\<\"NeedlemanWunschSimilarity\"\>", 
   ",", "\<\"Needs\"\>", ",", "\<\"Negative\"\>", 
   ",", "\<\"NegativeBinomialDistribution\"\>", 
   ",", "\<\"NegativeDefiniteMatrixQ\"\>", ",", "\<\"NegativeIntegers\"\>", 
   ",", "\<\"NegativeMultinomialDistribution\"\>", 
   ",", "\<\"NegativeRationals\"\>", ",", "\<\"NegativeReals\"\>", 
   ",", "\<\"NegativeSemidefiniteMatrixQ\"\>", 
   ",", "\<\"NegativelyOrientedPoints\"\>", ",", "\<\"NeighborhoodData\"\>", 
   ",", "\<\"NeighborhoodGraph\"\>", ",", "\<\"Nest\"\>", 
   ",", "\<\"NestGraph\"\>", ",", "\<\"NestList\"\>", ",", "\<\"NestTree\"\>",
    ",", "\<\"NestWhile\"\>", ",", "\<\"NestWhileList\"\>", 
   ",", "\<\"NestedGreaterGreater\"\>", ",", "\<\"NestedLessLess\"\>", 
   ",", "\<\"NetAppend\"\>", ",", "\<\"NetArray\"\>", 
   ",", "\<\"NetArrayLayer\"\>", ",", "\<\"NetBidirectionalOperator\"\>", 
   ",", "\<\"NetChain\"\>", ",", "\<\"NetDecoder\"\>", 
   ",", "\<\"NetDelete\"\>", ",", "\<\"NetDrop\"\>", 
   ",", "\<\"NetEncoder\"\>", ",", "\<\"NetEvaluationMode\"\>", 
   ",", "\<\"NetExtract\"\>", ",", "\<\"NetFlatten\"\>", 
   ",", "\<\"NetFoldOperator\"\>", ",", "\<\"NetGANOperator\"\>", 
   ",", "\<\"NetGraph\"\>", ",", "\<\"NetInitialize\"\>", 
   ",", "\<\"NetInsert\"\>", ",", "\<\"NetInsertSharedArrays\"\>", 
   ",", "\<\"NetJoin\"\>", ",", "\<\"NetMapOperator\"\>", 
   ",", "\<\"NetMapThreadOperator\"\>", ",", "\<\"NetMeasurements\"\>", 
   ",", "\<\"NetModel\"\>", ",", "\<\"NetNestOperator\"\>", 
   ",", "\<\"NetPairEmbeddingOperator\"\>", ",", "\<\"NetPort\"\>", 
   ",", "\<\"NetPortGradient\"\>", ",", "\<\"NetPrepend\"\>", 
   ",", "\<\"NetRename\"\>", ",", "\<\"NetReplace\"\>", 
   ",", "\<\"NetReplacePart\"\>", ",", "\<\"NetStateObject\"\>", 
   ",", "\<\"NetTake\"\>", ",", "\<\"NetTrain\"\>", 
   ",", "\<\"NetTrainResultsObject\"\>", ",", "\<\"NetUnfold\"\>", 
   ",", "\<\"NetworkPacketCapture\"\>", ",", "\<\"NetworkPacketRecording\"\>",
    ",", "\<\"NetworkPacketTrace\"\>", ",", "\<\"NeumannValue\"\>", 
   ",", "\<\"NevilleThetaC\"\>", ",", "\<\"NevilleThetaD\"\>", 
   ",", "\<\"NevilleThetaN\"\>", ",", "\<\"NevilleThetaS\"\>", 
   ",", "\<\"NextCell\"\>", ",", "\<\"NextDate\"\>", ",", "\<\"NextPrime\"\>",
    ",", "\<\"NeymanScottPointProcess\"\>", ",", "\<\"NicholsGridLines\"\>", 
   ",", "\<\"NicholsPlot\"\>", ",", "\<\"NightHemisphere\"\>", 
   ",", "\<\"NoWhitespace\"\>", ",", "\<\"NominalVariables\"\>", 
   ",", "\<\"NonCommutativeMultiply\"\>", ",", "\<\"NonConstants\"\>", 
   ",", "\<\"NonNegative\"\>", ",", "\<\"NonNegativeIntegers\"\>", 
   ",", "\<\"NonNegativeRationals\"\>", ",", "\<\"NonNegativeReals\"\>", 
   ",", "\<\"NonPositive\"\>", ",", "\<\"NonPositiveIntegers\"\>", 
   ",", "\<\"NonPositiveRationals\"\>", ",", "\<\"NonPositiveReals\"\>", 
   ",", "\<\"NoncentralBetaDistribution\"\>", 
   ",", "\<\"NoncentralChiSquareDistribution\"\>", 
   ",", "\<\"NoncentralFRatioDistribution\"\>", 
   ",", "\<\"NoncentralStudentTDistribution\"\>", 
   ",", "\<\"NondimensionalizationTransform\"\>", ",", "\<\"None\"\>", 
   ",", "\<\"NoneTrue\"\>", ",", "\<\"NonlinearModelFit\"\>", 
   ",", "\<\"NonlinearStateSpaceModel\"\>", 
   ",", "\<\"NonlocalMeansFilter\"\>", ",", "\<\"Nor\"\>", 
   ",", "\<\"NorlundB\"\>", ",", "\<\"Norm\"\>", ",", "\<\"NormFunction\"\>", 
   ",", "\<\"Normal\"\>", ",", "\<\"NormalDistribution\"\>", 
   ",", "\<\"NormalMatrixQ\"\>", ",", "\<\"NormalizationLayer\"\>", 
   ",", "\<\"Normalize\"\>", ",", "\<\"Normalized\"\>", 
   ",", "\<\"NormalizedSquaredEuclideanDistance\"\>", 
   ",", "\<\"NormalsFunction\"\>", ",", "\<\"Not\"\>", 
   ",", "\<\"NotCongruent\"\>", ",", "\<\"NotCupCap\"\>", 
   ",", "\<\"NotDoubleVerticalBar\"\>", ",", "\<\"NotElement\"\>", 
   ",", "\<\"NotEqualTilde\"\>", ",", "\<\"NotExists\"\>", 
   ",", "\<\"NotGreater\"\>", ",", "\<\"NotGreaterEqual\"\>", 
   ",", "\<\"NotGreaterFullEqual\"\>", ",", "\<\"NotGreaterGreater\"\>", 
   ",", "\<\"NotGreaterLess\"\>", ",", "\<\"NotGreaterSlantEqual\"\>", 
   ",", "\<\"NotGreaterTilde\"\>", ",", "\<\"NotHumpDownHump\"\>", 
   ",", "\<\"NotHumpEqual\"\>", ",", "\<\"NotLeftTriangle\"\>", 
   ",", "\<\"NotLeftTriangleBar\"\>", ",", "\<\"NotLeftTriangleEqual\"\>", 
   ",", "\<\"NotLess\"\>", ",", "\<\"NotLessEqual\"\>", 
   ",", "\<\"NotLessFullEqual\"\>", ",", "\<\"NotLessGreater\"\>", 
   ",", "\<\"NotLessLess\"\>", ",", "\<\"NotLessSlantEqual\"\>", 
   ",", "\<\"NotLessTilde\"\>", ",", "\<\"NotNestedGreaterGreater\"\>", 
   ",", "\<\"NotNestedLessLess\"\>", ",", "\<\"NotPrecedes\"\>", 
   ",", "\<\"NotPrecedesEqual\"\>", ",", "\<\"NotPrecedesSlantEqual\"\>", 
   ",", "\<\"NotPrecedesTilde\"\>", ",", "\<\"NotReverseElement\"\>", 
   ",", "\<\"NotRightTriangle\"\>", ",", "\<\"NotRightTriangleBar\"\>", 
   ",", "\<\"NotRightTriangleEqual\"\>", ",", "\<\"NotSquareSubset\"\>", 
   ",", "\<\"NotSquareSubsetEqual\"\>", ",", "\<\"NotSquareSuperset\"\>", 
   ",", "\<\"NotSquareSupersetEqual\"\>", ",", "\<\"NotSubset\"\>", 
   ",", "\<\"NotSubsetEqual\"\>", ",", "\<\"NotSucceeds\"\>", 
   ",", "\<\"NotSucceedsEqual\"\>", ",", "\<\"NotSucceedsSlantEqual\"\>", 
   ",", "\<\"NotSucceedsTilde\"\>", ",", "\<\"NotSuperset\"\>", 
   ",", "\<\"NotSupersetEqual\"\>", ",", "\<\"NotTilde\"\>", 
   ",", "\<\"NotTildeEqual\"\>", ",", "\<\"NotTildeFullEqual\"\>", 
   ",", "\<\"NotTildeTilde\"\>", ",", "\<\"NotVerticalBar\"\>", 
   ",", "\<\"Notebook\"\>", ",", "\<\"NotebookApply\"\>", 
   ",", "\<\"NotebookAutoSave\"\>", ",", "\<\"NotebookClose\"\>", 
   ",", "\<\"NotebookDelete\"\>", ",", "\<\"NotebookDirectory\"\>", 
   ",", "\<\"NotebookDynamicExpression\"\>", ",", "\<\"NotebookEvaluate\"\>", 
   ",", "\<\"NotebookEventActions\"\>", ",", "\<\"NotebookFileName\"\>", 
   ",", "\<\"NotebookFind\"\>", ",", "\<\"NotebookGet\"\>", 
   ",", "\<\"NotebookImport\"\>", ",", "\<\"NotebookInformation\"\>", 
   ",", "\<\"NotebookLocate\"\>", ",", "\<\"NotebookObject\"\>", 
   ",", "\<\"NotebookOpen\"\>", ",", "\<\"NotebookPrint\"\>", 
   ",", "\<\"NotebookPut\"\>", ",", "\<\"NotebookRead\"\>", 
   ",", "\<\"NotebookSave\"\>", ",", "\<\"NotebookSelection\"\>", 
   ",", "\<\"NotebookTemplate\"\>", ",", "\<\"NotebookWrite\"\>", 
   ",", "\<\"Notebooks\"\>", ",", "\<\"NotebooksMenu\"\>", 
   ",", "\<\"Nothing\"\>", ",", "\<\"NotificationFunction\"\>", 
   ",", "\<\"Now\"\>", ",", "\<\"NuclearExplosionData\"\>", 
   ",", "\<\"NuclearReactorData\"\>", ",", "\<\"Null\"\>", 
   ",", "\<\"NullRecords\"\>", ",", "\<\"NullSpace\"\>", 
   ",", "\<\"NullWords\"\>", ",", "\<\"Number\"\>", 
   ",", "\<\"NumberCompose\"\>", ",", "\<\"NumberDecompose\"\>", 
   ",", "\<\"NumberDigit\"\>", ",", "\<\"NumberExpand\"\>", 
   ",", "\<\"NumberFieldClassNumber\"\>", 
   ",", "\<\"NumberFieldDiscriminant\"\>", 
   ",", "\<\"NumberFieldFundamentalUnits\"\>", 
   ",", "\<\"NumberFieldIntegralBasis\"\>", 
   ",", "\<\"NumberFieldNormRepresentatives\"\>", 
   ",", "\<\"NumberFieldRegulator\"\>", 
   ",", "\<\"NumberFieldRootsOfUnity\"\>", 
   ",", "\<\"NumberFieldSignature\"\>", ",", "\<\"NumberForm\"\>", 
   ",", "\<\"NumberFormat\"\>", ",", "\<\"NumberLinePlot\"\>", 
   ",", "\<\"NumberMarks\"\>", ",", "\<\"NumberMultiplier\"\>", 
   ",", "\<\"NumberPadding\"\>", ",", "\<\"NumberPoint\"\>", 
   ",", "\<\"NumberQ\"\>", ",", "\<\"NumberSeparator\"\>", 
   ",", "\<\"NumberSigns\"\>", ",", "\<\"NumberString\"\>", 
   ",", "\<\"Numerator\"\>", ",", "\<\"NumeratorDenominator\"\>", 
   ",", "\<\"NumericArray\"\>", ",", "\<\"NumericArrayQ\"\>", 
   ",", "\<\"NumericArrayType\"\>", ",", "\<\"NumericFunction\"\>", 
   ",", "\<\"NumericQ\"\>", ",", "\<\"NumericalOrder\"\>", 
   ",", "\<\"NumericalSort\"\>", ",", "\<\"NuttallWindow\"\>", 
   ",", "\<\"NyquistGridLines\"\>", ",", "\<\"NyquistPlot\"\>", 
   ",", "\<\"O\"\>", ",", "\<\"ONanGroupON\"\>", 
   ",", "\<\"ObservabilityGramian\"\>", ",", "\<\"ObservabilityMatrix\"\>", 
   ",", "\<\"ObservableDecomposition\"\>", ",", "\<\"ObservableModelQ\"\>", 
   ",", "\<\"OceanData\"\>", ",", "\<\"Octahedron\"\>", ",", "\<\"OddQ\"\>", 
   ",", "\<\"Off\"\>", ",", "\<\"Offset\"\>", ",", "\<\"On\"\>", 
   ",", "\<\"Once\"\>", ",", "\<\"OneIdentity\"\>", ",", "\<\"Opacity\"\>", 
   ",", "\<\"OpacityFunction\"\>", ",", "\<\"OpacityFunctionScaling\"\>", 
   ",", "\<\"OpenAppend\"\>", ",", "\<\"OpenRead\"\>", 
   ",", "\<\"OpenWrite\"\>", ",", "\<\"Opener\"\>", ",", "\<\"OpenerView\"\>",
    ",", "\<\"Opening\"\>", ",", "\<\"Operate\"\>", 
   ",", "\<\"OperatingSystem\"\>", ",", "\<\"OperatorApplied\"\>", 
   ",", "\<\"OptimumFlowData\"\>", ",", "\<\"OptionValue\"\>", 
   ",", "\<\"Optional\"\>", ",", "\<\"OptionalElement\"\>", 
   ",", "\<\"Options\"\>", ",", "\<\"OptionsPattern\"\>", ",", "\<\"Or\"\>", 
   ",", "\<\"Orange\"\>", ",", "\<\"Order\"\>", 
   ",", "\<\"OrderDistribution\"\>", ",", "\<\"OrderedQ\"\>", 
   ",", "\<\"Ordering\"\>", ",", "\<\"OrderingBy\"\>", 
   ",", "\<\"OrderingLayer\"\>", ",", "\<\"Orderless\"\>", 
   ",", "\<\"OrderlessPatternSequence\"\>", 
   ",", "\<\"OrnsteinUhlenbeckProcess\"\>", ",", "\<\"OrthogonalMatrixQ\"\>", 
   ",", "\<\"Orthogonalize\"\>", ",", "\<\"Out\"\>", ",", "\<\"Outer\"\>", 
   ",", "\<\"OuterPolygon\"\>", ",", "\<\"OuterPolyhedron\"\>", 
   ",", "\<\"OutputControllabilityMatrix\"\>", 
   ",", "\<\"OutputControllableModelQ\"\>", ",", "\<\"OutputForm\"\>", 
   ",", "\<\"OutputNamePacket\"\>", ",", "\<\"OutputPorts\"\>", 
   ",", "\<\"OutputResponse\"\>", ",", "\<\"OutputSizeLimit\"\>", 
   ",", "\<\"OutputStream\"\>", ",", "\<\"OverBar\"\>", 
   ",", "\<\"OverDot\"\>", ",", "\<\"OverHat\"\>", ",", "\<\"OverTilde\"\>", 
   ",", "\<\"OverVector\"\>", ",", "\<\"Overflow\"\>", 
   ",", "\<\"Overlaps\"\>", ",", "\<\"Overlay\"\>", 
   ",", "\<\"OverlayVideo\"\>", ",", "\<\"Overscript\"\>", 
   ",", "\<\"OverscriptBox\"\>", ",", "\<\"OverscriptBoxOptions\"\>", 
   ",", "\<\"OverwriteTarget\"\>", ",", "\<\"OwenT\"\>", 
   ",", "\<\"OwnValues\"\>", ",", "\<\"PDF\"\>", 
   ",", "\<\"PERTDistribution\"\>", ",", "\<\"PIDDerivativeFilter\"\>", 
   ",", "\<\"PIDFeedforward\"\>", ",", "\<\"PIDTune\"\>", 
   ",", "\<\"PacletDataRebuild\"\>", ",", "\<\"PacletDirectoryLoad\"\>", 
   ",", "\<\"PacletDirectoryUnload\"\>", ",", "\<\"PacletDisable\"\>", 
   ",", "\<\"PacletEnable\"\>", ",", "\<\"PacletFind\"\>", 
   ",", "\<\"PacletFindRemote\"\>", ",", "\<\"PacletInstall\"\>", 
   ",", "\<\"PacletInstallSubmit\"\>", ",", "\<\"PacletNewerQ\"\>", 
   ",", "\<\"PacletObject\"\>", ",", "\<\"PacletSite\"\>", 
   ",", "\<\"PacletSiteObject\"\>", ",", "\<\"PacletSiteRegister\"\>", 
   ",", "\<\"PacletSiteUnregister\"\>", ",", "\<\"PacletSiteUpdate\"\>", 
   ",", "\<\"PacletSites\"\>", ",", "\<\"PacletSymbol\"\>", 
   ",", "\<\"PacletUninstall\"\>", ",", "\<\"PadLeft\"\>", 
   ",", "\<\"PadRight\"\>", ",", "\<\"PaddedForm\"\>", ",", "\<\"Padding\"\>",
    ",", "\<\"PaddingLayer\"\>", ",", "\<\"PaddingSize\"\>", 
   ",", "\<\"PadeApproximant\"\>", ",", "\<\"PageBreakAbove\"\>", 
   ",", "\<\"PageBreakBelow\"\>", ",", "\<\"PageBreakWithin\"\>", 
   ",", "\<\"PageFooters\"\>", ",", "\<\"PageHeaders\"\>", 
   ",", "\<\"PageRankCentrality\"\>", ",", "\<\"PageTheme\"\>", 
   ",", "\<\"PageWidth\"\>", ",", "\<\"Pagination\"\>", 
   ",", "\<\"PairCorrelationG\"\>", ",", "\<\"PairedBarChart\"\>", 
   ",", "\<\"PairedHistogram\"\>", ",", "\<\"PairedSmoothHistogram\"\>", 
   ",", "\<\"PairedTTest\"\>", ",", "\<\"PairedZTest\"\>", 
   ",", "\<\"PaletteNotebook\"\>", ",", "\<\"PalindromeQ\"\>", 
   ",", "\<\"Pane\"\>", ",", "\<\"PaneSelector\"\>", ",", "\<\"Panel\"\>", 
   ",", "\<\"Paneled\"\>", ",", "\<\"ParabolicCylinderD\"\>", 
   ",", "\<\"ParagraphIndent\"\>", ",", "\<\"ParagraphSpacing\"\>", 
   ",", "\<\"ParallelArray\"\>", ",", "\<\"ParallelAxisPlot\"\>", 
   ",", "\<\"ParallelCombine\"\>", ",", "\<\"ParallelDo\"\>", 
   ",", "\<\"ParallelEvaluate\"\>", ",", "\<\"ParallelMap\"\>", 
   ",", "\<\"ParallelNeeds\"\>", ",", "\<\"ParallelProduct\"\>", 
   ",", "\<\"ParallelSubmit\"\>", ",", "\<\"ParallelSum\"\>", 
   ",", "\<\"ParallelTable\"\>", ",", "\<\"ParallelTry\"\>", 
   ",", "\<\"Parallelepiped\"\>", ",", "\<\"Parallelization\"\>", 
   ",", "\<\"Parallelize\"\>", ",", "\<\"Parallelogram\"\>", 
   ",", "\<\"ParameterEstimator\"\>", 
   ",", "\<\"ParameterMixtureDistribution\"\>", 
   ",", "\<\"ParametricConvexOptimization\"\>", 
   ",", "\<\"ParametricFunction\"\>", ",", "\<\"ParametricNDSolve\"\>", 
   ",", "\<\"ParametricNDSolveValue\"\>", ",", "\<\"ParametricPlot\"\>", 
   ",", "\<\"ParametricPlot3D\"\>", ",", "\<\"ParametricRampLayer\"\>", 
   ",", "\<\"ParametricRegion\"\>", ",", "\<\"ParentBox\"\>", 
   ",", "\<\"ParentCell\"\>", ",", "\<\"ParentDirectory\"\>", 
   ",", "\<\"ParentNotebook\"\>", ",", "\<\"ParetoDistribution\"\>", 
   ",", "\<\"ParetoPickandsDistribution\"\>", ",", "\<\"ParkData\"\>", 
   ",", "\<\"Part\"\>", ",", "\<\"PartBehavior\"\>", ",", "\<\"PartLayer\"\>",
    ",", "\<\"PartOfSpeech\"\>", ",", "\<\"PartProtection\"\>", 
   ",", "\<\"PartialCorrelationFunction\"\>", 
   ",", "\<\"ParticleAcceleratorData\"\>", ",", "\<\"ParticleData\"\>", 
   ",", "\<\"Partition\"\>", ",", "\<\"PartitionGranularity\"\>", 
   ",", "\<\"PartitionsP\"\>", ",", "\<\"PartitionsQ\"\>", 
   ",", "\<\"ParzenWindow\"\>", ",", "\<\"PascalDistribution\"\>", 
   ",", "\<\"PassEventsDown\"\>", ",", "\<\"PassEventsUp\"\>", 
   ",", "\<\"Paste\"\>", ",", "\<\"PasteButton\"\>", ",", "\<\"Path\"\>", 
   ",", "\<\"PathGraph\"\>", ",", "\<\"PathGraphQ\"\>", 
   ",", "\<\"Pattern\"\>", ",", "\<\"PatternFilling\"\>", 
   ",", "\<\"PatternSequence\"\>", ",", "\<\"PatternTest\"\>", 
   ",", "\<\"PaulWavelet\"\>", ",", "\<\"PauliMatrix\"\>", 
   ",", "\<\"Pause\"\>", ",", "\<\"PeakDetect\"\>", ",", "\<\"PeanoCurve\"\>",
    ",", "\<\"PearsonChiSquareTest\"\>", 
   ",", "\<\"PearsonCorrelationTest\"\>", ",", "\<\"PearsonDistribution\"\>", 
   ",", "\<\"PenttinenPointProcess\"\>", ",", "\<\"PercentForm\"\>", 
   ",", "\<\"PerfectNumber\"\>", ",", "\<\"PerfectNumberQ\"\>", 
   ",", "\<\"PerformanceGoal\"\>", ",", "\<\"Perimeter\"\>", 
   ",", "\<\"PeriodicBoundaryCondition\"\>", ",", "\<\"Periodogram\"\>", 
   ",", "\<\"PeriodogramArray\"\>", ",", "\<\"Permanent\"\>", 
   ",", "\<\"Permissions\"\>", ",", "\<\"PermissionsGroup\"\>", 
   ",", "\<\"PermissionsGroupMemberQ\"\>", ",", "\<\"PermissionsGroups\"\>", 
   ",", "\<\"PermissionsKey\"\>", ",", "\<\"PermissionsKeys\"\>", 
   ",", "\<\"PermutationCycles\"\>", ",", "\<\"PermutationCyclesQ\"\>", 
   ",", "\<\"PermutationGroup\"\>", ",", "\<\"PermutationLength\"\>", 
   ",", "\<\"PermutationList\"\>", ",", "\<\"PermutationListQ\"\>", 
   ",", "\<\"PermutationMax\"\>", ",", "\<\"PermutationMin\"\>", 
   ",", "\<\"PermutationOrder\"\>", ",", "\<\"PermutationPower\"\>", 
   ",", "\<\"PermutationProduct\"\>", ",", "\<\"PermutationReplace\"\>", 
   ",", "\<\"PermutationSupport\"\>", ",", "\<\"Permutations\"\>", 
   ",", "\<\"Permute\"\>", ",", "\<\"PeronaMalikFilter\"\>", 
   ",", "\<\"PerpendicularBisector\"\>", ",", "\<\"PersistenceLocation\"\>", 
   ",", "\<\"PersistenceTime\"\>", ",", "\<\"PersistentObject\"\>", 
   ",", "\<\"PersistentObjects\"\>", ",", "\<\"PersistentSymbol\"\>", 
   ",", "\<\"PersonData\"\>", ",", "\<\"PetersenGraph\"\>", 
   ",", "\<\"PhaseMargins\"\>", ",", "\<\"PhaseRange\"\>", 
   ",", "\<\"PhysicalSystemData\"\>", ",", "\<\"Pi\"\>", ",", "\<\"Pick\"\>", 
   ",", "\<\"PieChart\"\>", ",", "\<\"PieChart3D\"\>", 
   ",", "\<\"Piecewise\"\>", ",", "\<\"PiecewiseExpand\"\>", 
   ",", "\<\"PillaiTrace\"\>", ",", "\<\"PillaiTraceTest\"\>", 
   ",", "\<\"PingTime\"\>", ",", "\<\"Pink\"\>", 
   ",", "\<\"PitchRecognize\"\>", ",", "\<\"PixelValue\"\>", 
   ",", "\<\"PixelValuePositions\"\>", ",", "\<\"Placed\"\>", 
   ",", "\<\"Placeholder\"\>", ",", "\<\"PlaceholderLayer\"\>", 
   ",", "\<\"PlaceholderReplace\"\>", ",", "\<\"Plain\"\>", 
   ",", "\<\"PlanarAngle\"\>", ",", "\<\"PlanarFaceList\"\>", 
   ",", "\<\"PlanarGraph\"\>", ",", "\<\"PlanarGraphQ\"\>", 
   ",", "\<\"PlanckRadiationLaw\"\>", ",", "\<\"PlaneCurveData\"\>", 
   ",", "\<\"PlanetData\"\>", ",", "\<\"PlanetaryMoonData\"\>", 
   ",", "\<\"PlantData\"\>", ",", "\<\"Play\"\>", ",", "\<\"PlayRange\"\>", 
   ",", "\<\"Plot\"\>", ",", "\<\"Plot3D\"\>", ",", "\<\"PlotLabel\"\>", 
   ",", "\<\"PlotLabels\"\>", ",", "\<\"PlotLayout\"\>", 
   ",", "\<\"PlotLegends\"\>", ",", "\<\"PlotMarkers\"\>", 
   ",", "\<\"PlotPoints\"\>", ",", "\<\"PlotRange\"\>", 
   ",", "\<\"PlotRangeClipping\"\>", ",", "\<\"PlotRangePadding\"\>", 
   ",", "\<\"PlotRegion\"\>", ",", "\<\"PlotStyle\"\>", 
   ",", "\<\"PlotTheme\"\>", ",", "\<\"Pluralize\"\>", ",", "\<\"Plus\"\>", 
   ",", "\<\"PlusMinus\"\>", ",", "\<\"Pochhammer\"\>", 
   ",", "\<\"PodStates\"\>", ",", "\<\"PodWidth\"\>", ",", "\<\"Point\"\>", 
   ",", "\<\"PointCountDistribution\"\>", ",", "\<\"PointDensity\"\>", 
   ",", "\<\"PointDensityFunction\"\>", ",", "\<\"PointFigureChart\"\>", 
   ",", "\<\"PointLegend\"\>", ",", "\<\"PointLight\"\>", 
   ",", "\<\"PointProcessEstimator\"\>", ",", "\<\"PointProcessFitTest\"\>", 
   ",", "\<\"PointProcessParameterAssumptions\"\>", 
   ",", "\<\"PointProcessParameterQ\"\>", ",", "\<\"PointSize\"\>", 
   ",", "\<\"PointStatisticFunction\"\>", ",", "\<\"PointValuePlot\"\>", 
   ",", "\<\"PoissonConsulDistribution\"\>", 
   ",", "\<\"PoissonDistribution\"\>", ",", "\<\"PoissonPDEComponent\"\>", 
   ",", "\<\"PoissonPointProcess\"\>", ",", "\<\"PoissonProcess\"\>", 
   ",", "\<\"PoissonWindow\"\>", ",", "\<\"PolarAxes\"\>", 
   ",", "\<\"PolarAxesOrigin\"\>", ",", "\<\"PolarGridLines\"\>", 
   ",", "\<\"PolarPlot\"\>", ",", "\<\"PolarTicks\"\>", 
   ",", "\<\"PoleZeroMarkers\"\>", ",", "\<\"PolyGamma\"\>", 
   ",", "\<\"PolyLog\"\>", ",", "\<\"PolyaAeppliDistribution\"\>", 
   ",", "\<\"Polygon\"\>", ",", "\<\"PolygonAngle\"\>", 
   ",", "\<\"PolygonCoordinates\"\>", ",", "\<\"PolygonDecomposition\"\>", 
   ",", "\<\"PolygonalNumber\"\>", ",", "\<\"Polyhedron\"\>", 
   ",", "\<\"PolyhedronAngle\"\>", ",", "\<\"PolyhedronCoordinates\"\>", 
   ",", "\<\"PolyhedronData\"\>", ",", "\<\"PolyhedronDecomposition\"\>", 
   ",", "\<\"PolyhedronGenus\"\>", ",", "\<\"PolynomialExpressionQ\"\>", 
   ",", "\<\"PolynomialExtendedGCD\"\>", ",", "\<\"PolynomialGCD\"\>", 
   ",", "\<\"PolynomialLCM\"\>", ",", "\<\"PolynomialMod\"\>", 
   ",", "\<\"PolynomialQ\"\>", ",", "\<\"PolynomialQuotient\"\>", 
   ",", "\<\"PolynomialQuotientRemainder\"\>", 
   ",", "\<\"PolynomialReduce\"\>", ",", "\<\"PolynomialRemainder\"\>", 
   ",", "\<\"PolynomialSumOfSquaresList\"\>", ",", "\<\"PoolingLayer\"\>", 
   ",", "\<\"PopupMenu\"\>", ",", "\<\"PopupView\"\>", 
   ",", "\<\"PopupWindow\"\>", ",", "\<\"Position\"\>", 
   ",", "\<\"PositionIndex\"\>", ",", "\<\"Positive\"\>", 
   ",", "\<\"PositiveDefiniteMatrixQ\"\>", ",", "\<\"PositiveIntegers\"\>", 
   ",", "\<\"PositiveRationals\"\>", ",", "\<\"PositiveReals\"\>", 
   ",", "\<\"PositiveSemidefiniteMatrixQ\"\>", 
   ",", "\<\"PositivelyOrientedPoints\"\>", ",", "\<\"PossibleZeroQ\"\>", 
   ",", "\<\"Postfix\"\>", ",", "\<\"Power\"\>", 
   ",", "\<\"PowerDistribution\"\>", ",", "\<\"PowerExpand\"\>", 
   ",", "\<\"PowerMod\"\>", ",", "\<\"PowerModList\"\>", 
   ",", "\<\"PowerRange\"\>", ",", "\<\"PowerSpectralDensity\"\>", 
   ",", "\<\"PowerSymmetricPolynomial\"\>", 
   ",", "\<\"PowersRepresentations\"\>", ",", "\<\"PreDecrement\"\>", 
   ",", "\<\"PreIncrement\"\>", ",", "\<\"PrecedenceForm\"\>", 
   ",", "\<\"Precedes\"\>", ",", "\<\"PrecedesEqual\"\>", 
   ",", "\<\"PrecedesSlantEqual\"\>", ",", "\<\"PrecedesTilde\"\>", 
   ",", "\<\"Precision\"\>", ",", "\<\"PrecisionGoal\"\>", 
   ",", "\<\"Predict\"\>", ",", "\<\"PredictorFunction\"\>", 
   ",", "\<\"PredictorMeasurements\"\>", 
   ",", "\<\"PredictorMeasurementsObject\"\>", ",", "\<\"PreemptProtect\"\>", 
   ",", "\<\"Prefix\"\>", ",", "\<\"Prepend\"\>", ",", "\<\"PrependLayer\"\>",
    ",", "\<\"PrependTo\"\>", ",", "\<\"PreprocessingRules\"\>", 
   ",", "\<\"PreserveColor\"\>", ",", "\<\"PreserveImageOptions\"\>", 
   ",", "\<\"PreviousCell\"\>", ",", "\<\"PreviousDate\"\>", 
   ",", "\<\"PriceGraphDistribution\"\>", ",", "\<\"Prime\"\>", 
   ",", "\<\"PrimeNu\"\>", ",", "\<\"PrimeOmega\"\>", ",", "\<\"PrimePi\"\>", 
   ",", "\<\"PrimePowerQ\"\>", ",", "\<\"PrimeQ\"\>", 
   ",", "\<\"PrimeZetaP\"\>", ",", "\<\"Primes\"\>", 
   ",", "\<\"PrimitivePolynomialQ\"\>", ",", "\<\"PrimitiveRoot\"\>", 
   ",", "\<\"PrimitiveRootList\"\>", ",", "\<\"PrincipalComponents\"\>", 
   ",", "\<\"PrincipalValue\"\>", ",", "\<\"Print\"\>", 
   ",", "\<\"PrintTemporary\"\>", ",", "\<\"PrintableASCIIQ\"\>", 
   ",", "\<\"PrintingStyleEnvironment\"\>", ",", "\<\"Printout3D\"\>", 
   ",", "\<\"Printout3DPreviewer\"\>", ",", "\<\"Prism\"\>", 
   ",", "\<\"PrivateCellOptions\"\>", ",", "\<\"PrivateFontOptions\"\>", 
   ",", "\<\"PrivateKey\"\>", ",", "\<\"PrivateNotebookOptions\"\>", 
   ",", "\<\"Probability\"\>", ",", "\<\"ProbabilityDistribution\"\>", 
   ",", "\<\"ProbabilityPlot\"\>", ",", "\<\"ProbabilityScalePlot\"\>", 
   ",", "\<\"ProbitModelFit\"\>", ",", "\<\"ProcessConnection\"\>", 
   ",", "\<\"ProcessDirectory\"\>", ",", "\<\"ProcessEnvironment\"\>", 
   ",", "\<\"ProcessEstimator\"\>", ",", "\<\"ProcessInformation\"\>", 
   ",", "\<\"ProcessObject\"\>", ",", "\<\"ProcessParameterAssumptions\"\>", 
   ",", "\<\"ProcessParameterQ\"\>", ",", "\<\"ProcessStatus\"\>", 
   ",", "\<\"Processes\"\>", ",", "\<\"Product\"\>", 
   ",", "\<\"ProductDistribution\"\>", ",", "\<\"ProductLog\"\>", 
   ",", "\<\"ProgressIndicator\"\>", ",", "\<\"ProgressReporting\"\>", 
   ",", "\<\"Projection\"\>", ",", "\<\"Prolog\"\>", 
   ",", "\<\"ProofObject\"\>", ",", "\<\"Proportion\"\>", 
   ",", "\<\"Proportional\"\>", ",", "\<\"Protect\"\>", 
   ",", "\<\"Protected\"\>", ",", "\<\"ProteinData\"\>", 
   ",", "\<\"Pruning\"\>", ",", "\<\"PseudoInverse\"\>", 
   ",", "\<\"PsychrometricPropertyData\"\>", ",", "\<\"PublicKey\"\>", 
   ",", "\<\"PublisherID\"\>", ",", "\<\"PulsarData\"\>", 
   ",", "\<\"PunctuationCharacter\"\>", ",", "\<\"Purple\"\>", 
   ",", "\<\"Put\"\>", ",", "\<\"PutAppend\"\>", ",", "\<\"Pyramid\"\>", 
   ",", "\<\"QBinomial\"\>", ",", "\<\"QFactorial\"\>", ",", "\<\"QGamma\"\>",
    ",", "\<\"QHypergeometricPFQ\"\>", ",", "\<\"QPochhammer\"\>", 
   ",", "\<\"QPolyGamma\"\>", ",", "\<\"QRDecomposition\"\>", 
   ",", "\<\"QnDispersion\"\>", ",", "\<\"QuadraticIrrationalQ\"\>", 
   ",", "\<\"QuadraticOptimization\"\>", ",", "\<\"Quantile\"\>", 
   ",", "\<\"QuantilePlot\"\>", ",", "\<\"Quantity\"\>", 
   ",", "\<\"QuantityArray\"\>", ",", "\<\"QuantityDistribution\"\>", 
   ",", "\<\"QuantityForm\"\>", ",", "\<\"QuantityMagnitude\"\>", 
   ",", "\<\"QuantityQ\"\>", ",", "\<\"QuantityUnit\"\>", 
   ",", "\<\"QuantityVariable\"\>", 
   ",", "\<\"QuantityVariableCanonicalUnit\"\>", 
   ",", "\<\"QuantityVariableDimensions\"\>", 
   ",", "\<\"QuantityVariableIdentifier\"\>", 
   ",", "\<\"QuantityVariablePhysicalQuantity\"\>", ",", "\<\"Quartics\"\>", 
   ",", "\<\"QuartileDeviation\"\>", ",", "\<\"QuartileSkewness\"\>", 
   ",", "\<\"Quartiles\"\>", ",", "\<\"Query\"\>", 
   ",", "\<\"QuestionInterface\"\>", ",", "\<\"QuestionObject\"\>", 
   ",", "\<\"QueueProperties\"\>", ",", "\<\"QueueingNetworkProcess\"\>", 
   ",", "\<\"QueueingProcess\"\>", ",", "\<\"Quiet\"\>", 
   ",", "\<\"QuietEcho\"\>", ",", "\<\"Quit\"\>", ",", "\<\"Quotient\"\>", 
   ",", "\<\"QuotientRemainder\"\>", ",", "\<\"RGBColor\"\>", 
   ",", "\<\"RSolve\"\>", ",", "\<\"RSolveValue\"\>", 
   ",", "\<\"RadialAxisPlot\"\>", ",", "\<\"RadialGradientFilling\"\>", 
   ",", "\<\"RadialGradientImage\"\>", ",", "\<\"RadialityCentrality\"\>", 
   ",", "\<\"RadicalBox\"\>", ",", "\<\"RadicalBoxOptions\"\>", 
   ",", "\<\"RadioButton\"\>", ",", "\<\"RadioButtonBar\"\>", 
   ",", "\<\"Radon\"\>", ",", "\<\"RadonTransform\"\>", 
   ",", "\<\"RamanujanTau\"\>", ",", "\<\"RamanujanTauL\"\>", 
   ",", "\<\"RamanujanTauTheta\"\>", ",", "\<\"RamanujanTauZ\"\>", 
   ",", "\<\"Ramp\"\>", ",", "\<\"RandomArrayLayer\"\>", 
   ",", "\<\"RandomChoice\"\>", ",", "\<\"RandomColor\"\>", 
   ",", "\<\"RandomComplex\"\>", ",", "\<\"RandomEntity\"\>", 
   ",", "\<\"RandomFunction\"\>", ",", "\<\"RandomGeneratorState\"\>", 
   ",", "\<\"RandomGeoPosition\"\>", ",", "\<\"RandomGraph\"\>", 
   ",", "\<\"RandomImage\"\>", ",", "\<\"RandomInstance\"\>", 
   ",", "\<\"RandomInteger\"\>", ",", "\<\"RandomPermutation\"\>", 
   ",", "\<\"RandomPoint\"\>", ",", "\<\"RandomPointConfiguration\"\>", 
   ",", "\<\"RandomPolygon\"\>", ",", "\<\"RandomPolyhedron\"\>", 
   ",", "\<\"RandomPrime\"\>", ",", "\<\"RandomReal\"\>", 
   ",", "\<\"RandomSample\"\>", ",", "\<\"RandomSeeding\"\>", 
   ",", "\<\"RandomTree\"\>", ",", "\<\"RandomVariate\"\>", 
   ",", "\<\"RandomWalkProcess\"\>", ",", "\<\"RandomWord\"\>", 
   ",", "\<\"Range\"\>", ",", "\<\"RangeFilter\"\>", ",", "\<\"RankedMax\"\>",
    ",", "\<\"RankedMin\"\>", ",", "\<\"RarerProbability\"\>", 
   ",", "\<\"Raster\"\>", ",", "\<\"Raster3D\"\>", ",", "\<\"RasterSize\"\>", 
   ",", "\<\"Rasterize\"\>", ",", "\<\"Rational\"\>", 
   ",", "\<\"RationalExpressionQ\"\>", ",", "\<\"Rationalize\"\>", 
   ",", "\<\"Rationals\"\>", ",", "\<\"Ratios\"\>", ",", "\<\"RawBoxes\"\>", 
   ",", "\<\"RawData\"\>", ",", "\<\"RayleighDistribution\"\>", 
   ",", "\<\"Re\"\>", ",", "\<\"ReIm\"\>", ",", "\<\"ReImLabels\"\>", 
   ",", "\<\"ReImPlot\"\>", ",", "\<\"ReImStyle\"\>", 
   ",", "\<\"ReactionBalance\"\>", ",", "\<\"ReactionBalancedQ\"\>", 
   ",", "\<\"ReactionPDETerm\"\>", ",", "\<\"Read\"\>", 
   ",", "\<\"ReadByteArray\"\>", ",", "\<\"ReadLine\"\>", 
   ",", "\<\"ReadList\"\>", ",", "\<\"ReadProtected\"\>", 
   ",", "\<\"ReadString\"\>", ",", "\<\"Real\"\>", ",", "\<\"RealAbs\"\>", 
   ",", "\<\"RealBlockDiagonalForm\"\>", ",", "\<\"RealDigits\"\>", 
   ",", "\<\"RealExponent\"\>", ",", "\<\"RealSign\"\>", ",", "\<\"Reals\"\>",
    ",", "\<\"Reap\"\>", ",", "\<\"RecalibrationFunction\"\>", 
   ",", "\<\"RecognitionPrior\"\>", ",", "\<\"Record\"\>", 
   ",", "\<\"RecordLists\"\>", ",", "\<\"RecordSeparators\"\>", 
   ",", "\<\"Rectangle\"\>", ",", "\<\"RectangleChart\"\>", 
   ",", "\<\"RectangleChart3D\"\>", 
   ",", "\<\"RectangularRepeatingElement\"\>", 
   ",", "\<\"RecurrenceFilter\"\>", ",", "\<\"RecurrenceTable\"\>", 
   ",", "\<\"Red\"\>", ",", "\<\"Reduce\"\>", 
   ",", "\<\"ReferenceLineStyle\"\>", ",", "\<\"Refine\"\>", 
   ",", "\<\"ReflectionMatrix\"\>", ",", "\<\"ReflectionTransform\"\>", 
   ",", "\<\"Refresh\"\>", ",", "\<\"RefreshRate\"\>", ",", "\<\"Region\"\>", 
   ",", "\<\"RegionBinarize\"\>", ",", "\<\"RegionBoundary\"\>", 
   ",", "\<\"RegionBoundaryStyle\"\>", ",", "\<\"RegionBounds\"\>", 
   ",", "\<\"RegionCentroid\"\>", ",", "\<\"RegionCongruent\"\>", 
   ",", "\<\"RegionConvert\"\>", ",", "\<\"RegionDifference\"\>", 
   ",", "\<\"RegionDilation\"\>", ",", "\<\"RegionDimension\"\>", 
   ",", "\<\"RegionDisjoint\"\>", ",", "\<\"RegionDistance\"\>", 
   ",", "\<\"RegionDistanceFunction\"\>", 
   ",", "\<\"RegionEmbeddingDimension\"\>", ",", "\<\"RegionEqual\"\>", 
   ",", "\<\"RegionErosion\"\>", ",", "\<\"RegionFillingStyle\"\>", 
   ",", "\<\"RegionFit\"\>", ",", "\<\"RegionFunction\"\>", 
   ",", "\<\"RegionImage\"\>", ",", "\<\"RegionIntersection\"\>", 
   ",", "\<\"RegionMeasure\"\>", ",", "\<\"RegionMember\"\>", 
   ",", "\<\"RegionMemberFunction\"\>", ",", "\<\"RegionMoment\"\>", 
   ",", "\<\"RegionNearest\"\>", ",", "\<\"RegionNearestFunction\"\>", 
   ",", "\<\"RegionPlot\"\>", ",", "\<\"RegionPlot3D\"\>", 
   ",", "\<\"RegionProduct\"\>", ",", "\<\"RegionQ\"\>", 
   ",", "\<\"RegionResize\"\>", ",", "\<\"RegionSimilar\"\>", 
   ",", "\<\"RegionSize\"\>", ",", "\<\"RegionSymmetricDifference\"\>", 
   ",", "\<\"RegionUnion\"\>", ",", "\<\"RegionWithin\"\>", 
   ",", "\<\"RegisterExternalEvaluator\"\>", ",", "\<\"RegularExpression\"\>",
    ",", "\<\"RegularPolygon\"\>", ",", "\<\"Regularization\"\>", 
   ",", "\<\"RegularlySampledQ\"\>", ",", "\<\"RelationGraph\"\>", 
   ",", "\<\"RelationalDatabase\"\>", ",", "\<\"ReleaseHold\"\>", 
   ",", "\<\"ReliabilityDistribution\"\>", ",", "\<\"ReliefImage\"\>", 
   ",", "\<\"ReliefPlot\"\>", ",", "\<\"RemoteAuthorizationCaching\"\>", 
   ",", "\<\"RemoteBatchJobAbort\"\>", ",", "\<\"RemoteBatchJobObject\"\>", 
   ",", "\<\"RemoteBatchJobs\"\>", ",", "\<\"RemoteBatchMapSubmit\"\>", 
   ",", "\<\"RemoteBatchSubmissionEnvironment\"\>", 
   ",", "\<\"RemoteBatchSubmit\"\>", ",", "\<\"RemoteConnect\"\>", 
   ",", "\<\"RemoteConnectionObject\"\>", ",", "\<\"RemoteEvaluate\"\>", 
   ",", "\<\"RemoteFile\"\>", ",", "\<\"RemoteInputFiles\"\>", 
   ",", "\<\"RemoteKernelObject\"\>", ",", "\<\"RemoteProviderSettings\"\>", 
   ",", "\<\"RemoteRun\"\>", ",", "\<\"RemoteRunProcess\"\>", 
   ",", "\<\"RemovalConditions\"\>", ",", "\<\"Remove\"\>", 
   ",", "\<\"RemoveAlphaChannel\"\>", ",", "\<\"RemoveAudioStream\"\>", 
   ",", "\<\"RemoveBackground\"\>", ",", "\<\"RemoveChannelListener\"\>", 
   ",", "\<\"RemoveChannelSubscribers\"\>", ",", "\<\"RemoveDiacritics\"\>", 
   ",", "\<\"RemoveInputStreamMethod\"\>", 
   ",", "\<\"RemoveOutputStreamMethod\"\>", ",", "\<\"RemoveUsers\"\>", 
   ",", "\<\"RemoveVideoStream\"\>", ",", "\<\"RenameDirectory\"\>", 
   ",", "\<\"RenameFile\"\>", ",", "\<\"RenderingOptions\"\>", 
   ",", "\<\"RenewalProcess\"\>", ",", "\<\"RenkoChart\"\>", 
   ",", "\<\"RepairMesh\"\>", ",", "\<\"Repeated\"\>", 
   ",", "\<\"RepeatedNull\"\>", ",", "\<\"RepeatedTiming\"\>", 
   ",", "\<\"RepeatingElement\"\>", ",", "\<\"Replace\"\>", 
   ",", "\<\"ReplaceAll\"\>", ",", "\<\"ReplaceImageValue\"\>", 
   ",", "\<\"ReplaceList\"\>", ",", "\<\"ReplacePart\"\>", 
   ",", "\<\"ReplacePixelValue\"\>", ",", "\<\"ReplaceRepeated\"\>", 
   ",", "\<\"ReplicateLayer\"\>", ",", "\<\"RequiredPhysicalQuantities\"\>", 
   ",", "\<\"Resampling\"\>", ",", "\<\"ResamplingAlgorithmData\"\>", 
   ",", "\<\"ResamplingMethod\"\>", ",", "\<\"Rescale\"\>", 
   ",", "\<\"RescalingTransform\"\>", ",", "\<\"ResetDirectory\"\>", 
   ",", "\<\"ReshapeLayer\"\>", ",", "\<\"Residue\"\>", 
   ",", "\<\"ResizeLayer\"\>", ",", "\<\"Resolve\"\>", 
   ",", "\<\"ResolveContextAliases\"\>", ",", "\<\"ResourceData\"\>", 
   ",", "\<\"ResourceFunction\"\>", ",", "\<\"ResourceObject\"\>", 
   ",", "\<\"ResourceRegister\"\>", ",", "\<\"ResourceRemove\"\>", 
   ",", "\<\"ResourceSearch\"\>", ",", "\<\"ResourceSubmit\"\>", 
   ",", "\<\"ResourceSystemBase\"\>", ",", "\<\"ResourceSystemPath\"\>", 
   ",", "\<\"ResourceUpdate\"\>", ",", "\<\"ResourceVersion\"\>", 
   ",", "\<\"ResponseForm\"\>", ",", "\<\"Rest\"\>", 
   ",", "\<\"RestartInterval\"\>", ",", "\<\"Restricted\"\>", 
   ",", "\<\"Resultant\"\>", ",", "\<\"Return\"\>", 
   ",", "\<\"ReturnExpressionPacket\"\>", ",", "\<\"ReturnPacket\"\>", 
   ",", "\<\"ReturnReceiptFunction\"\>", ",", "\<\"ReturnTextPacket\"\>", 
   ",", "\<\"Reverse\"\>", ",", "\<\"ReverseApplied\"\>", 
   ",", "\<\"ReverseBiorthogonalSplineWavelet\"\>", 
   ",", "\<\"ReverseElement\"\>", ",", "\<\"ReverseEquilibrium\"\>", 
   ",", "\<\"ReverseGraph\"\>", ",", "\<\"ReverseSort\"\>", 
   ",", "\<\"ReverseSortBy\"\>", ",", "\<\"ReverseUpEquilibrium\"\>", 
   ",", "\<\"RevolutionAxis\"\>", ",", "\<\"RevolutionPlot3D\"\>", 
   ",", "\<\"RiccatiSolve\"\>", ",", "\<\"RiceDistribution\"\>", 
   ",", "\<\"RidgeFilter\"\>", ",", "\<\"RiemannR\"\>", 
   ",", "\<\"RiemannSiegelTheta\"\>", ",", "\<\"RiemannSiegelZ\"\>", 
   ",", "\<\"RiemannXi\"\>", ",", "\<\"Riffle\"\>", ",", "\<\"Right\"\>", 
   ",", "\<\"RightArrow\"\>", ",", "\<\"RightArrowBar\"\>", 
   ",", "\<\"RightArrowLeftArrow\"\>", ",", "\<\"RightComposition\"\>", 
   ",", "\<\"RightCosetRepresentative\"\>", ",", "\<\"RightDownTeeVector\"\>",
    ",", "\<\"RightDownVector\"\>", ",", "\<\"RightDownVectorBar\"\>", 
   ",", "\<\"RightTee\"\>", ",", "\<\"RightTeeArrow\"\>", 
   ",", "\<\"RightTeeVector\"\>", ",", "\<\"RightTriangle\"\>", 
   ",", "\<\"RightTriangleBar\"\>", ",", "\<\"RightTriangleEqual\"\>", 
   ",", "\<\"RightUpDownVector\"\>", ",", "\<\"RightUpTeeVector\"\>", 
   ",", "\<\"RightUpVector\"\>", ",", "\<\"RightUpVectorBar\"\>", 
   ",", "\<\"RightVector\"\>", ",", "\<\"RightVectorBar\"\>", 
   ",", "\<\"RipleyK\"\>", ",", "\<\"RipleyRassonRegion\"\>", 
   ",", "\<\"RiskAchievementImportance\"\>", 
   ",", "\<\"RiskReductionImportance\"\>", 
   ",", "\<\"RobustConvexOptimization\"\>", 
   ",", "\<\"RogersTanimotoDissimilarity\"\>", 
   ",", "\<\"RollPitchYawAngles\"\>", ",", "\<\"RollPitchYawMatrix\"\>", 
   ",", "\<\"RomanNumeral\"\>", ",", "\<\"Root\"\>", 
   ",", "\<\"RootApproximant\"\>", ",", "\<\"RootIntervals\"\>", 
   ",", "\<\"RootLocusPlot\"\>", ",", "\<\"RootMeanSquare\"\>", 
   ",", "\<\"RootOfUnityQ\"\>", ",", "\<\"RootReduce\"\>", 
   ",", "\<\"RootSum\"\>", ",", "\<\"Roots\"\>", ",", "\<\"Rotate\"\>", 
   ",", "\<\"RotateLabel\"\>", ",", "\<\"RotateLeft\"\>", 
   ",", "\<\"RotateRight\"\>", ",", "\<\"RotationAction\"\>", 
   ",", "\<\"RotationMatrix\"\>", ",", "\<\"RotationTransform\"\>", 
   ",", "\<\"Round\"\>", ",", "\<\"RoundingRadius\"\>", ",", "\<\"Row\"\>", 
   ",", "\<\"RowAlignments\"\>", ",", "\<\"RowBox\"\>", 
   ",", "\<\"RowLines\"\>", ",", "\<\"RowMinHeight\"\>", 
   ",", "\<\"RowReduce\"\>", ",", "\<\"RowSpacings\"\>", 
   ",", "\<\"RowsEqual\"\>", ",", "\<\"RudinShapiro\"\>", 
   ",", "\<\"RudvalisGroupRu\"\>", ",", "\<\"Rule\"\>", 
   ",", "\<\"RuleDelayed\"\>", ",", "\<\"RulePlot\"\>", 
   ",", "\<\"RulerUnits\"\>", ",", "\<\"RulesTree\"\>", ",", "\<\"Run\"\>", 
   ",", "\<\"RunProcess\"\>", ",", "\<\"RunThrough\"\>", 
   ",", "\<\"RuntimeAttributes\"\>", ",", "\<\"RuntimeOptions\"\>", 
   ",", "\<\"RussellRaoDissimilarity\"\>", ",", "\<\"SARIMAProcess\"\>", 
   ",", "\<\"SARMAProcess\"\>", ",", "\<\"SASTriangle\"\>", 
   ",", "\<\"SSSTriangle\"\>", ",", "\<\"SameQ\"\>", ",", "\<\"SameTest\"\>", 
   ",", "\<\"SameTestProperties\"\>", ",", "\<\"SampleDepth\"\>", 
   ",", "\<\"SampleRate\"\>", ",", "\<\"SampledEntityClass\"\>", 
   ",", "\<\"SampledSoundFunction\"\>", ",", "\<\"SampledSoundList\"\>", 
   ",", "\<\"SamplingPeriod\"\>", ",", "\<\"SatelliteData\"\>", 
   ",", "\<\"SatisfiabilityCount\"\>", ",", "\<\"SatisfiabilityInstances\"\>",
    ",", "\<\"SatisfiableQ\"\>", ",", "\<\"Saturday\"\>", ",", "\<\"Save\"\>",
    ",", "\<\"SaveConnection\"\>", ",", "\<\"SaveDefinitions\"\>", 
   ",", "\<\"SavitzkyGolayMatrix\"\>", ",", "\<\"SawtoothWave\"\>", 
   ",", "\<\"Scale\"\>", ",", "\<\"ScaleDivisions\"\>", 
   ",", "\<\"ScaleOrigin\"\>", ",", "\<\"ScalePadding\"\>", 
   ",", "\<\"ScaleRangeStyle\"\>", ",", "\<\"ScaleRanges\"\>", 
   ",", "\<\"Scaled\"\>", ",", "\<\"ScalingFunctions\"\>", 
   ",", "\<\"ScalingMatrix\"\>", ",", "\<\"ScalingTransform\"\>", 
   ",", "\<\"Scan\"\>", ",", "\<\"ScheduledTask\"\>", 
   ",", "\<\"SchurDecomposition\"\>", ",", "\<\"ScientificForm\"\>", 
   ",", "\<\"ScientificNotationThreshold\"\>", ",", "\<\"ScorerGi\"\>", 
   ",", "\<\"ScorerGiPrime\"\>", ",", "\<\"ScorerHi\"\>", 
   ",", "\<\"ScorerHiPrime\"\>", ",", "\<\"ScreenStyleEnvironment\"\>", 
   ",", "\<\"ScriptBaselineShifts\"\>", ",", "\<\"ScriptMinSize\"\>", 
   ",", "\<\"ScriptSizeMultipliers\"\>", ",", "\<\"ScrollPosition\"\>", 
   ",", "\<\"Scrollbars\"\>", ",", "\<\"ScrollingOptions\"\>", 
   ",", "\<\"SearchAdjustment\"\>", ",", "\<\"SearchIndexObject\"\>", 
   ",", "\<\"SearchIndices\"\>", ",", "\<\"SearchQueryString\"\>", 
   ",", "\<\"SearchResultObject\"\>", ",", "\<\"Sec\"\>", ",", "\<\"Sech\"\>",
    ",", "\<\"SechDistribution\"\>", 
   ",", "\<\"SecondOrderConeOptimization\"\>", ",", "\<\"SectorChart\"\>", 
   ",", "\<\"SectorChart3D\"\>", ",", "\<\"SectorOrigin\"\>", 
   ",", "\<\"SectorSpacing\"\>", ",", "\<\"SecuredAuthenticationKey\"\>", 
   ",", "\<\"SecuredAuthenticationKeys\"\>", 
   ",", "\<\"SecurityCertificate\"\>", ",", "\<\"SeedRandom\"\>", 
   ",", "\<\"Select\"\>", ",", "\<\"SelectComponents\"\>", 
   ",", "\<\"SelectFirst\"\>", ",", "\<\"Selectable\"\>", 
   ",", "\<\"SelectedCells\"\>", ",", "\<\"SelectedNotebook\"\>", 
   ",", "\<\"SelectionCreateCell\"\>", ",", "\<\"SelectionEvaluate\"\>", 
   ",", "\<\"SelectionEvaluateCreateCell\"\>", ",", "\<\"SelectionMove\"\>", 
   ",", "\<\"SelfLoopStyle\"\>", ",", "\<\"SemanticImport\"\>", 
   ",", "\<\"SemanticImportString\"\>", ",", "\<\"SemanticInterpretation\"\>",
    ",", "\<\"SemialgebraicComponentInstances\"\>", 
   ",", "\<\"SemidefiniteOptimization\"\>", ",", "\<\"SendMail\"\>", 
   ",", "\<\"SendMessage\"\>", ",", "\<\"Sequence\"\>", 
   ",", "\<\"SequenceAlignment\"\>", ",", "\<\"SequenceCases\"\>", 
   ",", "\<\"SequenceCount\"\>", ",", "\<\"SequenceFold\"\>", 
   ",", "\<\"SequenceFoldList\"\>", ",", "\<\"SequenceHold\"\>", 
   ",", "\<\"SequenceIndicesLayer\"\>", ",", "\<\"SequenceLastLayer\"\>", 
   ",", "\<\"SequenceMostLayer\"\>", ",", "\<\"SequencePosition\"\>", 
   ",", "\<\"SequencePredict\"\>", ",", "\<\"SequencePredictorFunction\"\>", 
   ",", "\<\"SequenceReplace\"\>", ",", "\<\"SequenceRestLayer\"\>", 
   ",", "\<\"SequenceReverseLayer\"\>", ",", "\<\"SequenceSplit\"\>", 
   ",", "\<\"Series\"\>", ",", "\<\"SeriesCoefficient\"\>", 
   ",", "\<\"SeriesData\"\>", ",", "\<\"SeriesTermGoal\"\>", 
   ",", "\<\"ServiceConnect\"\>", ",", "\<\"ServiceDisconnect\"\>", 
   ",", "\<\"ServiceExecute\"\>", ",", "\<\"ServiceObject\"\>", 
   ",", "\<\"ServiceRequest\"\>", ",", "\<\"ServiceSubmit\"\>", 
   ",", "\<\"SessionSubmit\"\>", ",", "\<\"SessionTime\"\>", 
   ",", "\<\"Set\"\>", ",", "\<\"SetAccuracy\"\>", 
   ",", "\<\"SetAlphaChannel\"\>", ",", "\<\"SetAttributes\"\>", 
   ",", "\<\"SetCloudDirectory\"\>", ",", "\<\"SetCookies\"\>", 
   ",", "\<\"SetDelayed\"\>", ",", "\<\"SetDirectory\"\>", 
   ",", "\<\"SetEnvironment\"\>", ",", "\<\"SetFileDate\"\>", 
   ",", "\<\"SetFileFormatProperties\"\>", ",", "\<\"SetOptions\"\>", 
   ",", "\<\"SetPermissions\"\>", ",", "\<\"SetPrecision\"\>", 
   ",", "\<\"SetSelectedNotebook\"\>", ",", "\<\"SetSharedFunction\"\>", 
   ",", "\<\"SetSharedVariable\"\>", ",", "\<\"SetStreamPosition\"\>", 
   ",", "\<\"SetSystemModel\"\>", ",", "\<\"SetSystemOptions\"\>", 
   ",", "\<\"SetUsers\"\>", ",", "\<\"Setter\"\>", ",", "\<\"SetterBar\"\>", 
   ",", "\<\"Setting\"\>", ",", "\<\"Shallow\"\>", 
   ",", "\<\"ShannonWavelet\"\>", ",", "\<\"ShapiroWilkTest\"\>", 
   ",", "\<\"Share\"\>", ",", "\<\"SharingList\"\>", ",", "\<\"Sharpen\"\>", 
   ",", "\<\"ShearingMatrix\"\>", ",", "\<\"ShearingTransform\"\>", 
   ",", "\<\"ShellRegion\"\>", ",", "\<\"ShenCastanMatrix\"\>", 
   ",", "\<\"ShiftRegisterSequence\"\>", 
   ",", "\<\"ShiftedGompertzDistribution\"\>", ",", "\<\"Short\"\>", 
   ",", "\<\"ShortDownArrow\"\>", ",", "\<\"ShortLeftArrow\"\>", 
   ",", "\<\"ShortRightArrow\"\>", ",", "\<\"ShortTimeFourier\"\>", 
   ",", "\<\"ShortTimeFourierData\"\>", ",", "\<\"ShortUpArrow\"\>", 
   ",", "\<\"Shortest\"\>", ",", "\<\"ShortestPathFunction\"\>", 
   ",", "\<\"Show\"\>", ",", "\<\"ShowAutoSpellCheck\"\>", 
   ",", "\<\"ShowAutoStyles\"\>", ",", "\<\"ShowCellBracket\"\>", 
   ",", "\<\"ShowCellLabel\"\>", ",", "\<\"ShowCellTags\"\>", 
   ",", "\<\"ShowCursorTracker\"\>", ",", "\<\"ShowGroupOpener\"\>", 
   ",", "\<\"ShowPageBreaks\"\>", ",", "\<\"ShowSelection\"\>", 
   ",", "\<\"ShowSpecialCharacters\"\>", ",", "\<\"ShowStringCharacters\"\>", 
   ",", "\<\"ShrinkingDelay\"\>", ",", "\<\"SiderealTime\"\>", 
   ",", "\<\"SiegelTheta\"\>", ",", "\<\"SiegelTukeyTest\"\>", 
   ",", "\<\"SierpinskiCurve\"\>", ",", "\<\"SierpinskiMesh\"\>", 
   ",", "\<\"Sign\"\>", ",", "\<\"SignPadding\"\>", ",", "\<\"SignTest\"\>", 
   ",", "\<\"Signature\"\>", ",", "\<\"SignedRankTest\"\>", 
   ",", "\<\"SignedRegionDistance\"\>", ",", "\<\"SignificanceLevel\"\>", 
   ",", "\<\"SimilarityRules\"\>", ",", "\<\"SimpleGraph\"\>", 
   ",", "\<\"SimpleGraphQ\"\>", ",", "\<\"SimplePolygonQ\"\>", 
   ",", "\<\"SimplePolyhedronQ\"\>", ",", "\<\"Simplex\"\>", 
   ",", "\<\"Simplify\"\>", ",", "\<\"Sin\"\>", ",", "\<\"SinIntegral\"\>", 
   ",", "\<\"Sinc\"\>", ",", "\<\"SinghMaddalaDistribution\"\>", 
   ",", "\<\"SingleLetterItalics\"\>", 
   ",", "\<\"SingularValueDecomposition\"\>", 
   ",", "\<\"SingularValueList\"\>", ",", "\<\"SingularValuePlot\"\>", 
   ",", "\<\"Sinh\"\>", ",", "\<\"SinhIntegral\"\>", 
   ",", "\<\"SixJSymbol\"\>", ",", "\<\"Skeleton\"\>", 
   ",", "\<\"SkeletonTransform\"\>", ",", "\<\"SkellamDistribution\"\>", 
   ",", "\<\"SkewNormalDistribution\"\>", ",", "\<\"Skewness\"\>", 
   ",", "\<\"Skip\"\>", ",", "\<\"SliceContourPlot3D\"\>", 
   ",", "\<\"SliceDensityPlot3D\"\>", ",", "\<\"SliceDistribution\"\>", 
   ",", "\<\"SliceVectorPlot3D\"\>", ",", "\<\"SlideShowVideo\"\>", 
   ",", "\<\"SlideView\"\>", ",", "\<\"Slider\"\>", ",", "\<\"Slider2D\"\>", 
   ",", "\<\"Slot\"\>", ",", "\<\"SlotSequence\"\>", ",", "\<\"Small\"\>", 
   ",", "\<\"SmallCircle\"\>", ",", "\<\"Smaller\"\>", 
   ",", "\<\"SmithDecomposition\"\>", ",", "\<\"SmithDelayCompensator\"\>", 
   ",", "\<\"SmithWatermanSimilarity\"\>", 
   ",", "\<\"SmoothDensityHistogram\"\>", ",", "\<\"SmoothHistogram\"\>", 
   ",", "\<\"SmoothHistogram3D\"\>", ",", "\<\"SmoothKernelDistribution\"\>", 
   ",", "\<\"SmoothPointDensity\"\>", ",", "\<\"SnDispersion\"\>", 
   ",", "\<\"Snippet\"\>", ",", "\<\"SnippetsVideo\"\>", 
   ",", "\<\"SnubPolyhedron\"\>", ",", "\<\"SocketConnect\"\>", 
   ",", "\<\"SocketListen\"\>", ",", "\<\"SocketListener\"\>", 
   ",", "\<\"SocketObject\"\>", ",", "\<\"SocketOpen\"\>", 
   ",", "\<\"SocketReadMessage\"\>", ",", "\<\"SocketReadyQ\"\>", 
   ",", "\<\"SocketWaitAll\"\>", ",", "\<\"SocketWaitNext\"\>", 
   ",", "\<\"Sockets\"\>", ",", "\<\"SoftmaxLayer\"\>", 
   ",", "\<\"SokalSneathDissimilarity\"\>", ",", "\<\"SolarEclipse\"\>", 
   ",", "\<\"SolarSystemFeatureData\"\>", ",", "\<\"SolarTime\"\>", 
   ",", "\<\"SolidAngle\"\>", ",", "\<\"SolidBoundaryLoadValue\"\>", 
   ",", "\<\"SolidData\"\>", ",", "\<\"SolidDisplacementCondition\"\>", 
   ",", "\<\"SolidFixedCondition\"\>", 
   ",", "\<\"SolidMechanicsPDEComponent\"\>", 
   ",", "\<\"SolidMechanicsStrain\"\>", ",", "\<\"SolidMechanicsStress\"\>", 
   ",", "\<\"SolidRegionQ\"\>", ",", "\<\"Solve\"\>", 
   ",", "\<\"SolveAlways\"\>", ",", "\<\"SolveValues\"\>", 
   ",", "\<\"Sort\"\>", ",", "\<\"SortBy\"\>", ",", "\<\"SortedBy\"\>", 
   ",", "\<\"SortedEntityClass\"\>", ",", "\<\"Sound\"\>", 
   ",", "\<\"SoundNote\"\>", ",", "\<\"SoundVolume\"\>", 
   ",", "\<\"SourceLink\"\>", ",", "\<\"SourcePDETerm\"\>", 
   ",", "\<\"Sow\"\>", ",", "\<\"SpaceCurveData\"\>", ",", "\<\"Spacer\"\>", 
   ",", "\<\"Spacings\"\>", ",", "\<\"Span\"\>", ",", "\<\"SpanFromAbove\"\>",
    ",", "\<\"SpanFromBoth\"\>", ",", "\<\"SpanFromLeft\"\>", 
   ",", "\<\"SparseArray\"\>", ",", "\<\"SparseArrayQ\"\>", 
   ",", "\<\"SpatialBinnedPointData\"\>", 
   ",", "\<\"SpatialBoundaryCorrection\"\>", ",", "\<\"SpatialEstimate\"\>", 
   ",", "\<\"SpatialEstimatorFunction\"\>", 
   ",", "\<\"SpatialGraphDistribution\"\>", ",", "\<\"SpatialJ\"\>", 
   ",", "\<\"SpatialMedian\"\>", ",", "\<\"SpatialNoiseLevel\"\>", 
   ",", "\<\"SpatialObservationRegionQ\"\>", ",", "\<\"SpatialPointData\"\>", 
   ",", "\<\"SpatialPointSelect\"\>", ",", "\<\"SpatialRandomnessTest\"\>", 
   ",", "\<\"SpatialTransformationLayer\"\>", 
   ",", "\<\"SpatialTrendFunction\"\>", ",", "\<\"Speak\"\>", 
   ",", "\<\"SpeakerMatchQ\"\>", ",", "\<\"SpearmanRankTest\"\>", 
   ",", "\<\"SpearmanRho\"\>", ",", "\<\"SpeciesData\"\>", 
   ",", "\<\"SpecificityGoal\"\>", ",", "\<\"SpectralLineData\"\>", 
   ",", "\<\"Spectrogram\"\>", ",", "\<\"SpectrogramArray\"\>", 
   ",", "\<\"Specularity\"\>", ",", "\<\"SpeechCases\"\>", 
   ",", "\<\"SpeechInterpreter\"\>", ",", "\<\"SpeechRecognize\"\>", 
   ",", "\<\"SpeechSynthesize\"\>", ",", "\<\"SpellingCorrection\"\>", 
   ",", "\<\"SpellingCorrectionList\"\>", ",", "\<\"SpellingOptions\"\>", 
   ",", "\<\"Sphere\"\>", ",", "\<\"SpherePoints\"\>", 
   ",", "\<\"SphericalBesselJ\"\>", ",", "\<\"SphericalBesselY\"\>", 
   ",", "\<\"SphericalHankelH1\"\>", ",", "\<\"SphericalHankelH2\"\>", 
   ",", "\<\"SphericalHarmonicY\"\>", ",", "\<\"SphericalPlot3D\"\>", 
   ",", "\<\"SphericalRegion\"\>", ",", "\<\"SphericalShell\"\>", 
   ",", "\<\"SpheroidalEigenvalue\"\>", 
   ",", "\<\"SpheroidalJoiningFactor\"\>", ",", "\<\"SpheroidalPS\"\>", 
   ",", "\<\"SpheroidalPSPrime\"\>", ",", "\<\"SpheroidalQS\"\>", 
   ",", "\<\"SpheroidalQSPrime\"\>", ",", "\<\"SpheroidalRadialFactor\"\>", 
   ",", "\<\"SpheroidalS1\"\>", ",", "\<\"SpheroidalS1Prime\"\>", 
   ",", "\<\"SpheroidalS2\"\>", ",", "\<\"SpheroidalS2Prime\"\>", 
   ",", "\<\"Splice\"\>", ",", "\<\"SplicedDistribution\"\>", 
   ",", "\<\"SplineClosed\"\>", ",", "\<\"SplineDegree\"\>", 
   ",", "\<\"SplineKnots\"\>", ",", "\<\"SplineWeights\"\>", 
   ",", "\<\"Split\"\>", ",", "\<\"SplitBy\"\>", ",", "\<\"SpokenString\"\>", 
   ",", "\<\"SpotLight\"\>", ",", "\<\"Sqrt\"\>", ",", "\<\"SqrtBox\"\>", 
   ",", "\<\"SqrtBoxOptions\"\>", ",", "\<\"Square\"\>", 
   ",", "\<\"SquareFreeQ\"\>", ",", "\<\"SquareIntersection\"\>", 
   ",", "\<\"SquareMatrixQ\"\>", ",", "\<\"SquareRepeatingElement\"\>", 
   ",", "\<\"SquareSubset\"\>", ",", "\<\"SquareSubsetEqual\"\>", 
   ",", "\<\"SquareSuperset\"\>", ",", "\<\"SquareSupersetEqual\"\>", 
   ",", "\<\"SquareUnion\"\>", ",", "\<\"SquareWave\"\>", 
   ",", "\<\"SquaredEuclideanDistance\"\>", ",", "\<\"SquaresR\"\>", 
   ",", "\<\"StabilityMargins\"\>", ",", "\<\"StabilityMarginsStyle\"\>", 
   ",", "\<\"StableDistribution\"\>", ",", "\<\"Stack\"\>", 
   ",", "\<\"StackBegin\"\>", ",", "\<\"StackComplete\"\>", 
   ",", "\<\"StackInhibit\"\>", ",", "\<\"StackedDateListPlot\"\>", 
   ",", "\<\"StackedListPlot\"\>", ",", "\<\"StadiumShape\"\>", 
   ",", "\<\"StandardAtmosphereData\"\>", ",", "\<\"StandardDeviation\"\>", 
   ",", "\<\"StandardDeviationFilter\"\>", ",", "\<\"StandardForm\"\>", 
   ",", "\<\"StandardOceanData\"\>", ",", "\<\"Standardize\"\>", 
   ",", "\<\"Standardized\"\>", ",", "\<\"StandbyDistribution\"\>", 
   ",", "\<\"Star\"\>", ",", "\<\"StarClusterData\"\>", 
   ",", "\<\"StarData\"\>", ",", "\<\"StarGraph\"\>", 
   ",", "\<\"StartExternalSession\"\>", ",", "\<\"StartOfLine\"\>", 
   ",", "\<\"StartOfString\"\>", ",", "\<\"StartProcess\"\>", 
   ",", "\<\"StartWebSession\"\>", ",", "\<\"StartingStepSize\"\>", 
   ",", "\<\"StateFeedbackGains\"\>", ",", "\<\"StateOutputEstimator\"\>", 
   ",", "\<\"StateResponse\"\>", ",", "\<\"StateSpaceModel\"\>", 
   ",", "\<\"StateSpaceRealization\"\>", ",", "\<\"StateSpaceTransform\"\>", 
   ",", "\<\"StateTransformationLinearize\"\>", 
   ",", "\<\"StationaryDistribution\"\>", 
   ",", "\<\"StationaryWaveletPacketTransform\"\>", 
   ",", "\<\"StationaryWaveletTransform\"\>", ",", "\<\"StatusArea\"\>", 
   ",", "\<\"StatusCentrality\"\>", ",", "\<\"StepMonitor\"\>", 
   ",", "\<\"StereochemistryElements\"\>", ",", "\<\"StieltjesGamma\"\>", 
   ",", "\<\"StippleShading\"\>", ",", "\<\"StirlingS1\"\>", 
   ",", "\<\"StirlingS2\"\>", ",", "\<\"StoppingPowerData\"\>", 
   ",", "\<\"StrataVariables\"\>", ",", "\<\"StratonovichProcess\"\>", 
   ",", "\<\"StraussHardcorePointProcess\"\>", 
   ",", "\<\"StraussPointProcess\"\>", ",", "\<\"StreamColorFunction\"\>", 
   ",", "\<\"StreamColorFunctionScaling\"\>", 
   ",", "\<\"StreamDensityPlot\"\>", ",", "\<\"StreamMarkers\"\>", 
   ",", "\<\"StreamPlot\"\>", ",", "\<\"StreamPlot3D\"\>", 
   ",", "\<\"StreamPoints\"\>", ",", "\<\"StreamPosition\"\>", 
   ",", "\<\"StreamScale\"\>", ",", "\<\"StreamStyle\"\>", 
   ",", "\<\"Streams\"\>", ",", "\<\"StrictInequalities\"\>", 
   ",", "\<\"String\"\>", ",", "\<\"StringCases\"\>", 
   ",", "\<\"StringContainsQ\"\>", ",", "\<\"StringCount\"\>", 
   ",", "\<\"StringDelete\"\>", ",", "\<\"StringDrop\"\>", 
   ",", "\<\"StringEndsQ\"\>", ",", "\<\"StringExpression\"\>", 
   ",", "\<\"StringExtract\"\>", ",", "\<\"StringForm\"\>", 
   ",", "\<\"StringFormat\"\>", ",", "\<\"StringFormatQ\"\>", 
   ",", "\<\"StringFreeQ\"\>", ",", "\<\"StringInsert\"\>", 
   ",", "\<\"StringJoin\"\>", ",", "\<\"StringLength\"\>", 
   ",", "\<\"StringMatchQ\"\>", ",", "\<\"StringPadLeft\"\>", 
   ",", "\<\"StringPadRight\"\>", ",", "\<\"StringPart\"\>", 
   ",", "\<\"StringPartition\"\>", ",", "\<\"StringPosition\"\>", 
   ",", "\<\"StringQ\"\>", ",", "\<\"StringRepeat\"\>", 
   ",", "\<\"StringReplace\"\>", ",", "\<\"StringReplaceList\"\>", 
   ",", "\<\"StringReplacePart\"\>", ",", "\<\"StringReverse\"\>", 
   ",", "\<\"StringRiffle\"\>", ",", "\<\"StringRotateLeft\"\>", 
   ",", "\<\"StringRotateRight\"\>", ",", "\<\"StringSkeleton\"\>", 
   ",", "\<\"StringSplit\"\>", ",", "\<\"StringStartsQ\"\>", 
   ",", "\<\"StringTake\"\>", ",", "\<\"StringTakeDrop\"\>", 
   ",", "\<\"StringTemplate\"\>", ",", "\<\"StringToByteArray\"\>", 
   ",", "\<\"StringToStream\"\>", ",", "\<\"StringTrim\"\>", 
   ",", "\<\"StripBoxes\"\>", ",", "\<\"StripOnInput\"\>", 
   ",", "\<\"StripWrapperBoxes\"\>", ",", "\<\"StructuralImportance\"\>", 
   ",", "\<\"StructuredSelection\"\>", ",", "\<\"StruveH\"\>", 
   ",", "\<\"StruveL\"\>", ",", "\<\"Stub\"\>", 
   ",", "\<\"StudentTDistribution\"\>", ",", "\<\"Style\"\>", 
   ",", "\<\"StyleBox\"\>", ",", "\<\"StyleData\"\>", 
   ",", "\<\"StyleDefinitions\"\>", ",", "\<\"StyleHints\"\>", 
   ",", "\<\"SubMinus\"\>", ",", "\<\"SubPlus\"\>", ",", "\<\"SubStar\"\>", 
   ",", "\<\"SubValues\"\>", ",", "\<\"Subdivide\"\>", 
   ",", "\<\"Subfactorial\"\>", ",", "\<\"Subgraph\"\>", 
   ",", "\<\"SubresultantPolynomialRemainders\"\>", 
   ",", "\<\"SubresultantPolynomials\"\>", ",", "\<\"Subresultants\"\>", 
   ",", "\<\"Subscript\"\>", ",", "\<\"SubscriptBox\"\>", 
   ",", "\<\"SubscriptBoxOptions\"\>", ",", "\<\"Subsequences\"\>", 
   ",", "\<\"Subset\"\>", ",", "\<\"SubsetCases\"\>", 
   ",", "\<\"SubsetCount\"\>", ",", "\<\"SubsetEqual\"\>", 
   ",", "\<\"SubsetMap\"\>", ",", "\<\"SubsetPosition\"\>", 
   ",", "\<\"SubsetQ\"\>", ",", "\<\"SubsetReplace\"\>", 
   ",", "\<\"Subsets\"\>", ",", "\<\"SubstitutionSystem\"\>", 
   ",", "\<\"Subsuperscript\"\>", ",", "\<\"SubsuperscriptBox\"\>", 
   ",", "\<\"SubsuperscriptBoxOptions\"\>", ",", "\<\"SubtitleEncoding\"\>", 
   ",", "\<\"SubtitleTrackSelection\"\>", ",", "\<\"Subtract\"\>", 
   ",", "\<\"SubtractFrom\"\>", ",", "\<\"SubtractSides\"\>", 
   ",", "\<\"Succeeds\"\>", ",", "\<\"SucceedsEqual\"\>", 
   ",", "\<\"SucceedsSlantEqual\"\>", ",", "\<\"SucceedsTilde\"\>", 
   ",", "\<\"Success\"\>", ",", "\<\"SuchThat\"\>", ",", "\<\"Sum\"\>", 
   ",", "\<\"SumConvergence\"\>", ",", "\<\"SummationLayer\"\>", 
   ",", "\<\"SunPosition\"\>", ",", "\<\"Sunday\"\>", ",", "\<\"Sunrise\"\>", 
   ",", "\<\"Sunset\"\>", ",", "\<\"SuperDagger\"\>", 
   ",", "\<\"SuperMinus\"\>", ",", "\<\"SuperPlus\"\>", 
   ",", "\<\"SuperStar\"\>", ",", "\<\"SupernovaData\"\>", 
   ",", "\<\"Superscript\"\>", ",", "\<\"SuperscriptBox\"\>", 
   ",", "\<\"SuperscriptBoxOptions\"\>", ",", "\<\"Superset\"\>", 
   ",", "\<\"SupersetEqual\"\>", ",", "\<\"Surd\"\>", ",", "\<\"SurdForm\"\>",
    ",", "\<\"SurfaceArea\"\>", ",", "\<\"SurfaceData\"\>", 
   ",", "\<\"SurvivalDistribution\"\>", ",", "\<\"SurvivalFunction\"\>", 
   ",", "\<\"SurvivalModel\"\>", ",", "\<\"SurvivalModelFit\"\>", 
   ",", "\<\"SuzukiDistribution\"\>", ",", "\<\"SuzukiGroupSuz\"\>", 
   ",", "\<\"SwatchLegend\"\>", ",", "\<\"Switch\"\>", ",", "\<\"Symbol\"\>", 
   ",", "\<\"SymbolName\"\>", ",", "\<\"SymletWavelet\"\>", 
   ",", "\<\"Symmetric\"\>", ",", "\<\"SymmetricGroup\"\>", 
   ",", "\<\"SymmetricKey\"\>", ",", "\<\"SymmetricMatrixQ\"\>", 
   ",", "\<\"SymmetricPolynomial\"\>", ",", "\<\"SymmetricReduction\"\>", 
   ",", "\<\"Symmetrize\"\>", ",", "\<\"SymmetrizedArray\"\>", 
   ",", "\<\"SymmetrizedArrayRules\"\>", 
   ",", "\<\"SymmetrizedDependentComponents\"\>", 
   ",", "\<\"SymmetrizedIndependentComponents\"\>", 
   ",", "\<\"SymmetrizedReplacePart\"\>", 
   ",", "\<\"SynchronousInitialization\"\>", 
   ",", "\<\"SynchronousUpdating\"\>", ",", "\<\"Synonyms\"\>", 
   ",", "\<\"SyntaxForm\"\>", ",", "\<\"SyntaxInformation\"\>", 
   ",", "\<\"SyntaxLength\"\>", ",", "\<\"SyntaxPacket\"\>", 
   ",", "\<\"SyntaxQ\"\>", ",", "\<\"SynthesizeMissingValues\"\>", 
   ",", "\<\"SystemCredential\"\>", ",", "\<\"SystemCredentialData\"\>", 
   ",", "\<\"SystemCredentialKey\"\>", ",", "\<\"SystemCredentialKeys\"\>", 
   ",", "\<\"SystemCredentialStoreObject\"\>", 
   ",", "\<\"SystemDialogInput\"\>", ",", "\<\"SystemInformation\"\>", 
   ",", "\<\"SystemInstall\"\>", ",", "\<\"SystemModel\"\>", 
   ",", "\<\"SystemModelExamples\"\>", ",", "\<\"SystemModelLinearize\"\>", 
   ",", "\<\"SystemModelParametricSimulate\"\>", 
   ",", "\<\"SystemModelPlot\"\>", 
   ",", "\<\"SystemModelProgressReporting\"\>", 
   ",", "\<\"SystemModelReliability\"\>", ",", "\<\"SystemModelSimulate\"\>", 
   ",", "\<\"SystemModelSimulateSensitivity\"\>", 
   ",", "\<\"SystemModelSimulationData\"\>", ",", "\<\"SystemModeler\"\>", 
   ",", "\<\"SystemModels\"\>", ",", "\<\"SystemOpen\"\>", 
   ",", "\<\"SystemOptions\"\>", ",", "\<\"SystemProcessData\"\>", 
   ",", "\<\"SystemProcesses\"\>", ",", "\<\"SystemsConnectionsModel\"\>", 
   ",", "\<\"SystemsModelControllerData\"\>", 
   ",", "\<\"SystemsModelDelay\"\>", 
   ",", "\<\"SystemsModelDelayApproximate\"\>", 
   ",", "\<\"SystemsModelDelete\"\>", ",", "\<\"SystemsModelDimensions\"\>", 
   ",", "\<\"SystemsModelExtract\"\>", 
   ",", "\<\"SystemsModelFeedbackConnect\"\>", 
   ",", "\<\"SystemsModelLabels\"\>", ",", "\<\"SystemsModelLinearity\"\>", 
   ",", "\<\"SystemsModelMerge\"\>", ",", "\<\"SystemsModelOrder\"\>", 
   ",", "\<\"SystemsModelParallelConnect\"\>", 
   ",", "\<\"SystemsModelSeriesConnect\"\>", 
   ",", "\<\"SystemsModelStateFeedbackConnect\"\>", 
   ",", "\<\"SystemsModelVectorRelativeOrders\"\>", ",", "\<\"TTest\"\>", 
   ",", "\<\"TabView\"\>", ",", "\<\"Table\"\>", 
   ",", "\<\"TableAlignments\"\>", ",", "\<\"TableDepth\"\>", 
   ",", "\<\"TableDirections\"\>", ",", "\<\"TableForm\"\>", 
   ",", "\<\"TableHeadings\"\>", ",", "\<\"TableSpacing\"\>", 
   ",", "\<\"TableView\"\>", ",", "\<\"TagBox\"\>", 
   ",", "\<\"TagBoxOptions\"\>", ",", "\<\"TagSet\"\>", 
   ",", "\<\"TagSetDelayed\"\>", ",", "\<\"TagUnset\"\>", 
   ",", "\<\"TaggingRules\"\>", ",", "\<\"Take\"\>", ",", "\<\"TakeDrop\"\>", 
   ",", "\<\"TakeLargest\"\>", ",", "\<\"TakeLargestBy\"\>", 
   ",", "\<\"TakeList\"\>", ",", "\<\"TakeSmallest\"\>", 
   ",", "\<\"TakeSmallestBy\"\>", ",", "\<\"TakeWhile\"\>", 
   ",", "\<\"Tally\"\>", ",", "\<\"Tan\"\>", ",", "\<\"Tanh\"\>", 
   ",", "\<\"TargetDevice\"\>", ",", "\<\"TargetFunctions\"\>", 
   ",", "\<\"TargetSystem\"\>", ",", "\<\"TargetUnits\"\>", 
   ",", "\<\"TaskAbort\"\>", ",", "\<\"TaskExecute\"\>", 
   ",", "\<\"TaskObject\"\>", ",", "\<\"TaskRemove\"\>", 
   ",", "\<\"TaskResume\"\>", ",", "\<\"TaskSuspend\"\>", 
   ",", "\<\"TaskWait\"\>", ",", "\<\"Tasks\"\>", ",", "\<\"TautologyQ\"\>", 
   ",", "\<\"TeXForm\"\>", ",", "\<\"TelegraphProcess\"\>", 
   ",", "\<\"TemplateApply\"\>", ",", "\<\"TemplateBox\"\>", 
   ",", "\<\"TemplateBoxOptions\"\>", ",", "\<\"TemplateExpression\"\>", 
   ",", "\<\"TemplateIf\"\>", ",", "\<\"TemplateObject\"\>", 
   ",", "\<\"TemplateSequence\"\>", ",", "\<\"TemplateSlot\"\>", 
   ",", "\<\"TemplateWith\"\>", ",", "\<\"TemporalData\"\>", 
   ",", "\<\"TemporalRegularity\"\>", ",", "\<\"Temporary\"\>", 
   ",", "\<\"TensorContract\"\>", ",", "\<\"TensorDimensions\"\>", 
   ",", "\<\"TensorExpand\"\>", ",", "\<\"TensorProduct\"\>", 
   ",", "\<\"TensorRank\"\>", ",", "\<\"TensorReduce\"\>", 
   ",", "\<\"TensorSymmetry\"\>", ",", "\<\"TensorTranspose\"\>", 
   ",", "\<\"TensorWedge\"\>", ",", "\<\"TestID\"\>", 
   ",", "\<\"TestReport\"\>", ",", "\<\"TestReportObject\"\>", 
   ",", "\<\"TestResultObject\"\>", ",", "\<\"Tetrahedron\"\>", 
   ",", "\<\"Text\"\>", ",", "\<\"TextAlignment\"\>", 
   ",", "\<\"TextCases\"\>", ",", "\<\"TextCell\"\>", 
   ",", "\<\"TextClipboardType\"\>", ",", "\<\"TextContents\"\>", 
   ",", "\<\"TextData\"\>", ",", "\<\"TextElement\"\>", 
   ",", "\<\"TextGrid\"\>", ",", "\<\"TextJustification\"\>", 
   ",", "\<\"TextPacket\"\>", ",", "\<\"TextPosition\"\>", 
   ",", "\<\"TextRecognize\"\>", ",", "\<\"TextSearch\"\>", 
   ",", "\<\"TextSearchReport\"\>", ",", "\<\"TextSentences\"\>", 
   ",", "\<\"TextString\"\>", ",", "\<\"TextStructure\"\>", 
   ",", "\<\"TextTranslation\"\>", ",", "\<\"TextWords\"\>", 
   ",", "\<\"Texture\"\>", ",", "\<\"TextureCoordinateFunction\"\>", 
   ",", "\<\"TextureCoordinateScaling\"\>", ",", "\<\"Therefore\"\>", 
   ",", "\<\"ThermodynamicData\"\>", ",", "\<\"ThermometerGauge\"\>", 
   ",", "\<\"Thick\"\>", ",", "\<\"Thickness\"\>", ",", "\<\"Thin\"\>", 
   ",", "\<\"Thinning\"\>", ",", "\<\"ThomasPointProcess\"\>", 
   ",", "\<\"ThompsonGroupTh\"\>", ",", "\<\"Thread\"\>", 
   ",", "\<\"ThreadingLayer\"\>", ",", "\<\"ThreeJSymbol\"\>", 
   ",", "\<\"Threshold\"\>", ",", "\<\"Through\"\>", ",", "\<\"Throw\"\>", 
   ",", "\<\"ThueMorse\"\>", ",", "\<\"Thumbnail\"\>", 
   ",", "\<\"Thursday\"\>", ",", "\<\"TickDirection\"\>", 
   ",", "\<\"TickLabelOrientation\"\>", ",", "\<\"TickLabelPositioning\"\>", 
   ",", "\<\"TickLabels\"\>", ",", "\<\"TickLengths\"\>", 
   ",", "\<\"TickPositions\"\>", ",", "\<\"Ticks\"\>", 
   ",", "\<\"TicksStyle\"\>", ",", "\<\"TideData\"\>", ",", "\<\"Tilde\"\>", 
   ",", "\<\"TildeEqual\"\>", ",", "\<\"TildeFullEqual\"\>", 
   ",", "\<\"TildeTilde\"\>", ",", "\<\"TimeConstrained\"\>", 
   ",", "\<\"TimeConstraint\"\>", ",", "\<\"TimeDirection\"\>", 
   ",", "\<\"TimeFormat\"\>", ",", "\<\"TimeGoal\"\>", 
   ",", "\<\"TimeObject\"\>", ",", "\<\"TimeObjectQ\"\>", 
   ",", "\<\"TimeRemaining\"\>", ",", "\<\"TimeSeries\"\>", 
   ",", "\<\"TimeSeriesAggregate\"\>", ",", "\<\"TimeSeriesForecast\"\>", 
   ",", "\<\"TimeSeriesInsert\"\>", ",", "\<\"TimeSeriesInvertibility\"\>", 
   ",", "\<\"TimeSeriesMap\"\>", ",", "\<\"TimeSeriesMapThread\"\>", 
   ",", "\<\"TimeSeriesModel\"\>", ",", "\<\"TimeSeriesModelFit\"\>", 
   ",", "\<\"TimeSeriesResample\"\>", ",", "\<\"TimeSeriesRescale\"\>", 
   ",", "\<\"TimeSeriesShift\"\>", ",", "\<\"TimeSeriesThread\"\>", 
   ",", "\<\"TimeSeriesWindow\"\>", ",", "\<\"TimeSystem\"\>", 
   ",", "\<\"TimeSystemConvert\"\>", ",", "\<\"TimeUsed\"\>", 
   ",", "\<\"TimeValue\"\>", ",", "\<\"TimeZone\"\>", 
   ",", "\<\"TimeZoneConvert\"\>", ",", "\<\"TimeZoneOffset\"\>", 
   ",", "\<\"TimelinePlot\"\>", ",", "\<\"Times\"\>", ",", "\<\"TimesBy\"\>", 
   ",", "\<\"Timing\"\>", ",", "\<\"Tiny\"\>", ",", "\<\"TitsGroupT\"\>", 
   ",", "\<\"ToBoxes\"\>", ",", "\<\"ToCharacterCode\"\>", 
   ",", "\<\"ToContinuousTimeModel\"\>", ",", "\<\"ToDiscreteTimeModel\"\>", 
   ",", "\<\"ToEntity\"\>", ",", "\<\"ToExpression\"\>", 
   ",", "\<\"ToInvertibleTimeSeries\"\>", ",", "\<\"ToLowerCase\"\>", 
   ",", "\<\"ToNumberField\"\>", ",", "\<\"ToPolarCoordinates\"\>", 
   ",", "\<\"ToRadicals\"\>", ",", "\<\"ToRules\"\>", 
   ",", "\<\"ToSphericalCoordinates\"\>", ",", "\<\"ToString\"\>", 
   ",", "\<\"ToUpperCase\"\>", ",", "\<\"Today\"\>", 
   ",", "\<\"ToeplitzMatrix\"\>", ",", "\<\"Together\"\>", 
   ",", "\<\"Toggler\"\>", ",", "\<\"TogglerBar\"\>", 
   ",", "\<\"TokenWords\"\>", ",", "\<\"Tolerance\"\>", 
   ",", "\<\"Tomorrow\"\>", ",", "\<\"Tooltip\"\>", 
   ",", "\<\"TooltipDelay\"\>", ",", "\<\"TooltipStyle\"\>", 
   ",", "\<\"ToonShading\"\>", ",", "\<\"Top\"\>", 
   ",", "\<\"TopHatTransform\"\>", ",", "\<\"TopologicalSort\"\>", 
   ",", "\<\"Torus\"\>", ",", "\<\"Total\"\>", ",", "\<\"TotalLayer\"\>", 
   ",", "\<\"TotalVariationFilter\"\>", ",", "\<\"TotalWidth\"\>", 
   ",", "\<\"TouchPosition\"\>", ",", "\<\"TouchscreenAutoZoom\"\>", 
   ",", "\<\"TouchscreenControlPlacement\"\>", ",", "\<\"TourVideo\"\>", 
   ",", "\<\"Tr\"\>", ",", "\<\"Trace\"\>", ",", "\<\"TraceAbove\"\>", 
   ",", "\<\"TraceBackward\"\>", ",", "\<\"TraceDepth\"\>", 
   ",", "\<\"TraceDialog\"\>", ",", "\<\"TraceForward\"\>", 
   ",", "\<\"TraceOff\"\>", ",", "\<\"TraceOn\"\>", 
   ",", "\<\"TraceOriginal\"\>", ",", "\<\"TracePrint\"\>", 
   ",", "\<\"TraceScan\"\>", ",", "\<\"TrackedSymbols\"\>", 
   ",", "\<\"TrackingFunction\"\>", ",", "\<\"TracyWidomDistribution\"\>", 
   ",", "\<\"TradingChart\"\>", ",", "\<\"TraditionalForm\"\>", 
   ",", "\<\"TrainImageContentDetector\"\>", 
   ",", "\<\"TrainTextContentDetector\"\>", 
   ",", "\<\"TrainingProgressCheckpointing\"\>", 
   ",", "\<\"TrainingProgressFunction\"\>", 
   ",", "\<\"TrainingProgressMeasurements\"\>", 
   ",", "\<\"TrainingProgressReporting\"\>", 
   ",", "\<\"TrainingStoppingCriterion\"\>", 
   ",", "\<\"TrainingUpdateSchedule\"\>", 
   ",", "\<\"TransferFunctionCancel\"\>", 
   ",", "\<\"TransferFunctionExpand\"\>", 
   ",", "\<\"TransferFunctionFactor\"\>", 
   ",", "\<\"TransferFunctionModel\"\>", ",", "\<\"TransferFunctionPoles\"\>",
    ",", "\<\"TransferFunctionTransform\"\>", 
   ",", "\<\"TransferFunctionZeros\"\>", ",", "\<\"TransformationClass\"\>", 
   ",", "\<\"TransformationFunction\"\>", 
   ",", "\<\"TransformationFunctions\"\>", 
   ",", "\<\"TransformationMatrix\"\>", 
   ",", "\<\"TransformedDistribution\"\>", ",", "\<\"TransformedField\"\>", 
   ",", "\<\"TransformedProcess\"\>", ",", "\<\"TransformedRegion\"\>", 
   ",", "\<\"TransitionDirection\"\>", ",", "\<\"TransitionDuration\"\>", 
   ",", "\<\"TransitionEffect\"\>", ",", "\<\"TransitiveClosureGraph\"\>", 
   ",", "\<\"TransitiveReductionGraph\"\>", ",", "\<\"Translate\"\>", 
   ",", "\<\"TranslationOptions\"\>", ",", "\<\"TranslationTransform\"\>", 
   ",", "\<\"Transliterate\"\>", ",", "\<\"Transparent\"\>", 
   ",", "\<\"Transpose\"\>", ",", "\<\"TransposeLayer\"\>", 
   ",", "\<\"TravelDirections\"\>", ",", "\<\"TravelDirectionsData\"\>", 
   ",", "\<\"TravelDistance\"\>", ",", "\<\"TravelDistanceList\"\>", 
   ",", "\<\"TravelMethod\"\>", ",", "\<\"TravelTime\"\>", 
   ",", "\<\"Tree\"\>", ",", "\<\"TreeCases\"\>", ",", "\<\"TreeChildren\"\>",
    ",", "\<\"TreeCount\"\>", ",", "\<\"TreeData\"\>", 
   ",", "\<\"TreeDelete\"\>", ",", "\<\"TreeDepth\"\>", 
   ",", "\<\"TreeElementLabel\"\>", ",", "\<\"TreeElementStyle\"\>", 
   ",", "\<\"TreeExpression\"\>", ",", "\<\"TreeExtract\"\>", 
   ",", "\<\"TreeFold\"\>", ",", "\<\"TreeForm\"\>", ",", "\<\"TreeGraph\"\>",
    ",", "\<\"TreeGraphQ\"\>", ",", "\<\"TreeInsert\"\>", 
   ",", "\<\"TreeLayout\"\>", ",", "\<\"TreeLeafQ\"\>", 
   ",", "\<\"TreeLeaves\"\>", ",", "\<\"TreeLevel\"\>", 
   ",", "\<\"TreeMap\"\>", ",", "\<\"TreeMapAt\"\>", 
   ",", "\<\"TreeOutline\"\>", ",", "\<\"TreePlot\"\>", 
   ",", "\<\"TreePosition\"\>", ",", "\<\"TreeQ\"\>", 
   ",", "\<\"TreeReplacePart\"\>", ",", "\<\"TreeRules\"\>", 
   ",", "\<\"TreeScan\"\>", ",", "\<\"TreeSelect\"\>", 
   ",", "\<\"TreeSize\"\>", ",", "\<\"TreeTraversalOrder\"\>", 
   ",", "\<\"TrendStyle\"\>", ",", "\<\"Triangle\"\>", 
   ",", "\<\"TriangleCenter\"\>", ",", "\<\"TriangleConstruct\"\>", 
   ",", "\<\"TriangleMeasurement\"\>", ",", "\<\"TriangleWave\"\>", 
   ",", "\<\"TriangularDistribution\"\>", ",", "\<\"TriangulateMesh\"\>", 
   ",", "\<\"Trig\"\>", ",", "\<\"TrigExpand\"\>", ",", "\<\"TrigFactor\"\>", 
   ",", "\<\"TrigFactorList\"\>", ",", "\<\"TrigReduce\"\>", 
   ",", "\<\"TrigToExp\"\>", ",", "\<\"Trigger\"\>", 
   ",", "\<\"TrimmedMean\"\>", ",", "\<\"TrimmedVariance\"\>", 
   ",", "\<\"TropicalStormData\"\>", ",", "\<\"True\"\>", 
   ",", "\<\"TrueQ\"\>", ",", "\<\"TruncatedDistribution\"\>", 
   ",", "\<\"TruncatedPolyhedron\"\>", 
   ",", "\<\"TsallisQExponentialDistribution\"\>", 
   ",", "\<\"TsallisQGaussianDistribution\"\>", ",", "\<\"Tube\"\>", 
   ",", "\<\"Tuesday\"\>", ",", "\<\"TukeyLambdaDistribution\"\>", 
   ",", "\<\"TukeyWindow\"\>", ",", "\<\"TunnelData\"\>", 
   ",", "\<\"Tuples\"\>", ",", "\<\"TuranGraph\"\>", 
   ",", "\<\"TuringMachine\"\>", ",", "\<\"TuttePolynomial\"\>", 
   ",", "\<\"TwoWayRule\"\>", ",", "\<\"TypeSpecifier\"\>", 
   ",", "\<\"Typed\"\>", ",", "\<\"URL\"\>", ",", "\<\"URLBuild\"\>", 
   ",", "\<\"URLDecode\"\>", ",", "\<\"URLDispatcher\"\>", 
   ",", "\<\"URLDownload\"\>", ",", "\<\"URLDownloadSubmit\"\>", 
   ",", "\<\"URLEncode\"\>", ",", "\<\"URLExecute\"\>", 
   ",", "\<\"URLExpand\"\>", ",", "\<\"URLParse\"\>", 
   ",", "\<\"URLQueryDecode\"\>", ",", "\<\"URLQueryEncode\"\>", 
   ",", "\<\"URLRead\"\>", ",", "\<\"URLResponseTime\"\>", 
   ",", "\<\"URLShorten\"\>", ",", "\<\"URLSubmit\"\>", ",", "\<\"UnateQ\"\>",
    ",", "\<\"Uncompress\"\>", ",", "\<\"UnconstrainedParameters\"\>", 
   ",", "\<\"Undefined\"\>", ",", "\<\"UnderBar\"\>", 
   ",", "\<\"Underflow\"\>", ",", "\<\"Underlined\"\>", 
   ",", "\<\"Underoverscript\"\>", ",", "\<\"UnderoverscriptBox\"\>", 
   ",", "\<\"UnderoverscriptBoxOptions\"\>", ",", "\<\"Underscript\"\>", 
   ",", "\<\"UnderscriptBox\"\>", ",", "\<\"UnderscriptBoxOptions\"\>", 
   ",", "\<\"UnderseaFeatureData\"\>", ",", "\<\"UndirectedEdge\"\>", 
   ",", "\<\"UndirectedGraph\"\>", ",", "\<\"UndirectedGraphQ\"\>", 
   ",", "\<\"UndoOptions\"\>", ",", "\<\"UndoTrackedVariables\"\>", 
   ",", "\<\"Unequal\"\>", ",", "\<\"UnequalTo\"\>", 
   ",", "\<\"Unevaluated\"\>", ",", "\<\"UniformDistribution\"\>", 
   ",", "\<\"UniformGraphDistribution\"\>", ",", "\<\"UniformPolyhedron\"\>", 
   ",", "\<\"UniformSumDistribution\"\>", ",", "\<\"Uninstall\"\>", 
   ",", "\<\"Union\"\>", ",", "\<\"UnionPlus\"\>", 
   ",", "\<\"UnionedEntityClass\"\>", ",", "\<\"Unique\"\>", 
   ",", "\<\"UnitBox\"\>", ",", "\<\"UnitConvert\"\>", 
   ",", "\<\"UnitDimensions\"\>", ",", "\<\"UnitRootTest\"\>", 
   ",", "\<\"UnitSimplify\"\>", ",", "\<\"UnitStep\"\>", 
   ",", "\<\"UnitSystem\"\>", ",", "\<\"UnitTriangle\"\>", 
   ",", "\<\"UnitVector\"\>", ",", "\<\"UnitVectorLayer\"\>", 
   ",", "\<\"UnitaryMatrixQ\"\>", ",", "\<\"Unitize\"\>", 
   ",", "\<\"UnityDimensions\"\>", ",", "\<\"UniverseModelData\"\>", 
   ",", "\<\"UniversityData\"\>", ",", "\<\"UnixTime\"\>", 
   ",", "\<\"Unprotect\"\>", ",", "\<\"UnregisterExternalEvaluator\"\>", 
   ",", "\<\"UnsameQ\"\>", ",", "\<\"UnsavedVariables\"\>", 
   ",", "\<\"Unset\"\>", ",", "\<\"UnsetShared\"\>", ",", "\<\"UpArrow\"\>", 
   ",", "\<\"UpArrowBar\"\>", ",", "\<\"UpArrowDownArrow\"\>", 
   ",", "\<\"UpDownArrow\"\>", ",", "\<\"UpEquilibrium\"\>", 
   ",", "\<\"UpSet\"\>", ",", "\<\"UpSetDelayed\"\>", ",", "\<\"UpTee\"\>", 
   ",", "\<\"UpTeeArrow\"\>", ",", "\<\"UpTo\"\>", ",", "\<\"UpValues\"\>", 
   ",", "\<\"Update\"\>", ",", "\<\"UpdateInterval\"\>", 
   ",", "\<\"UpdatePacletSites\"\>", ",", "\<\"UpdateSearchIndex\"\>", 
   ",", "\<\"UpperCaseQ\"\>", ",", "\<\"UpperLeftArrow\"\>", 
   ",", "\<\"UpperRightArrow\"\>", ",", "\<\"UpperTriangularMatrixQ\"\>", 
   ",", "\<\"UpperTriangularize\"\>", ",", "\<\"Upsample\"\>", 
   ",", "\<\"UseEmbeddedLibrary\"\>", ",", "\<\"UsingFrontEnd\"\>", 
   ",", "\<\"UtilityFunction\"\>", ",", "\<\"ValenceErrorHandling\"\>", 
   ",", "\<\"ValenceFilling\"\>", ",", "\<\"ValidationLength\"\>", 
   ",", "\<\"ValidationSet\"\>", ",", "\<\"ValueDimensions\"\>", 
   ",", "\<\"ValuePreprocessingFunction\"\>", ",", "\<\"ValueQ\"\>", 
   ",", "\<\"Values\"\>", ",", "\<\"Variables\"\>", ",", "\<\"Variance\"\>", 
   ",", "\<\"VarianceEquivalenceTest\"\>", 
   ",", "\<\"VarianceEstimatorFunction\"\>", 
   ",", "\<\"VarianceGammaDistribution\"\>", 
   ",", "\<\"VarianceGammaPointProcess\"\>", ",", "\<\"VarianceTest\"\>", 
   ",", "\<\"VariogramFunction\"\>", ",", "\<\"VariogramModel\"\>", 
   ",", "\<\"VectorAngle\"\>", ",", "\<\"VectorAround\"\>", 
   ",", "\<\"VectorAspectRatio\"\>", ",", "\<\"VectorColorFunction\"\>", 
   ",", "\<\"VectorColorFunctionScaling\"\>", 
   ",", "\<\"VectorDensityPlot\"\>", ",", "\<\"VectorDisplacementPlot\"\>", 
   ",", "\<\"VectorDisplacementPlot3D\"\>", ",", "\<\"VectorGreater\"\>", 
   ",", "\<\"VectorGreaterEqual\"\>", ",", "\<\"VectorLess\"\>", 
   ",", "\<\"VectorLessEqual\"\>", ",", "\<\"VectorMarkers\"\>", 
   ",", "\<\"VectorPlot\"\>", ",", "\<\"VectorPlot3D\"\>", 
   ",", "\<\"VectorPoints\"\>", ",", "\<\"VectorQ\"\>", 
   ",", "\<\"VectorRange\"\>", ",", "\<\"VectorScaling\"\>", 
   ",", "\<\"VectorSizes\"\>", ",", "\<\"VectorStyle\"\>", 
   ",", "\<\"Vectors\"\>", ",", "\<\"Vee\"\>", ",", "\<\"Verbatim\"\>", 
   ",", "\<\"VerificationTest\"\>", ",", "\<\"VerifyConvergence\"\>", 
   ",", "\<\"VerifyDerivedKey\"\>", ",", "\<\"VerifyDigitalSignature\"\>", 
   ",", "\<\"VerifyFileSignature\"\>", ",", "\<\"VerifyInterpretation\"\>", 
   ",", "\<\"VerifySecurityCertificates\"\>", ",", "\<\"VerifySolutions\"\>", 
   ",", "\<\"VerifyTestAssumptions\"\>", ",", "\<\"VersionedPreferences\"\>", 
   ",", "\<\"VertexAdd\"\>", ",", "\<\"VertexCapacity\"\>", 
   ",", "\<\"VertexChromaticNumber\"\>", ",", "\<\"VertexColors\"\>", 
   ",", "\<\"VertexComponent\"\>", ",", "\<\"VertexConnectivity\"\>", 
   ",", "\<\"VertexContract\"\>", ",", "\<\"VertexCoordinates\"\>", 
   ",", "\<\"VertexCorrelationSimilarity\"\>", 
   ",", "\<\"VertexCosineSimilarity\"\>", ",", "\<\"VertexCount\"\>", 
   ",", "\<\"VertexCoverQ\"\>", ",", "\<\"VertexDataCoordinates\"\>", 
   ",", "\<\"VertexDegree\"\>", ",", "\<\"VertexDelete\"\>", 
   ",", "\<\"VertexDiceSimilarity\"\>", ",", "\<\"VertexEccentricity\"\>", 
   ",", "\<\"VertexInComponent\"\>", ",", "\<\"VertexInComponentGraph\"\>", 
   ",", "\<\"VertexInDegree\"\>", ",", "\<\"VertexIndex\"\>", 
   ",", "\<\"VertexJaccardSimilarity\"\>", ",", "\<\"VertexLabelStyle\"\>", 
   ",", "\<\"VertexLabels\"\>", ",", "\<\"VertexList\"\>", 
   ",", "\<\"VertexNormals\"\>", ",", "\<\"VertexOutComponent\"\>", 
   ",", "\<\"VertexOutComponentGraph\"\>", ",", "\<\"VertexOutDegree\"\>", 
   ",", "\<\"VertexQ\"\>", ",", "\<\"VertexReplace\"\>", 
   ",", "\<\"VertexShape\"\>", ",", "\<\"VertexShapeFunction\"\>", 
   ",", "\<\"VertexSize\"\>", ",", "\<\"VertexStyle\"\>", 
   ",", "\<\"VertexTextureCoordinates\"\>", 
   ",", "\<\"VertexTransitiveGraphQ\"\>", ",", "\<\"VertexWeight\"\>", 
   ",", "\<\"VertexWeightedGraphQ\"\>", ",", "\<\"VerticalBar\"\>", 
   ",", "\<\"VerticalGauge\"\>", ",", "\<\"VerticalSeparator\"\>", 
   ",", "\<\"VerticalSlider\"\>", ",", "\<\"VerticalTilde\"\>", 
   ",", "\<\"Video\"\>", ",", "\<\"VideoCombine\"\>", 
   ",", "\<\"VideoDelete\"\>", ",", "\<\"VideoEncoding\"\>", 
   ",", "\<\"VideoExtractFrames\"\>", ",", "\<\"VideoFrameList\"\>", 
   ",", "\<\"VideoFrameMap\"\>", ",", "\<\"VideoGenerator\"\>", 
   ",", "\<\"VideoInsert\"\>", ",", "\<\"VideoIntervals\"\>", 
   ",", "\<\"VideoJoin\"\>", ",", "\<\"VideoMap\"\>", 
   ",", "\<\"VideoMapList\"\>", ",", "\<\"VideoMapTimeSeries\"\>", 
   ",", "\<\"VideoPause\"\>", ",", "\<\"VideoPlay\"\>", ",", "\<\"VideoQ\"\>",
    ",", "\<\"VideoRecord\"\>", ",", "\<\"VideoReplace\"\>", 
   ",", "\<\"VideoSplit\"\>", ",", "\<\"VideoStop\"\>", 
   ",", "\<\"VideoStream\"\>", ",", "\<\"VideoStreams\"\>", 
   ",", "\<\"VideoTimeStretch\"\>", ",", "\<\"VideoTrackSelection\"\>", 
   ",", "\<\"VideoTranscode\"\>", ",", "\<\"VideoTrim\"\>", 
   ",", "\<\"ViewAngle\"\>", ",", "\<\"ViewCenter\"\>", 
   ",", "\<\"ViewMatrix\"\>", ",", "\<\"ViewPoint\"\>", 
   ",", "\<\"ViewProjection\"\>", ",", "\<\"ViewRange\"\>", 
   ",", "\<\"ViewVector\"\>", ",", "\<\"ViewVertical\"\>", 
   ",", "\<\"Visible\"\>", ",", "\<\"VoiceStyleData\"\>", 
   ",", "\<\"VoigtDistribution\"\>", ",", "\<\"VolcanoData\"\>", 
   ",", "\<\"Volume\"\>", ",", "\<\"VonMisesDistribution\"\>", 
   ",", "\<\"VoronoiMesh\"\>", ",", "\<\"WaitAll\"\>", 
   ",", "\<\"WaitNext\"\>", ",", "\<\"WakebyDistribution\"\>", 
   ",", "\<\"WalleniusHypergeometricDistribution\"\>", 
   ",", "\<\"WaringYuleDistribution\"\>", 
   ",", "\<\"WarpingCorrespondence\"\>", ",", "\<\"WarpingDistance\"\>", 
   ",", "\<\"WatershedComponents\"\>", ",", "\<\"WatsonUSquareTest\"\>", 
   ",", "\<\"WattsStrogatzGraphDistribution\"\>", 
   ",", "\<\"WavePDEComponent\"\>", ",", "\<\"WaveletBestBasis\"\>", 
   ",", "\<\"WaveletFilterCoefficients\"\>", ",", "\<\"WaveletImagePlot\"\>", 
   ",", "\<\"WaveletListPlot\"\>", ",", "\<\"WaveletMapIndexed\"\>", 
   ",", "\<\"WaveletMatrixPlot\"\>", ",", "\<\"WaveletPhi\"\>", 
   ",", "\<\"WaveletPsi\"\>", ",", "\<\"WaveletScale\"\>", 
   ",", "\<\"WaveletScalogram\"\>", ",", "\<\"WaveletThreshold\"\>", 
   ",", "\<\"WeakStationarity\"\>", ",", "\<\"WeaklyConnectedComponents\"\>", 
   ",", "\<\"WeaklyConnectedGraphComponents\"\>", 
   ",", "\<\"WeaklyConnectedGraphQ\"\>", ",", "\<\"WeatherData\"\>", 
   ",", "\<\"WeatherForecastData\"\>", ",", "\<\"WebAudioSearch\"\>", 
   ",", "\<\"WebColumn\"\>", ",", "\<\"WebElementObject\"\>", 
   ",", "\<\"WebExecute\"\>", ",", "\<\"WebImage\"\>", 
   ",", "\<\"WebImageSearch\"\>", ",", "\<\"WebItem\"\>", 
   ",", "\<\"WebRow\"\>", ",", "\<\"WebSearch\"\>", 
   ",", "\<\"WebSessionObject\"\>", ",", "\<\"WebSessions\"\>", 
   ",", "\<\"WebWindowObject\"\>", ",", "\<\"WeberE\"\>", 
   ",", "\<\"Wedge\"\>", ",", "\<\"Wednesday\"\>", 
   ",", "\<\"WeibullDistribution\"\>", ",", "\<\"WeierstrassE1\"\>", 
   ",", "\<\"WeierstrassE2\"\>", ",", "\<\"WeierstrassE3\"\>", 
   ",", "\<\"WeierstrassEta1\"\>", ",", "\<\"WeierstrassEta2\"\>", 
   ",", "\<\"WeierstrassEta3\"\>", ",", "\<\"WeierstrassHalfPeriodW1\"\>", 
   ",", "\<\"WeierstrassHalfPeriodW2\"\>", 
   ",", "\<\"WeierstrassHalfPeriodW3\"\>", 
   ",", "\<\"WeierstrassHalfPeriods\"\>", 
   ",", "\<\"WeierstrassInvariantG2\"\>", 
   ",", "\<\"WeierstrassInvariantG3\"\>", 
   ",", "\<\"WeierstrassInvariants\"\>", ",", "\<\"WeierstrassP\"\>", 
   ",", "\<\"WeierstrassPPrime\"\>", ",", "\<\"WeierstrassSigma\"\>", 
   ",", "\<\"WeierstrassZeta\"\>", ",", "\<\"WeightedAdjacencyGraph\"\>", 
   ",", "\<\"WeightedAdjacencyMatrix\"\>", ",", "\<\"WeightedData\"\>", 
   ",", "\<\"WeightedGraphQ\"\>", ",", "\<\"Weights\"\>", 
   ",", "\<\"WelchWindow\"\>", ",", "\<\"WheelGraph\"\>", 
   ",", "\<\"WhenEvent\"\>", ",", "\<\"Which\"\>", ",", "\<\"While\"\>", 
   ",", "\<\"White\"\>", ",", "\<\"WhiteNoiseProcess\"\>", 
   ",", "\<\"WhitePoint\"\>", ",", "\<\"Whitespace\"\>", 
   ",", "\<\"WhitespaceCharacter\"\>", ",", "\<\"WhittakerM\"\>", 
   ",", "\<\"WhittakerW\"\>", ",", "\<\"WienerFilter\"\>", 
   ",", "\<\"WienerProcess\"\>", ",", "\<\"WignerD\"\>", 
   ",", "\<\"WignerSemicircleDistribution\"\>", ",", "\<\"WikidataData\"\>", 
   ",", "\<\"WikidataSearch\"\>", ",", "\<\"WikipediaData\"\>", 
   ",", "\<\"WikipediaSearch\"\>", ",", "\<\"WilksW\"\>", 
   ",", "\<\"WilksWTest\"\>", ",", "\<\"WindDirectionData\"\>", 
   ",", "\<\"WindSpeedData\"\>", ",", "\<\"WindVectorData\"\>", 
   ",", "\<\"WindingCount\"\>", ",", "\<\"WindingPolygon\"\>", 
   ",", "\<\"WindowClickSelect\"\>", ",", "\<\"WindowElements\"\>", 
   ",", "\<\"WindowFloating\"\>", ",", "\<\"WindowFrame\"\>", 
   ",", "\<\"WindowFrameElements\"\>", ",", "\<\"WindowMargins\"\>", 
   ",", "\<\"WindowOpacity\"\>", ",", "\<\"WindowSize\"\>", 
   ",", "\<\"WindowStatusArea\"\>", ",", "\<\"WindowTitle\"\>", 
   ",", "\<\"WindowToolbars\"\>", ",", "\<\"WinsorizedMean\"\>", 
   ",", "\<\"WinsorizedVariance\"\>", 
   ",", "\<\"WishartMatrixDistribution\"\>", ",", "\<\"With\"\>", 
   ",", "\<\"WithCleanup\"\>", ",", "\<\"WithLock\"\>", 
   ",", "\<\"WolframAlpha\"\>", ",", "\<\"WolframLanguageData\"\>", 
   ",", "\<\"Word\"\>", ",", "\<\"WordBoundary\"\>", 
   ",", "\<\"WordCharacter\"\>", ",", "\<\"WordCloud\"\>", 
   ",", "\<\"WordCount\"\>", ",", "\<\"WordCounts\"\>", 
   ",", "\<\"WordData\"\>", ",", "\<\"WordDefinition\"\>", 
   ",", "\<\"WordFrequency\"\>", ",", "\<\"WordFrequencyData\"\>", 
   ",", "\<\"WordList\"\>", ",", "\<\"WordOrientation\"\>", 
   ",", "\<\"WordSearch\"\>", ",", "\<\"WordSelectionFunction\"\>", 
   ",", "\<\"WordSeparators\"\>", ",", "\<\"WordSpacings\"\>", 
   ",", "\<\"WordStem\"\>", ",", "\<\"WordTranslation\"\>", 
   ",", "\<\"WorkingPrecision\"\>", ",", "\<\"WrapAround\"\>", 
   ",", "\<\"Write\"\>", ",", "\<\"WriteLine\"\>", ",", "\<\"WriteString\"\>",
    ",", "\<\"Wronskian\"\>", ",", "\<\"XMLElement\"\>", 
   ",", "\<\"XMLObject\"\>", ",", "\<\"XMLTemplate\"\>", 
   ",", "\<\"XYZColor\"\>", ",", "\<\"Xnor\"\>", ",", "\<\"Xor\"\>", 
   ",", "\<\"Yellow\"\>", ",", "\<\"Yesterday\"\>", 
   ",", "\<\"YuleDissimilarity\"\>", ",", "\<\"ZIPCodeData\"\>", 
   ",", "\<\"ZTest\"\>", ",", "\<\"ZTransform\"\>", ",", "\<\"ZernikeR\"\>", 
   ",", "\<\"ZeroSymmetric\"\>", ",", "\<\"ZeroTest\"\>", ",", "\<\"Zeta\"\>",
    ",", "\<\"ZetaZero\"\>", ",", "\<\"ZipfDistribution\"\>", 
   ",", "\<\"ZoomCenter\"\>", ",", "\<\"ZoomFactor\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8701875006192017`*^9, 3.8701875131556516`*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"e0d5d97a-e5ad-401b-90d4-956529020f56"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<List\>\"", ",", "\"\<SpearmanRho\>\""}], "}"}], ",", 
   "\"\<EponymousPeople\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8701875214591646`*^9, 3.870187536105414*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"9faa5954-21b0-4dc3-a5cb-457e324304e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    TemplateBox[{"\"Charles Spearman\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Person\"", ",", "\"CharlesSpearman::46v5p\""}], "]"}], 
      "\"Entity[\\\"Person\\\", \\\"CharlesSpearman::46v5p\\\"]\"", 
      "\"person\""},
     "Entity"], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8701875364108*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"0254e124-ee3c-4af1-9e70-d6f77cd0ffcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"EmptyQ", "[", 
      RowBox[{"WolframLanguageData", "[", 
       RowBox[{"#", ",", "\"\<EponymousPeople\>\""}], "]"}], "]"}]}], "&"}], 
   "]"}], "[", 
  RowBox[{"WolframLanguageData", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8701874744824305`*^9, 3.8701874909857907`*^9}, {
  3.8701875518607564`*^9, 3.8701875600983562`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"cfce49c8-e84e-4748-86be-f87f075b10d3"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "conopen", 
   "\"Using \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) requires internet \
connectivity. Please check your network connection. You may need to configure \
your firewall program or set a proxy in the Internet Connectivity tab of the \
Preferences dialog.\"", 2, 55, 6, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.870190646957881*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"ea6a5bed-fba0-4a4e-a429-e3785f919664"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "nodat", 
   "\"Unable to download data. Some or all results may be missing.\"", 2, 55, 
   7, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8701906472209396`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"0b4209f0-31b6-421c-bf62-a62a45aadffc"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "conopen", 
   "\"Using \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) requires internet \
connectivity. Please check your network connection. You may need to configure \
your firewall program or set a proxy in the Internet Connectivity tab of the \
Preferences dialog.\"", 2, 55, 8, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8701906474479914`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"d8290e8b-de2e-4081-aad5-61ab40004e8f"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "nodat", 
   "\"Unable to download data. Some or all results may be missing.\"", 2, 55, 
   9, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8701906476290417`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"4675d0a8-df25-4f8b-80b5-9ef0bea278dd"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "conopen", 
   "\"Using \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) requires internet \
connectivity. Please check your network connection. You may need to configure \
your firewall program or set a proxy in the Internet Connectivity tab of the \
Preferences dialog.\"", 2, 55, 10, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8701906478810883`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"db61cab1-4257-4280-bd35-273f98272f60"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"conopen\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 55, 11, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.870190648060129*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"1b787e8d-507f-4dae-9784-9e8f727640ad"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "nodat", 
   "\"Unable to download data. Some or all results may be missing.\"", 2, 55, 
   12, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8701906482211833`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"bf8aa5b8-0fb7-419a-95ae-f03e9500e969"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 55, 13, 19466872866887747024, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8701906483752017`*^9},
 CellLabel->
  "During evaluation of \
In[59]:=",ExpressionUUID->"c7db036d-84c6-47d2-a4d2-6a2f3a83af15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"$RequesterWolframID\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$RequesterWolframID\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$RequesterWolframID\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$RequesterWolframUUID\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"$RequesterWolframUUID\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"$RequesterWolframUUID\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$WolframID\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$WolframID\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"$WolframID\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"$WolframUUID\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"$WolframUUID\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"$WolframUUID\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AbelianGroup\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AbelianGroup\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AbelianGroup\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AiryAi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AiryAi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AiryAi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AiryAiPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AiryAiPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AiryAiPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AiryAiZero\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AiryAiZero\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AiryAiZero\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AiryBi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AiryBi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AiryBi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AiryBiPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AiryBiPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AiryBiPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AiryBiZero\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AiryBiZero\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AiryBiZero\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AndersonDarlingTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AndersonDarlingTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AndersonDarlingTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AngerJ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AngerJ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AngerJ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Antihermitian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Antihermitian\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Antihermitian\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AntihermitianMatrixQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AntihermitianMatrixQ\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"AntihermitianMatrixQ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"AppellF1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"AppellF1\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"AppellF1\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BarabasiAlbertGraphDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"BarabasiAlbertGraphDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BarabasiAlbertGraphDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BaringhausHenzeTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BaringhausHenzeTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BaringhausHenzeTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BarlowProschanImportance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BarlowProschanImportance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BarlowProschanImportance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BarnesG\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BarnesG\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BarnesG\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BartlettHannWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BartlettHannWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BartlettHannWindow\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BartlettWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BartlettWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BartlettWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BatesDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BatesDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BatesDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BattleLemarieWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BattleLemarieWavelet\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BattleLemarieWavelet\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BayesianMaximization\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BayesianMaximization\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BayesianMaximization\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BayesianMaximizationObject\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BayesianMaximizationObject\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BayesianMaximizationObject\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BayesianMinimization\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BayesianMinimization\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BayesianMinimization\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BayesianMinimizationObject\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BayesianMinimizationObject\""}], 
       "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BayesianMinimizationObject\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BeckmannDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BeckmannDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BeckmannDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BellB\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BellB\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BellB\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BellY\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BellY\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BellY\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BenfordDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BenfordDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BenfordDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BeniniDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BeniniDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BeniniDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BenktanderGibratDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"BenktanderGibratDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BenktanderGibratDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BenktanderWeibullDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"BenktanderWeibullDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BenktanderWeibullDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BernoulliB\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BernoulliB\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BernoulliB\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BernoulliDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BernoulliDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BernoulliDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BernoulliGraphDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BernoulliGraphDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BernoulliGraphDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BernoulliProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BernoulliProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BernoulliProcess\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BernsteinBasis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BernsteinBasis\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BernsteinBasis\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesagL\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesagL\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BesagL\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesselFilterModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesselFilterModel\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BesselFilterModel\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesselI\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesselI\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BesselI\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesselJ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesselJ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BesselJ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesselJZero\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesselJZero\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BesselJZero\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesselK\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesselK\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BesselK\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesselY\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesselY\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BesselY\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BesselYZero\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BesselYZero\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BesselYZero\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BezierCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BezierCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BezierCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BezierFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BezierFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BezierFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BilateralLaplaceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BilateralLaplaceTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BilateralLaplaceTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BirnbaumImportance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BirnbaumImportance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BirnbaumImportance\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BirnbaumSaundersDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"BirnbaumSaundersDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BirnbaumSaundersDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BlackmanHarrisWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BlackmanHarrisWindow\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BlackmanHarrisWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BlackmanNuttallWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BlackmanNuttallWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BlackmanNuttallWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BlackmanWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BlackmanWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BlackmanWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BlomqvistBeta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BlomqvistBeta\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BlomqvistBeta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BlomqvistBetaTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BlomqvistBetaTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BlomqvistBetaTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BodePlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BodePlot\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BodePlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BohmanWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BohmanWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BohmanWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Boole\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Boole\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Boole\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanConsecutiveFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BooleanConsecutiveFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanConsecutiveFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanConvert\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanConvert\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanConvert\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanCountingFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BooleanCountingFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanCountingFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanGraph\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BooleanGraph\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanMaxterms\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanMaxterms\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanMaxterms\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanMinimize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanMinimize\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanMinimize\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanMinterms\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanMinterms\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanMinterms\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BooleanQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanRegion\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BooleanRegion\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanStrings\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanStrings\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BooleanStrings\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanTable\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanTable\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BooleanTable\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BooleanVariables\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BooleanVariables\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BooleanVariables\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Booleans\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Booleans\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Booleans\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BorelTannerDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BorelTannerDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BorelTannerDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BrayCurtisDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BrayCurtisDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"BrayCurtisDistance\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BrownForsytheTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"BrownForsytheTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BrownForsytheTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"BrownianBridgeProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"BrownianBridgeProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"BrownianBridgeProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ButterworthFilterModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"ButterworthFilterModel\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ButterworthFilterModel\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CantorMesh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CantorMesh\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CantorMesh\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CantorStaircase\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CantorStaircase\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CantorStaircase\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlemanLinearize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlemanLinearize\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CarlemanLinearize\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRD\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRD\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRE\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRE\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRE\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRF\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRF\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRF\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRG\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRG\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRG\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRJ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRJ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRJ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRK\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRK\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRK\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarlsonRM\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarlsonRM\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarlsonRM\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CarmichaelLambda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CarmichaelLambda\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CarmichaelLambda\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Casoratian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Casoratian\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Casoratian\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Catalan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Catalan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Catalan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CatalanNumber\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CatalanNumber\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CatalanNumber\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CauchyDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CauchyDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CauchyDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CauchyPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CauchyPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CauchyPointProcess\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CauchyWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CauchyWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CauchyWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CayleyGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CayleyGraph\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CayleyGraph\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ChampernowneNumber\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ChampernowneNumber\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ChampernowneNumber\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ChanVeseBinarize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ChanVeseBinarize\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ChanVeseBinarize\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chebyshev1FilterModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"Chebyshev1FilterModel\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Chebyshev1FilterModel\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chebyshev2FilterModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"Chebyshev2FilterModel\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"Chebyshev2FilterModel\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ChebyshevT\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ChebyshevT\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ChebyshevT\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ChebyshevU\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ChebyshevU\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ChebyshevU\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CholeskyDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"CholeskyDecomposition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CholeskyDecomposition\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ClebschGordan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ClebschGordan\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ClebschGordan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoifletWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoifletWavelet\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CoifletWavelet\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CompoundPoissonDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"CompoundPoissonDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CompoundPoissonDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CompoundPoissonProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"CompoundPoissonProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CompoundPoissonProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConnesWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConnesWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ConnesWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConoverTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConoverTest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ConoverTest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ContinuousMarkovProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"ContinuousMarkovProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ContinuousMarkovProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConwayGroupCo1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConwayGroupCo1\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ConwayGroupCo1\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConwayGroupCo2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConwayGroupCo2\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ConwayGroupCo2\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ConwayGroupCo3\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ConwayGroupCo3\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ConwayGroupCo3\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoulombF\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoulombF\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CoulombF\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoulombG\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoulombG\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CoulombG\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoulombH1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoulombH1\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CoulombH1\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoulombH2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoulombH2\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CoulombH2\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoxIngersollRossProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"CoxIngersollRossProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CoxIngersollRossProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoxModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoxModel\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CoxModel\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoxModelFit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoxModelFit\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CoxModelFit\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CoxianDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CoxianDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CoxianDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"CramerVonMisesTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CramerVonMisesTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"CramerVonMisesTest\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DGaussianWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DGaussianWavelet\""}], 
       "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DGaussianWavelet\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DagumDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DagumDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DagumDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DamerauLevenshteinDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DamerauLevenshteinDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DamerauLevenshteinDistance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DaubechiesWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DaubechiesWavelet\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DaubechiesWavelet\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DavisDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DavisDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DavisDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DawsonF\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DawsonF\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DawsonF\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DeBruijnGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DeBruijnGraph\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DeBruijnGraph\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DeBruijnSequence\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DeBruijnSequence\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DeBruijnSequence\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DedekindEta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DedekindEta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DedekindEta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DelaunayMesh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DelaunayMesh\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DelaunayMesh\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiggleGatesPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DiggleGatesPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DiggleGatesPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiggleGrattonPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DiggleGrattonPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DiggleGrattonPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiracComb\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DiracComb\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DiracComb\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiracDelta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DiracDelta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DiracDelta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletBeta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletBeta\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DirichletBeta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletCharacter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletCharacter\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DirichletCharacter\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletCondition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletCondition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DirichletCondition\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletConvolve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletConvolve\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DirichletConvolve\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DirichletDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DirichletDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletEta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletEta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DirichletEta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletL\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletL\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DirichletL\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletLambda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletLambda\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DirichletLambda\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DirichletTransform\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DirichletWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DirichletWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DirichletWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiscreteHadamardTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DiscreteHadamardTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DiscreteHadamardTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiscreteLyapunovSolve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DiscreteLyapunovSolve\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DiscreteLyapunovSolve\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiscreteMarkovProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DiscreteMarkovProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DiscreteMarkovProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DiscreteRiccatiSolve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DiscreteRiccatiSolve\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"DiscreteRiccatiSolve\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"DrazinInverse\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DrazinInverse\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"DrazinInverse\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ErlangB\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ErlangB\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ErlangB\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ErlangC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ErlangC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ErlangC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ErlangDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ErlangDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ErlangDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EuclideanDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EuclideanDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"EuclideanDistance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EulerAngles\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EulerAngles\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EulerAngles\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EulerCharacteristic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EulerCharacteristic\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"EulerCharacteristic\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EulerE\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EulerE\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EulerE\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EulerGamma\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EulerGamma\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EulerGamma\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EulerMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EulerMatrix\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EulerMatrix\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EulerPhi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EulerPhi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"EulerPhi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"EulerianGraphQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EulerianGraphQ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"EulerianGraphQ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ExactBlackmanWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ExactBlackmanWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ExactBlackmanWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FareySequence\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FareySequence\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FareySequence\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fibonacci\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Fibonacci\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Fibonacci\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fibonorial\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Fibonorial\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Fibonorial\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FindEulerianCycle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FindEulerianCycle\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FindEulerianCycle\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FindHamiltonianCycle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FindHamiltonianCycle\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FindHamiltonianCycle\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FindHamiltonianPath\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FindHamiltonianPath\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FindHamiltonianPath\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FindHiddenMarkovStates\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FindHiddenMarkovStates\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FindHiddenMarkovStates\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FiniteAbelianGroupCount\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FiniteAbelianGroupCount\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FiniteAbelianGroupCount\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FischerGroupFi22\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FischerGroupFi22\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FischerGroupFi22\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FischerGroupFi23\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FischerGroupFi23\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FischerGroupFi23\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FischerGroupFi24Prime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FischerGroupFi24Prime\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FischerGroupFi24Prime\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FisherHypergeometricDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"FisherHypergeometricDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FisherHypergeometricDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FisherRatioTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FisherRatioTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FisherRatioTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FisherZDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FisherZDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FisherZDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fourier\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Fourier\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Fourier\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierCoefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierCoefficient\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierCoefficient\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierCosCoefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FourierCosCoefficient\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FourierCosCoefficient\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierCosSeries\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierCosSeries\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierCosSeries\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierCosTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierCosTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FourierCosTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierDCT\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierDCT\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierDCT\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierDCTFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierDCTFilter\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierDCTFilter\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierDCTMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierDCTMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierDCTMatrix\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierDST\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierDST\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierDST\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierDSTMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierDSTMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierDSTMatrix\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierMatrix\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierMatrix\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierParameters\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierParameters\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FourierParameters\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierSequenceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FourierSequenceTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FourierSequenceTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierSeries\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierSeries\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierSeries\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierSinCoefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FourierSinCoefficient\""}], 
       "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FourierSinCoefficient\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierSinSeries\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierSinSeries\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierSinSeries\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierSinTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierSinTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FourierSinTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FourierTransform\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FourierTrigSeries\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FourierTrigSeries\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FourierTrigSeries\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FoxH\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FoxH\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FoxH\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FoxHReduce\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FoxHReduce\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FoxHReduce\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FractionalBrownianMotionProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"FractionalBrownianMotionProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FractionalBrownianMotionProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FractionalGaussianNoiseProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"FractionalGaussianNoiseProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FractionalGaussianNoiseProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FrechetDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrechetDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FrechetDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FrenetSerretSystem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrenetSerretSystem\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FrenetSerretSystem\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FresnelC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FresnelC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FresnelC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FresnelF\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FresnelF\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FresnelF\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FresnelG\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FresnelG\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FresnelG\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FresnelS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FresnelS\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"FresnelS\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FrobeniusNumber\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrobeniusNumber\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FrobeniusNumber\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FrobeniusSolve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FrobeniusSolve\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FrobeniusSolve\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FromJulianDate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FromJulianDate\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FromJulianDate\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"FussellVeselyImportance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FussellVeselyImportance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"FussellVeselyImportance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaborFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GaborFilter\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GaborFilter\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaborMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GaborMatrix\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GaborMatrix\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaborWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GaborWavelet\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GaborWavelet\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaussianFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GaussianFilter\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GaussianFilter\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaussianIntegers\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GaussianIntegers\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GaussianIntegers\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaussianMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GaussianMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GaussianMatrix\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaussianOrthogonalMatrixDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"GaussianOrthogonalMatrixDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GaussianOrthogonalMatrixDistribution\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaussianSymplecticMatrixDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"GaussianSymplecticMatrixDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GaussianSymplecticMatrixDistribution\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaussianUnitaryMatrixDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"GaussianUnitaryMatrixDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GaussianUnitaryMatrixDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GaussianWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GaussianWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GaussianWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GegenbauerC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GegenbauerC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GegenbauerC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GeometricBrownianMotionProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"GeometricBrownianMotionProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GeometricBrownianMotionProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GibbsPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GibbsPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GibbsPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Glaisher\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Glaisher\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Glaisher\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GompertzMakehamDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"GompertzMakehamDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GompertzMakehamDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GoochShading\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GoochShading\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GoochShading\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GoodmanKruskalGamma\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GoodmanKruskalGamma\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GoodmanKruskalGamma\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GoodmanKruskalGammaTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"GoodmanKruskalGammaTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"GoodmanKruskalGammaTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GreenFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GreenFunction\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GreenFunction\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GroebnerBasis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GroebnerBasis\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GroebnerBasis\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gudermannian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Gudermannian\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Gudermannian\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"GumbelDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"GumbelDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"GumbelDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HaarWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HaarWavelet\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HaarWavelet\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HadamardMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HadamardMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HadamardMatrix\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HamiltonianGraphQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HamiltonianGraphQ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HamiltonianGraphQ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HammingDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HammingDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HammingDistance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HammingWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HammingWindow\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HammingWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HankelH1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HankelH1\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HankelH1\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HankelH2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HankelH2\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HankelH2\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HankelMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HankelMatrix\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HankelMatrix\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HankelTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HankelTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HankelTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HannPoissonWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HannPoissonWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HannPoissonWindow\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HannWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HannWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HannWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HaradaNortonGroupHN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HaradaNortonGroupHN\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HaradaNortonGroupHN\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HararyGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HararyGraph\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HararyGraph\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeavisideLambda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeavisideLambda\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HeavisideLambda\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeavisidePi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeavisidePi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeavisidePi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeavisideTheta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeavisideTheta\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HeavisideTheta\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeldGroupHe\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeldGroupHe\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeldGroupHe\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HelmholtzPDEComponent\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"HelmholtzPDEComponent\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HelmholtzPDEComponent\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HermiteDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HermiteDecomposition\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HermiteDecomposition\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HermiteH\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HermiteH\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HermiteH\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hermitian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Hermitian\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Hermitian\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HermitianMatrixQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HermitianMatrixQ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HermitianMatrixQ\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HessenbergDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"HessenbergDecomposition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HessenbergDecomposition\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunB\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunB\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunB\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunBPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunBPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunBPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunCPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunCPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunCPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunD\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunD\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunDPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunDPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunDPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunG\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunG\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunG\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunGPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunGPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunGPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunT\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunT\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunT\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HeunTPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HeunTPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HeunTPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HiddenMarkovProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HiddenMarkovProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HiddenMarkovProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HigmanSimsGroupHS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HigmanSimsGroupHS\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HigmanSimsGroupHS\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HilbertCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HilbertCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HilbertCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HilbertFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HilbertFilter\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HilbertFilter\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HilbertMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HilbertMatrix\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HilbertMatrix\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HjorthDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HjorthDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HjorthDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HodgeDual\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HodgeDual\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HodgeDual\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HoeffdingD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HoeffdingD\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HoeffdingD\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HoeffdingDTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HoeffdingDTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HoeffdingDTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HornerForm\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HornerForm\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HornerForm\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HotellingTSquareDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"HotellingTSquareDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HotellingTSquareDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HoytDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HoytDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HoytDistribution\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HurwitzLerchPhi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HurwitzLerchPhi\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"HurwitzLerchPhi\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"HurwitzZeta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"HurwitzZeta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"HurwitzZeta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InhomogeneousPoissonPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"InhomogeneousPoissonPointProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InhomogeneousPoissonPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseBilateralLaplaceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"InverseBilateralLaplaceTransform\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseBilateralLaplaceTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseFourier\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseFourier\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseFourier\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseFourierCosTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseFourierCosTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseFourierCosTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseFourierSequenceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"InverseFourierSequenceTransform\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseFourierSequenceTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseFourierSinTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseFourierSinTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseFourierSinTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseFourierTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseFourierTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseFourierTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseGaussianDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseGaussianDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseGaussianDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseGudermannian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseGudermannian\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseGudermannian\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseHankelTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseHankelTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseHankelTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiCD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiCD\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiCD\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiCN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiCN\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiCN\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiCS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiCS\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiCS\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiDC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiDC\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiDC\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiDN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiDN\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiDN\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiDS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiDS\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiDS\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiNC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiNC\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiNC\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiND\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiND\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiND\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiNS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiNS\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiNS\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiSC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiSC\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiSC\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiSD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiSD\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiSD\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseJacobiSN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseJacobiSN\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseJacobiSN\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseLaplaceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseLaplaceTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseLaplaceTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseMellinTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseMellinTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseMellinTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseRadon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseRadon\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"InverseRadon\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseRadonTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseRadonTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseRadonTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseShortTimeFourier\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"InverseShortTimeFourier\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseShortTimeFourier\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseWeierstrassP\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"InverseWeierstrassP\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseWeierstrassP\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"InverseWishartMatrixDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"InverseWishartMatrixDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"InverseWishartMatrixDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ItoProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ItoProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ItoProcess\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JaccardDissimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JaccardDissimilarity\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JaccardDissimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiAmplitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiAmplitude\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JacobiAmplitude\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiCD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiCD\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiCD\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiCN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiCN\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiCN\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiCS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiCS\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiCS\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiDC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiDC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiDC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiDN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiDN\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiDN\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiDS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiDS\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiDS\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiEpsilon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiEpsilon\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiEpsilon\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiNC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiNC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiNC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiND\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiND\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiND\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiNS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiNS\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiNS\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiP\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiP\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiP\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiSC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiSC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiSC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiSD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiSD\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiSD\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiSN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiSN\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiSN\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiSymbol\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiSymbol\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiSymbol\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiZN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiZN\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiZN\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JacobiZeta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JacobiZeta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JacobiZeta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JankoGroupJ1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JankoGroupJ1\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JankoGroupJ1\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JankoGroupJ2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JankoGroupJ2\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JankoGroupJ2\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JankoGroupJ3\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JankoGroupJ3\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JankoGroupJ3\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JankoGroupJ4\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JankoGroupJ4\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JankoGroupJ4\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JarqueBeraALMTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JarqueBeraALMTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JarqueBeraALMTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JohnsonDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JohnsonDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JohnsonDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JordanDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JordanDecomposition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JordanDecomposition\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JordanModelDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"JordanModelDecomposition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JordanModelDecomposition\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JuliaSetBoettcher\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JuliaSetBoettcher\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JuliaSetBoettcher\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JuliaSetIterationCount\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"JuliaSetIterationCount\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JuliaSetIterationCount\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JuliaSetPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JuliaSetPlot\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JuliaSetPlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JuliaSetPoints\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JuliaSetPoints\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"JuliaSetPoints\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"JulianDate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"JulianDate\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"JulianDate\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KaiserBesselWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KaiserBesselWindow\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KaiserBesselWindow\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KaiserWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KaiserWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KaiserWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KalmanEstimator\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KalmanEstimator\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KalmanEstimator\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KalmanFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KalmanFilter\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KalmanFilter\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KarhunenLoeveDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"KarhunenLoeveDecomposition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KarhunenLoeveDecomposition\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KatzCentrality\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KatzCentrality\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KatzCentrality\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KelvinBei\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KelvinBei\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KelvinBei\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KelvinBer\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KelvinBer\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KelvinBer\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KelvinKei\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KelvinKei\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KelvinKei\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KelvinKer\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KelvinKer\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KelvinKer\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KendallTau\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KendallTau\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KendallTau\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KendallTauTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KendallTauTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KendallTauTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Khinchin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Khinchin\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Khinchin\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KirchhoffGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KirchhoffGraph\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KirchhoffGraph\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KirchhoffMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KirchhoffMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KirchhoffMatrix\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KleinInvariantJ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KleinInvariantJ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KleinInvariantJ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KochCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KochCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KochCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KolmogorovSmirnovTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"KolmogorovSmirnovTest\""}], 
       "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KolmogorovSmirnovTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KroneckerDelta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KroneckerDelta\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KroneckerDelta\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KroneckerModelDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"KroneckerModelDecomposition\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KroneckerModelDecomposition\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KroneckerProduct\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KroneckerProduct\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KroneckerProduct\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KroneckerSymbol\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KroneckerSymbol\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KroneckerSymbol\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KuiperTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KuiperTest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"KuiperTest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KumaraswamyDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"KumaraswamyDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KumaraswamyDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"KuwaharaFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KuwaharaFilter\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"KuwaharaFilter\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LaguerreL\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LaguerreL\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LaguerreL\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LameC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LameC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LameC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LameCPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LameCPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LameCPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LameEigenvalueA\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LameEigenvalueA\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LameEigenvalueA\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LameEigenvalueB\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LameEigenvalueB\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LameEigenvalueB\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LameS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LameS\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LameS\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LameSPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LameSPrime\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LameSPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LanczosWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LanczosWindow\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LanczosWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LandauDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LandauDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LandauDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LaplaceDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LaplaceDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LaplaceDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LaplaceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LaplaceTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LaplaceTransform\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Laplacian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Laplacian\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Laplacian\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LaplacianFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LaplacianFilter\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LaplacianFilter\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LaplacianGaussianFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"LaplacianGaussianFilter\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LaplacianGaussianFilter\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LaplacianPDETerm\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LaplacianPDETerm\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LaplacianPDETerm\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LegendreP\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LegendreP\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LegendreP\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LegendreQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LegendreQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LegendreQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LerchPhi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LerchPhi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LerchPhi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LeveneTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LeveneTest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LeveneTest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LeviCivitaTensor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LeviCivitaTensor\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LeviCivitaTensor\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LevyDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LevyDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LevyDistribution\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LindleyDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LindleyDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LindleyDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LiouvilleLambda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LiouvilleLambda\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LiouvilleLambda\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ListFourierSequenceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"ListFourierSequenceTransform\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ListFourierSequenceTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LogBarnesG\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LogBarnesG\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LogBarnesG\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LucasL\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LucasL\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LucasL\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LuccioSamiComponents\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LuccioSamiComponents\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"LuccioSamiComponents\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LyapunovSolve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LyapunovSolve\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LyapunovSolve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"LyonsGroupLy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LyonsGroupLy\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"LyonsGroupLy\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MandelbrotSetBoettcher\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MandelbrotSetBoettcher\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MandelbrotSetBoettcher\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MandelbrotSetDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MandelbrotSetDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MandelbrotSetDistance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MandelbrotSetIterationCount\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MandelbrotSetIterationCount\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MandelbrotSetIterationCount\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MandelbrotSetMemberQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MandelbrotSetMemberQ\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MandelbrotSetMemberQ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MandelbrotSetPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MandelbrotSetPlot\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MandelbrotSetPlot\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MangoldtLambda\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MangoldtLambda\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MangoldtLambda\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MannWhitneyTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MannWhitneyTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MannWhitneyTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MarchenkoPasturDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MarchenkoPasturDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MarchenkoPasturDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MarcumQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MarcumQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MarcumQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MardiaCombinedTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MardiaCombinedTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MardiaCombinedTest\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MardiaKurtosisTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MardiaKurtosisTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MardiaKurtosisTest\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MardiaSkewnessTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MardiaSkewnessTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MardiaSkewnessTest\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MarkovProcessProperties\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MarkovProcessProperties\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MarkovProcessProperties\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MaternPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MaternPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MaternPointProcess\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuC\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MathieuC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuCPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuCPrime\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MathieuCPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuCharacteristicA\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MathieuCharacteristicA\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuCharacteristicA\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuCharacteristicB\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MathieuCharacteristicB\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuCharacteristicB\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuCharacteristicExponent\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"MathieuCharacteristicExponent\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuCharacteristicExponent\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuGroupM11\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuGroupM11\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuGroupM11\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuGroupM12\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuGroupM12\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuGroupM12\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuGroupM22\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuGroupM22\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuGroupM22\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuGroupM23\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuGroupM23\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuGroupM23\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuGroupM24\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuGroupM24\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MathieuGroupM24\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuS\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MathieuS\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MathieuSPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MathieuSPrime\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MathieuSPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MaxwellDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MaxwellDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MaxwellDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"McLaughlinGroupMcL\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"McLaughlinGroupMcL\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"McLaughlinGroupMcL\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MeijerG\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MeijerG\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MeijerG\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MeijerGReduce\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MeijerGReduce\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MeijerGReduce\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MeixnerDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MeixnerDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MeixnerDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MellinConvolve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MellinConvolve\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MellinConvolve\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MellinTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MellinTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MellinTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MengerMesh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MengerMesh\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MengerMesh\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MersennePrimeExponent\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MersennePrimeExponent\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MersennePrimeExponent\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MersennePrimeExponentQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MersennePrimeExponentQ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MersennePrimeExponentQ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MeyerWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MeyerWavelet\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MeyerWavelet\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MinkowskiQuestionMark\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MinkowskiQuestionMark\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MinkowskiQuestionMark\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MittagLefflerE\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MittagLefflerE\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MittagLefflerE\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MoebiusMu\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MoebiusMu\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MoebiusMu\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MorletWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MorletWavelet\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"MorletWavelet\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MorphologicalEulerNumber\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"MorphologicalEulerNumber\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MorphologicalEulerNumber\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MoyalDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"MoyalDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MoyalDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"MultivariatePoissonDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"MultivariatePoissonDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"MultivariatePoissonDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NakagamiDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NakagamiDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"NakagamiDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NeedlemanWunschSimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"NeedlemanWunschSimilarity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"NeedlemanWunschSimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NeumannValue\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NeumannValue\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NeumannValue\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NevilleThetaC\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NevilleThetaC\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NevilleThetaC\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NevilleThetaD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NevilleThetaD\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NevilleThetaD\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NevilleThetaN\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NevilleThetaN\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NevilleThetaN\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NevilleThetaS\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NevilleThetaS\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NevilleThetaS\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NeymanScottPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"NeymanScottPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"NeymanScottPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NicholsGridLines\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NicholsGridLines\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NicholsGridLines\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NicholsPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NicholsPlot\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NicholsPlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NoncentralStudentTDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"NoncentralStudentTDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"NoncentralStudentTDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NorlundB\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NorlundB\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NorlundB\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NormalizedSquaredEuclideanDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"NormalizedSquaredEuclideanDistance\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"NormalizedSquaredEuclideanDistance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NuttallWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NuttallWindow\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NuttallWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NyquistGridLines\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NyquistGridLines\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NyquistGridLines\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"NyquistPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"NyquistPlot\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"NyquistPlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ONanGroupON\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ONanGroupON\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ONanGroupON\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"OrnsteinUhlenbeckProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"OrnsteinUhlenbeckProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"OrnsteinUhlenbeckProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"OwenT\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"OwenT\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"OwenT\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PadeApproximant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PadeApproximant\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PadeApproximant\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ParetoDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ParetoDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ParetoDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ParetoPickandsDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"ParetoPickandsDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ParetoPickandsDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ParzenWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ParzenWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ParzenWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PascalDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PascalDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PascalDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PaulWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PaulWavelet\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PaulWavelet\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PauliMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PauliMatrix\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PauliMatrix\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PeanoCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PeanoCurve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PeanoCurve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PearsonChiSquareTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PearsonChiSquareTest\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PearsonChiSquareTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PearsonCorrelationTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"PearsonCorrelationTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PearsonCorrelationTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PearsonDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PearsonDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PearsonDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PenttinenPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"PenttinenPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PenttinenPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PeronaMalikFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PeronaMalikFilter\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PeronaMalikFilter\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PetersenGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PetersenGraph\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PetersenGraph\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PillaiTrace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PillaiTrace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PillaiTrace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PillaiTraceTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PillaiTraceTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PillaiTraceTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PlanckRadiationLaw\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlanckRadiationLaw\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PlanckRadiationLaw\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pochhammer\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Pochhammer\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Pochhammer\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PoissonConsulDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"PoissonConsulDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PoissonConsulDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PoissonDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PoissonDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PoissonDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PoissonPDEComponent\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PoissonPDEComponent\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PoissonPDEComponent\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PoissonPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PoissonPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PoissonPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PoissonProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PoissonProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PoissonProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PoissonWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PoissonWindow\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"PoissonWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PolyaAeppliDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"PolyaAeppliDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PolyaAeppliDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"PriceGraphDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"PriceGraphDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"PriceGraphDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"QPochhammer\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"QPochhammer\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"QPochhammer\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Radon\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Radon\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Radon\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RadonTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RadonTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RadonTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RamanujanTau\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RamanujanTau\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RamanujanTau\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RamanujanTauL\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RamanujanTauL\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RamanujanTauL\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RamanujanTauTheta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RamanujanTauTheta\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RamanujanTauTheta\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RamanujanTauZ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RamanujanTauZ\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RamanujanTauZ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RayleighDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RayleighDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RayleighDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RiccatiSolve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RiccatiSolve\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RiccatiSolve\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RiceDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RiceDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RiceDistribution\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RiemannR\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RiemannR\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RiemannR\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RiemannSiegelTheta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RiemannSiegelTheta\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RiemannSiegelTheta\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RiemannSiegelZ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RiemannSiegelZ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RiemannSiegelZ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RiemannXi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RiemannXi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RiemannXi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RipleyK\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RipleyK\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RipleyK\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RipleyRassonRegion\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RipleyRassonRegion\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RipleyRassonRegion\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RogersTanimotoDissimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"RogersTanimotoDissimilarity\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RogersTanimotoDissimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Root\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Root\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Root\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RootApproximant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RootApproximant\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RootApproximant\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RootIntervals\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RootIntervals\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RootIntervals\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RootLocusPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RootLocusPlot\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RootLocusPlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RootMeanSquare\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RootMeanSquare\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RootMeanSquare\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RootOfUnityQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RootOfUnityQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RootOfUnityQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RootReduce\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RootReduce\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RootReduce\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RootSum\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RootSum\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RootSum\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Roots\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Roots\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Roots\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rotate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Rotate\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Rotate\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RotateLabel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotateLabel\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RotateLabel\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RotateLeft\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotateLeft\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RotateLeft\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RotateRight\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotateRight\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RotateRight\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RotationAction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotationAction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RotationAction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RotationMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotationMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RotationMatrix\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RotationTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RotationTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RotationTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Round\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Round\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Round\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RoundingRadius\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RoundingRadius\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RoundingRadius\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Row\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Row\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Row\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RowAlignments\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RowAlignments\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RowAlignments\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RowBox\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RowBox\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RowBox\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RowLines\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RowLines\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RowLines\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RowMinHeight\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RowMinHeight\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RowMinHeight\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RowReduce\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RowReduce\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RowReduce\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RowSpacings\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RowSpacings\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RowSpacings\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RowsEqual\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RowsEqual\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RowsEqual\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RudinShapiro\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RudinShapiro\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RudinShapiro\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RudvalisGroupRu\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RudvalisGroupRu\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RudvalisGroupRu\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rule\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Rule\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Rule\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RuleDelayed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RuleDelayed\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RuleDelayed\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RulePlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RulePlot\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RulePlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RulerUnits\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RulerUnits\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RulerUnits\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RulesTree\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RulesTree\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RulesTree\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Run\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Run\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Run\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RunProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RunProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RunProcess\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RunThrough\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RunThrough\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"RunThrough\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RuntimeAttributes\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RuntimeAttributes\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RuntimeAttributes\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RuntimeOptions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RuntimeOptions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RuntimeOptions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"RussellRaoDissimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"RussellRaoDissimilarity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"RussellRaoDissimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SARIMAProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SARIMAProcess\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SARIMAProcess\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SARMAProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SARMAProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SARMAProcess\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SASTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SASTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SASTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SSSTriangle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SSSTriangle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SSSTriangle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SameQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SameQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SameQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SameTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SameTest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SameTest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SameTestProperties\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SameTestProperties\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SameTestProperties\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SampleDepth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SampleDepth\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SampleDepth\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SampleRate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SampleRate\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SampleRate\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SampledEntityClass\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SampledEntityClass\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SampledEntityClass\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SampledSoundFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SampledSoundFunction\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SampledSoundFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SampledSoundList\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SampledSoundList\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SampledSoundList\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SamplingPeriod\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SamplingPeriod\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SamplingPeriod\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SatelliteData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SatelliteData\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SatelliteData\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SatisfiabilityCount\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SatisfiabilityCount\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SatisfiabilityCount\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SatisfiabilityInstances\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SatisfiabilityInstances\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SatisfiabilityInstances\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SatisfiableQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SatisfiableQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SatisfiableQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saturday\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Saturday\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Saturday\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Save\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Save\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Save\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SaveConnection\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SaveConnection\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SaveConnection\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SaveDefinitions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SaveDefinitions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SaveDefinitions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SavitzkyGolayMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SavitzkyGolayMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SavitzkyGolayMatrix\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SawtoothWave\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SawtoothWave\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SawtoothWave\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Scale\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Scale\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Scale\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScaleDivisions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScaleDivisions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ScaleDivisions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScaleOrigin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScaleOrigin\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScaleOrigin\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScalePadding\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScalePadding\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScalePadding\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScaleRangeStyle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScaleRangeStyle\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ScaleRangeStyle\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScaleRanges\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScaleRanges\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScaleRanges\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Scaled\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Scaled\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Scaled\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScalingFunctions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScalingFunctions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScalingFunctions\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SchurDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SchurDecomposition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SchurDecomposition\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScorerGi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScorerGi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScorerGi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScorerGiPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScorerGiPrime\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScorerGiPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScorerHi\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScorerHi\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScorerHi\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ScorerHiPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ScorerHiPrime\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ScorerHiPrime\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShannonWavelet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShannonWavelet\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ShannonWavelet\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShapiroWilkTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShapiroWilkTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ShapiroWilkTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShenCastanMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShenCastanMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ShenCastanMatrix\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShiftedGompertzDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"ShiftedGompertzDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ShiftedGompertzDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShortTimeFourier\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShortTimeFourier\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ShortTimeFourier\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ShortTimeFourierData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShortTimeFourierData\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ShortTimeFourierData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SiegelTheta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SiegelTheta\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SiegelTheta\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SiegelTukeyTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SiegelTukeyTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SiegelTukeyTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SierpinskiCurve\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SierpinskiCurve\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SierpinskiCurve\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SierpinskiMesh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SierpinskiMesh\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SierpinskiMesh\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SinghMaddalaDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SinghMaddalaDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SinghMaddalaDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SkellamDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SkellamDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SkellamDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SmithDecomposition\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SmithDecomposition\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SmithDecomposition\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SmithDelayCompensator\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SmithDelayCompensator\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SmithDelayCompensator\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SmithWatermanSimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SmithWatermanSimilarity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SmithWatermanSimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SokalSneathDissimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SokalSneathDissimilarity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SokalSneathDissimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SpearmanRankTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SpearmanRankTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SpearmanRankTest\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SpearmanRho\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SpearmanRho\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SpearmanRho\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SphericalBesselJ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SphericalBesselJ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SphericalBesselJ\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SphericalBesselY\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SphericalBesselY\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SphericalBesselY\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SphericalHankelH1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SphericalHankelH1\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SphericalHankelH1\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SphericalHankelH2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SphericalHankelH2\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SphericalHankelH2\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SquaredEuclideanDistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SquaredEuclideanDistance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SquaredEuclideanDistance\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Star\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Star\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Star\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StarClusterData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StarClusterData\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StarClusterData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StarData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StarData\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StarData\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StarGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StarGraph\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StarGraph\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StartExternalSession\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StartExternalSession\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StartExternalSession\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StartOfLine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StartOfLine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StartOfLine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StartOfString\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StartOfString\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StartOfString\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StartProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StartProcess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StartProcess\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StartWebSession\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StartWebSession\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StartWebSession\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StartingStepSize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StartingStepSize\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StartingStepSize\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StateFeedbackGains\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StateFeedbackGains\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StateFeedbackGains\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StateOutputEstimator\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StateOutputEstimator\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StateOutputEstimator\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StateResponse\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StateResponse\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StateResponse\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StateSpaceModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StateSpaceModel\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StateSpaceModel\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StateSpaceRealization\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"StateSpaceRealization\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StateSpaceRealization\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StateSpaceTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StateSpaceTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StateSpaceTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StateTransformationLinearize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"StateTransformationLinearize\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StateTransformationLinearize\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StationaryDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"StationaryDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StationaryDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StationaryWaveletPacketTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"StationaryWaveletPacketTransform\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StationaryWaveletPacketTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StationaryWaveletTransform\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"StationaryWaveletTransform\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StationaryWaveletTransform\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StatusArea\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StatusArea\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StatusArea\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StatusCentrality\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StatusCentrality\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StatusCentrality\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StepMonitor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StepMonitor\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StepMonitor\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StereochemistryElements\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"StereochemistryElements\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StereochemistryElements\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StieltjesGamma\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StieltjesGamma\""}], 
       "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StieltjesGamma\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StippleShading\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StippleShading\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StippleShading\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StirlingS1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StirlingS1\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StirlingS1\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StirlingS2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StirlingS2\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StirlingS2\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StoppingPowerData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StoppingPowerData\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StoppingPowerData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StrataVariables\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StrataVariables\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StrataVariables\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StratonovichProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StratonovichProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StratonovichProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StraussHardcorePointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"StraussHardcorePointProcess\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StraussHardcorePointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StraussPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StraussPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StraussPointProcess\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StreamColorFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StreamColorFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StreamColorFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StreamColorFunctionScaling\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"StreamColorFunctionScaling\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StreamColorFunctionScaling\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StreamDensityPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StreamDensityPlot\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StreamDensityPlot\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StruveH\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StruveH\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StruveH\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StruveL\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StruveL\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"StruveL\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"StudentTDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"StudentTDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"StudentTDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SuzukiDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SuzukiDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SuzukiDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SuzukiGroupSuz\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SuzukiGroupSuz\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SuzukiGroupSuz\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SymmetrizedReplacePart\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SymmetrizedReplacePart\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SymmetrizedReplacePart\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SynchronousInitialization\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SynchronousInitialization\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SynchronousInitialization\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SynchronousUpdating\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SynchronousUpdating\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SynchronousUpdating\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Synonyms\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Synonyms\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Synonyms\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SyntaxForm\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SyntaxForm\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SyntaxForm\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SyntaxInformation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SyntaxInformation\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SyntaxInformation\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SyntaxLength\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SyntaxLength\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SyntaxLength\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SyntaxPacket\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SyntaxPacket\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SyntaxPacket\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SyntaxQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SyntaxQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SyntaxQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SynthesizeMissingValues\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SynthesizeMissingValues\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SynthesizeMissingValues\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemCredential\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemCredential\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemCredential\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemCredentialData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemCredentialData\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemCredentialData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemCredentialKey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemCredentialKey\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemCredentialKey\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemCredentialKeys\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemCredentialKeys\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemCredentialKeys\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemCredentialStoreObject\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemCredentialStoreObject\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemCredentialStoreObject\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemDialogInput\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemDialogInput\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemDialogInput\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemInformation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemInformation\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemInformation\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemInstall\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemInstall\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemInstall\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemModel\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemModel\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelExamples\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemModelExamples\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelExamples\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelLinearize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemModelLinearize\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelLinearize\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelParametricSimulate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"SystemModelParametricSimulate\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelParametricSimulate\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemModelPlot\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelPlot\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelProgressReporting\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"SystemModelProgressReporting\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelProgressReporting\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelReliability\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemModelReliability\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelReliability\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelSimulate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemModelSimulate\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelSimulate\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelSimulateSensitivity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"SystemModelSimulateSensitivity\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelSimulateSensitivity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModelSimulationData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemModelSimulationData\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemModelSimulationData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModeler\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemModeler\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemModeler\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemModels\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemModels\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemModels\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemOpen\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemOpen\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemOpen\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemOptions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemOptions\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemOptions\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemProcessData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemProcessData\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemProcessData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemProcesses\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemProcesses\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemProcesses\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsConnectionsModel\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemsConnectionsModel\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsConnectionsModel\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelControllerData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemsModelControllerData\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelControllerData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelDelay\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemsModelDelay\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelDelay\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelDelayApproximate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"SystemsModelDelayApproximate\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelDelayApproximate\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelDelete\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemsModelDelete\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemsModelDelete\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelDimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemsModelDimensions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelDimensions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelExtract\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemsModelExtract\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelExtract\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelFeedbackConnect\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemsModelFeedbackConnect\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelFeedbackConnect\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelLabels\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemsModelLabels\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"SystemsModelLabels\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelLinearity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemsModelLinearity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelLinearity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelMerge\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemsModelMerge\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelMerge\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelOrder\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SystemsModelOrder\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelOrder\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelParallelConnect\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemsModelParallelConnect\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelParallelConnect\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelSeriesConnect\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SystemsModelSeriesConnect\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelSeriesConnect\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelStateFeedbackConnect\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"SystemsModelStateFeedbackConnect\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelStateFeedbackConnect\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"SystemsModelVectorRelativeOrders\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"SystemsModelVectorRelativeOrders\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"SystemsModelVectorRelativeOrders\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TTest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TTest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TabView\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TabView\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TabView\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Table\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Table\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Table\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TableAlignments\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TableAlignments\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TableAlignments\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TableDepth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TableDepth\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TableDepth\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TableDirections\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TableDirections\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TableDirections\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TableForm\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TableForm\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TableForm\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TableHeadings\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TableHeadings\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TableHeadings\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TableSpacing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TableSpacing\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TableSpacing\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TableView\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TableView\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TableView\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TagBox\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TagBox\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TagBox\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TagBoxOptions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TagBoxOptions\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TagBoxOptions\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TagSet\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TagSet\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TagSet\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TagSetDelayed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TagSetDelayed\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TagSetDelayed\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TagUnset\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TagUnset\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TagUnset\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaggingRules\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaggingRules\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaggingRules\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Take\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Take\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Take\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TakeDrop\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TakeDrop\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TakeDrop\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TakeLargest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TakeLargest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TakeLargest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TakeLargestBy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TakeLargestBy\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TakeLargestBy\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TakeList\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TakeList\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TakeList\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TakeSmallest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TakeSmallest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TakeSmallest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TakeSmallestBy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TakeSmallestBy\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TakeSmallestBy\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TakeWhile\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TakeWhile\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TakeWhile\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tally\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tally\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tally\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tan\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tan\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tan\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tanh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tanh\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tanh\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TargetDevice\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TargetDevice\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TargetDevice\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TargetFunctions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TargetFunctions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TargetFunctions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TargetSystem\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TargetSystem\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TargetSystem\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TargetUnits\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TargetUnits\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TargetUnits\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaskAbort\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaskAbort\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaskAbort\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaskExecute\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaskExecute\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaskExecute\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaskObject\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaskObject\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaskObject\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaskRemove\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaskRemove\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaskRemove\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaskResume\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaskResume\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaskResume\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaskSuspend\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaskSuspend\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaskSuspend\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TaskWait\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TaskWait\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TaskWait\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tasks\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Tasks\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Tasks\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TautologyQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TautologyQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TautologyQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TeXForm\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TeXForm\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TeXForm\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TelegraphProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TelegraphProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TelegraphProcess\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateApply\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateApply\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateApply\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateBox\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateBox\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateBox\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateBoxOptions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateBoxOptions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateBoxOptions\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateExpression\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateExpression\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateExpression\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateIf\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateIf\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateIf\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateObject\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateObject\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TemplateObject\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateSequence\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateSequence\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateSequence\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateSlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateSlot\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateSlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemplateWith\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemplateWith\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemplateWith\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemporalData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemporalData\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemporalData\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TemporalRegularity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TemporalRegularity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TemporalRegularity\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Temporary\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Temporary\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Temporary\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TensorContract\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TensorContract\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TensorContract\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TensorDimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TensorDimensions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TensorDimensions\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TensorExpand\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TensorExpand\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TensorExpand\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TensorProduct\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TensorProduct\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TensorProduct\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TensorRank\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TensorRank\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TensorRank\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ThomasPointProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ThomasPointProcess\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ThomasPointProcess\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ThompsonGroupTh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ThompsonGroupTh\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ThompsonGroupTh\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ThueMorse\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ThueMorse\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ThueMorse\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TitsGroupT\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TitsGroupT\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TitsGroupT\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ToeplitzMatrix\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ToeplitzMatrix\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"ToeplitzMatrix\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TracyWidomDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"TracyWidomDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TracyWidomDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TsallisQExponentialDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"TsallisQExponentialDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TsallisQExponentialDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TsallisQGaussianDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"TsallisQGaussianDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TsallisQGaussianDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TukeyLambdaDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"TukeyLambdaDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TukeyLambdaDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TukeyWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TukeyWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TukeyWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TuranGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TuranGraph\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TuranGraph\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TuringMachine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TuringMachine\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"TuringMachine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"TuttePolynomial\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TuttePolynomial\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"TuttePolynomial\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorAngle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorAngle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorAngle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorAround\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorAround\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorAround\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorAspectRatio\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorAspectRatio\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorAspectRatio\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorColorFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorColorFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorColorFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorColorFunctionScaling\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VectorColorFunctionScaling\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorColorFunctionScaling\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorDensityPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorDensityPlot\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorDensityPlot\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorDisplacementPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VectorDisplacementPlot\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorDisplacementPlot\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorDisplacementPlot3D\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VectorDisplacementPlot3D\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorDisplacementPlot3D\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorGreater\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorGreater\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorGreater\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorGreaterEqual\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorGreaterEqual\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorGreaterEqual\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorLess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorLess\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorLess\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorLessEqual\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorLessEqual\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VectorLessEqual\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorMarkers\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorMarkers\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorMarkers\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorPlot\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorPlot\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorPlot\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorPlot3D\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorPlot3D\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorPlot3D\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorPoints\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorPoints\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorPoints\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorRange\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorRange\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorRange\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorScaling\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorScaling\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorScaling\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorSizes\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorSizes\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorSizes\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VectorStyle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VectorStyle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VectorStyle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vectors\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Vectors\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Vectors\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vee\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Vee\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Vee\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Verbatim\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Verbatim\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Verbatim\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerificationTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerificationTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VerificationTest\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifyConvergence\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerifyConvergence\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerifyConvergence\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifyDerivedKey\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerifyDerivedKey\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VerifyDerivedKey\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifyDigitalSignature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VerifyDigitalSignature\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerifyDigitalSignature\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifyFileSignature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerifyFileSignature\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerifyFileSignature\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifyInterpretation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerifyInterpretation\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerifyInterpretation\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifySecurityCertificates\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VerifySecurityCertificates\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerifySecurityCertificates\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifySolutions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerifySolutions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerifySolutions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerifyTestAssumptions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VerifyTestAssumptions\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerifyTestAssumptions\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VersionedPreferences\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionedPreferences\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VersionedPreferences\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexAdd\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexAdd\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexAdd\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexCapacity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexCapacity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexCapacity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexChromaticNumber\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexChromaticNumber\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexChromaticNumber\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexColors\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexColors\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexColors\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexComponent\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexComponent\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexComponent\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexConnectivity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexConnectivity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexConnectivity\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexContract\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexContract\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexContract\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexCoordinates\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexCoordinates\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexCoordinates\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexCorrelationSimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexCorrelationSimilarity\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexCorrelationSimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexCosineSimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexCosineSimilarity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexCosineSimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexCount\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexCount\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexCount\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexCoverQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexCoverQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexCoverQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexDataCoordinates\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexDataCoordinates\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexDataCoordinates\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexDegree\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexDegree\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexDegree\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexDelete\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexDelete\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexDelete\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexDiceSimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexDiceSimilarity\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexDiceSimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexEccentricity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexEccentricity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexEccentricity\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexInComponent\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexInComponent\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexInComponent\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexInComponentGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexInComponentGraph\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexInComponentGraph\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexInDegree\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexInDegree\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexInDegree\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexIndex\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexIndex\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexIndex\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexJaccardSimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexJaccardSimilarity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexJaccardSimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexLabelStyle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexLabelStyle\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexLabelStyle\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexLabels\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexLabels\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexLabels\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexList\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexList\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexList\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexNormals\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexNormals\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexNormals\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexOutComponent\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexOutComponent\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexOutComponent\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexOutComponentGraph\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexOutComponentGraph\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexOutComponentGraph\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexOutDegree\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexOutDegree\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexOutDegree\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexReplace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexReplace\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexReplace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexShape\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexShape\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexShape\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexShapeFunction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexShapeFunction\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexShapeFunction\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexSize\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexSize\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexSize\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexStyle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexStyle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexStyle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexTextureCoordinates\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexTextureCoordinates\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexTextureCoordinates\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexTransitiveGraphQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"VertexTransitiveGraphQ\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexTransitiveGraphQ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexWeight\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexWeight\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VertexWeight\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VertexWeightedGraphQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VertexWeightedGraphQ\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VertexWeightedGraphQ\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerticalBar\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerticalBar\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VerticalBar\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerticalGauge\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerticalGauge\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VerticalGauge\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerticalSeparator\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerticalSeparator\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerticalSeparator\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerticalSlider\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerticalSlider\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VerticalSlider\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VerticalTilde\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VerticalTilde\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VerticalTilde\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Video\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Video\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Video\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoCombine\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoCombine\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoCombine\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoDelete\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoDelete\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoDelete\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoEncoding\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoEncoding\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoEncoding\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoExtractFrames\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoExtractFrames\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoExtractFrames\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoFrameList\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoFrameList\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VideoFrameList\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoFrameMap\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoFrameMap\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoFrameMap\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoGenerator\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoGenerator\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VideoGenerator\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoInsert\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoInsert\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoInsert\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoIntervals\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoIntervals\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VideoIntervals\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoJoin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoJoin\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoJoin\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoMap\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoMap\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoMap\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoMapList\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoMapList\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoMapList\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoMapTimeSeries\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoMapTimeSeries\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoMapTimeSeries\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoPause\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoPause\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoPause\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoPlay\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoPlay\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoPlay\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoQ\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoQ\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoQ\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoRecord\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoRecord\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoRecord\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoReplace\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoReplace\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoReplace\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoSplit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoSplit\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoSplit\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoStop\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoStop\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoStop\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoStream\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoStream\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoStream\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoStreams\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoStreams\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoStreams\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoTimeStretch\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoTimeStretch\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoTimeStretch\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoTrackSelection\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoTrackSelection\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VideoTrackSelection\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoTranscode\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoTranscode\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VideoTranscode\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VideoTrim\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VideoTrim\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VideoTrim\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ViewAngle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ViewAngle\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ViewAngle\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ViewCenter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ViewCenter\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ViewCenter\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VoigtDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VoigtDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VoigtDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VonMisesDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VonMisesDistribution\""}],
        "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"VonMisesDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"VoronoiMesh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VoronoiMesh\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"VoronoiMesh\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WakebyDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WakebyDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WakebyDistribution\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WalleniusHypergeometricDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"WalleniusHypergeometricDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WalleniusHypergeometricDistribution\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WaringYuleDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WaringYuleDistribution\""}], 
       "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WaringYuleDistribution\\\"]\
\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WatsonUSquareTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WatsonUSquareTest\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WatsonUSquareTest\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WattsStrogatzGraphDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"WattsStrogatzGraphDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WattsStrogatzGraphDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeberE\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeberE\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WeberE\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeibullDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeibullDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeibullDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassE1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassE1\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WeierstrassE1\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassE2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassE2\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WeierstrassE2\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassE3\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassE3\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WeierstrassE3\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassEta1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassEta1\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassEta1\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassEta2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassEta2\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassEta2\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassEta3\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassEta3\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassEta3\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassHalfPeriodW1\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WeierstrassHalfPeriodW1\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassHalfPeriodW1\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassHalfPeriodW2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WeierstrassHalfPeriodW2\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassHalfPeriodW2\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassHalfPeriodW3\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WeierstrassHalfPeriodW3\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassHalfPeriodW3\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassHalfPeriods\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WeierstrassHalfPeriods\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassHalfPeriods\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassInvariantG2\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WeierstrassInvariantG2\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassInvariantG2\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassInvariantG3\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WeierstrassInvariantG3\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassInvariantG3\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassInvariants\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WeierstrassInvariants\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassInvariants\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassP\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassP\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WeierstrassP\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassPPrime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassPPrime\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassPPrime\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassSigma\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassSigma\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WeierstrassSigma\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WeierstrassZeta\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WeierstrassZeta\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WeierstrassZeta\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WelchWindow\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WelchWindow\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WelchWindow\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WhittakerM\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WhittakerM\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WhittakerM\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WhittakerW\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WhittakerW\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WhittakerW\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WienerFilter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WienerFilter\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WienerFilter\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WienerProcess\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WienerProcess\""}], "]"}],
      "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WienerProcess\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WignerD\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WignerD\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WignerD\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WignerSemicircleDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", 
         "\"WignerSemicircleDistribution\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WignerSemicircleDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WilksW\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WilksW\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WilksW\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WilksWTest\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WilksWTest\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WilksWTest\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WinsorizedMean\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WinsorizedMean\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WinsorizedMean\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WinsorizedVariance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WinsorizedVariance\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WinsorizedVariance\
\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WishartMatrixDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WishartMatrixDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WishartMatrixDistribution\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WolframAlpha\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WolframAlpha\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"WolframAlpha\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"WolframLanguageData\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"WolframLanguageData\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"WolframLanguageData\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wronskian\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Wronskian\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"Wronskian\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"YuleDissimilarity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"YuleDissimilarity\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"YuleDissimilarity\\\"]\"", "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ZernikeR\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ZernikeR\""}], "]"}], 
     "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ZernikeR\\\"]\"", 
     "\"Wolfram Language symbol\""},
    "Entity"], ",", 
   TemplateBox[{"\"ZipfDistribution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ZipfDistribution\""}], 
       "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \\\"ZipfDistribution\\\
\"]\"", "\"Wolfram Language symbol\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8701982403631434`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"ab514dac-f2d4-454e-86f6-3a57ea7af626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalName", "[", "%55", "]"}]], "Input",
 CellChangeTimes->{{3.870198302483848*^9, 3.8701983193947706`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"1ac7db1d-7c9a-401e-ab3e-8506bfd8ef29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"$RequesterWolframID\"\>", ",", "\<\"$RequesterWolframUUID\"\>",
    ",", "\<\"$WolframID\"\>", ",", "\<\"$WolframUUID\"\>", 
   ",", "\<\"AbelianGroup\"\>", ",", "\<\"AiryAi\"\>", 
   ",", "\<\"AiryAiPrime\"\>", ",", "\<\"AiryAiZero\"\>", 
   ",", "\<\"AiryBi\"\>", ",", "\<\"AiryBiPrime\"\>", 
   ",", "\<\"AiryBiZero\"\>", ",", "\<\"AndersonDarlingTest\"\>", 
   ",", "\<\"AngerJ\"\>", ",", "\<\"Antihermitian\"\>", 
   ",", "\<\"AntihermitianMatrixQ\"\>", ",", "\<\"AppellF1\"\>", 
   ",", "\<\"BarabasiAlbertGraphDistribution\"\>", 
   ",", "\<\"BaringhausHenzeTest\"\>", 
   ",", "\<\"BarlowProschanImportance\"\>", ",", "\<\"BarnesG\"\>", 
   ",", "\<\"BartlettHannWindow\"\>", ",", "\<\"BartlettWindow\"\>", 
   ",", "\<\"BatesDistribution\"\>", ",", "\<\"BattleLemarieWavelet\"\>", 
   ",", "\<\"BayesianMaximization\"\>", 
   ",", "\<\"BayesianMaximizationObject\"\>", 
   ",", "\<\"BayesianMinimization\"\>", 
   ",", "\<\"BayesianMinimizationObject\"\>", 
   ",", "\<\"BeckmannDistribution\"\>", ",", "\<\"BellB\"\>", 
   ",", "\<\"BellY\"\>", ",", "\<\"BenfordDistribution\"\>", 
   ",", "\<\"BeniniDistribution\"\>", 
   ",", "\<\"BenktanderGibratDistribution\"\>", 
   ",", "\<\"BenktanderWeibullDistribution\"\>", ",", "\<\"BernoulliB\"\>", 
   ",", "\<\"BernoulliDistribution\"\>", 
   ",", "\<\"BernoulliGraphDistribution\"\>", ",", "\<\"BernoulliProcess\"\>",
    ",", "\<\"BernsteinBasis\"\>", ",", "\<\"BesagL\"\>", 
   ",", "\<\"BesselFilterModel\"\>", ",", "\<\"BesselI\"\>", 
   ",", "\<\"BesselJ\"\>", ",", "\<\"BesselJZero\"\>", ",", "\<\"BesselK\"\>",
    ",", "\<\"BesselY\"\>", ",", "\<\"BesselYZero\"\>", 
   ",", "\<\"BezierCurve\"\>", ",", "\<\"BezierFunction\"\>", 
   ",", "\<\"BilateralLaplaceTransform\"\>", 
   ",", "\<\"BirnbaumImportance\"\>", 
   ",", "\<\"BirnbaumSaundersDistribution\"\>", 
   ",", "\<\"BlackmanHarrisWindow\"\>", ",", "\<\"BlackmanNuttallWindow\"\>", 
   ",", "\<\"BlackmanWindow\"\>", ",", "\<\"BlomqvistBeta\"\>", 
   ",", "\<\"BlomqvistBetaTest\"\>", ",", "\<\"BodePlot\"\>", 
   ",", "\<\"BohmanWindow\"\>", ",", "\<\"Boole\"\>", 
   ",", "\<\"BooleanConsecutiveFunction\"\>", ",", "\<\"BooleanConvert\"\>", 
   ",", "\<\"BooleanCountingFunction\"\>", ",", "\<\"BooleanFunction\"\>", 
   ",", "\<\"BooleanGraph\"\>", ",", "\<\"BooleanMaxterms\"\>", 
   ",", "\<\"BooleanMinimize\"\>", ",", "\<\"BooleanMinterms\"\>", 
   ",", "\<\"BooleanQ\"\>", ",", "\<\"BooleanRegion\"\>", 
   ",", "\<\"BooleanStrings\"\>", ",", "\<\"BooleanTable\"\>", 
   ",", "\<\"BooleanVariables\"\>", ",", "\<\"Booleans\"\>", 
   ",", "\<\"BorelTannerDistribution\"\>", ",", "\<\"BrayCurtisDistance\"\>", 
   ",", "\<\"BrownForsytheTest\"\>", ",", "\<\"BrownianBridgeProcess\"\>", 
   ",", "\<\"ButterworthFilterModel\"\>", ",", "\<\"CantorMesh\"\>", 
   ",", "\<\"CantorStaircase\"\>", ",", "\<\"CarlemanLinearize\"\>", 
   ",", "\<\"CarlsonRC\"\>", ",", "\<\"CarlsonRD\"\>", 
   ",", "\<\"CarlsonRE\"\>", ",", "\<\"CarlsonRF\"\>", 
   ",", "\<\"CarlsonRG\"\>", ",", "\<\"CarlsonRJ\"\>", 
   ",", "\<\"CarlsonRK\"\>", ",", "\<\"CarlsonRM\"\>", 
   ",", "\<\"CarmichaelLambda\"\>", ",", "\<\"Casoratian\"\>", 
   ",", "\<\"Catalan\"\>", ",", "\<\"CatalanNumber\"\>", 
   ",", "\<\"CauchyDistribution\"\>", ",", "\<\"CauchyPointProcess\"\>", 
   ",", "\<\"CauchyWindow\"\>", ",", "\<\"CayleyGraph\"\>", 
   ",", "\<\"ChampernowneNumber\"\>", ",", "\<\"ChanVeseBinarize\"\>", 
   ",", "\<\"Chebyshev1FilterModel\"\>", ",", "\<\"Chebyshev2FilterModel\"\>",
    ",", "\<\"ChebyshevT\"\>", ",", "\<\"ChebyshevU\"\>", 
   ",", "\<\"CholeskyDecomposition\"\>", ",", "\<\"ClebschGordan\"\>", 
   ",", "\<\"CoifletWavelet\"\>", ",", "\<\"CompoundPoissonDistribution\"\>", 
   ",", "\<\"CompoundPoissonProcess\"\>", ",", "\<\"ConnesWindow\"\>", 
   ",", "\<\"ConoverTest\"\>", ",", "\<\"ContinuousMarkovProcess\"\>", 
   ",", "\<\"ConwayGroupCo1\"\>", ",", "\<\"ConwayGroupCo2\"\>", 
   ",", "\<\"ConwayGroupCo3\"\>", ",", "\<\"CoulombF\"\>", 
   ",", "\<\"CoulombG\"\>", ",", "\<\"CoulombH1\"\>", 
   ",", "\<\"CoulombH2\"\>", ",", "\<\"CoxIngersollRossProcess\"\>", 
   ",", "\<\"CoxModel\"\>", ",", "\<\"CoxModelFit\"\>", 
   ",", "\<\"CoxianDistribution\"\>", ",", "\<\"CramerVonMisesTest\"\>", 
   ",", "\<\"DGaussianWavelet\"\>", ",", "\<\"DagumDistribution\"\>", 
   ",", "\<\"DamerauLevenshteinDistance\"\>", 
   ",", "\<\"DaubechiesWavelet\"\>", ",", "\<\"DavisDistribution\"\>", 
   ",", "\<\"DawsonF\"\>", ",", "\<\"DeBruijnGraph\"\>", 
   ",", "\<\"DeBruijnSequence\"\>", ",", "\<\"DedekindEta\"\>", 
   ",", "\<\"DelaunayMesh\"\>", ",", "\<\"DiggleGatesPointProcess\"\>", 
   ",", "\<\"DiggleGrattonPointProcess\"\>", ",", "\<\"DiracComb\"\>", 
   ",", "\<\"DiracDelta\"\>", ",", "\<\"DirichletBeta\"\>", 
   ",", "\<\"DirichletCharacter\"\>", ",", "\<\"DirichletCondition\"\>", 
   ",", "\<\"DirichletConvolve\"\>", ",", "\<\"DirichletDistribution\"\>", 
   ",", "\<\"DirichletEta\"\>", ",", "\<\"DirichletL\"\>", 
   ",", "\<\"DirichletLambda\"\>", ",", "\<\"DirichletTransform\"\>", 
   ",", "\<\"DirichletWindow\"\>", ",", "\<\"DiscreteHadamardTransform\"\>", 
   ",", "\<\"DiscreteLyapunovSolve\"\>", ",", "\<\"DiscreteMarkovProcess\"\>",
    ",", "\<\"DiscreteRiccatiSolve\"\>", ",", "\<\"DrazinInverse\"\>", 
   ",", "\<\"ErlangB\"\>", ",", "\<\"ErlangC\"\>", 
   ",", "\<\"ErlangDistribution\"\>", ",", "\<\"EuclideanDistance\"\>", 
   ",", "\<\"EulerAngles\"\>", ",", "\<\"EulerCharacteristic\"\>", 
   ",", "\<\"EulerE\"\>", ",", "\<\"EulerGamma\"\>", 
   ",", "\<\"EulerMatrix\"\>", ",", "\<\"EulerPhi\"\>", 
   ",", "\<\"EulerianGraphQ\"\>", ",", "\<\"ExactBlackmanWindow\"\>", 
   ",", "\<\"FareySequence\"\>", ",", "\<\"Fibonacci\"\>", 
   ",", "\<\"Fibonorial\"\>", ",", "\<\"FindEulerianCycle\"\>", 
   ",", "\<\"FindHamiltonianCycle\"\>", ",", "\<\"FindHamiltonianPath\"\>", 
   ",", "\<\"FindHiddenMarkovStates\"\>", 
   ",", "\<\"FiniteAbelianGroupCount\"\>", ",", "\<\"FischerGroupFi22\"\>", 
   ",", "\<\"FischerGroupFi23\"\>", ",", "\<\"FischerGroupFi24Prime\"\>", 
   ",", "\<\"FisherHypergeometricDistribution\"\>", 
   ",", "\<\"FisherRatioTest\"\>", ",", "\<\"FisherZDistribution\"\>", 
   ",", "\<\"Fourier\"\>", ",", "\<\"FourierCoefficient\"\>", 
   ",", "\<\"FourierCosCoefficient\"\>", ",", "\<\"FourierCosSeries\"\>", 
   ",", "\<\"FourierCosTransform\"\>", ",", "\<\"FourierDCT\"\>", 
   ",", "\<\"FourierDCTFilter\"\>", ",", "\<\"FourierDCTMatrix\"\>", 
   ",", "\<\"FourierDST\"\>", ",", "\<\"FourierDSTMatrix\"\>", 
   ",", "\<\"FourierMatrix\"\>", ",", "\<\"FourierParameters\"\>", 
   ",", "\<\"FourierSequenceTransform\"\>", ",", "\<\"FourierSeries\"\>", 
   ",", "\<\"FourierSinCoefficient\"\>", ",", "\<\"FourierSinSeries\"\>", 
   ",", "\<\"FourierSinTransform\"\>", ",", "\<\"FourierTransform\"\>", 
   ",", "\<\"FourierTrigSeries\"\>", ",", "\<\"FoxH\"\>", 
   ",", "\<\"FoxHReduce\"\>", ",", "\<\"FractionalBrownianMotionProcess\"\>", 
   ",", "\<\"FractionalGaussianNoiseProcess\"\>", 
   ",", "\<\"FrechetDistribution\"\>", ",", "\<\"FrenetSerretSystem\"\>", 
   ",", "\<\"FresnelC\"\>", ",", "\<\"FresnelF\"\>", ",", "\<\"FresnelG\"\>", 
   ",", "\<\"FresnelS\"\>", ",", "\<\"FrobeniusNumber\"\>", 
   ",", "\<\"FrobeniusSolve\"\>", ",", "\<\"FromJulianDate\"\>", 
   ",", "\<\"FussellVeselyImportance\"\>", ",", "\<\"GaborFilter\"\>", 
   ",", "\<\"GaborMatrix\"\>", ",", "\<\"GaborWavelet\"\>", 
   ",", "\<\"GaussianFilter\"\>", ",", "\<\"GaussianIntegers\"\>", 
   ",", "\<\"GaussianMatrix\"\>", 
   ",", "\<\"GaussianOrthogonalMatrixDistribution\"\>", 
   ",", "\<\"GaussianSymplecticMatrixDistribution\"\>", 
   ",", "\<\"GaussianUnitaryMatrixDistribution\"\>", 
   ",", "\<\"GaussianWindow\"\>", ",", "\<\"GegenbauerC\"\>", 
   ",", "\<\"GeometricBrownianMotionProcess\"\>", 
   ",", "\<\"GibbsPointProcess\"\>", ",", "\<\"Glaisher\"\>", 
   ",", "\<\"GompertzMakehamDistribution\"\>", ",", "\<\"GoochShading\"\>", 
   ",", "\<\"GoodmanKruskalGamma\"\>", ",", "\<\"GoodmanKruskalGammaTest\"\>",
    ",", "\<\"GreenFunction\"\>", ",", "\<\"GroebnerBasis\"\>", 
   ",", "\<\"Gudermannian\"\>", ",", "\<\"GumbelDistribution\"\>", 
   ",", "\<\"HaarWavelet\"\>", ",", "\<\"HadamardMatrix\"\>", 
   ",", "\<\"HamiltonianGraphQ\"\>", ",", "\<\"HammingDistance\"\>", 
   ",", "\<\"HammingWindow\"\>", ",", "\<\"HankelH1\"\>", 
   ",", "\<\"HankelH2\"\>", ",", "\<\"HankelMatrix\"\>", 
   ",", "\<\"HankelTransform\"\>", ",", "\<\"HannPoissonWindow\"\>", 
   ",", "\<\"HannWindow\"\>", ",", "\<\"HaradaNortonGroupHN\"\>", 
   ",", "\<\"HararyGraph\"\>", ",", "\<\"HeavisideLambda\"\>", 
   ",", "\<\"HeavisidePi\"\>", ",", "\<\"HeavisideTheta\"\>", 
   ",", "\<\"HeldGroupHe\"\>", ",", "\<\"HelmholtzPDEComponent\"\>", 
   ",", "\<\"HermiteDecomposition\"\>", ",", "\<\"HermiteH\"\>", 
   ",", "\<\"Hermitian\"\>", ",", "\<\"HermitianMatrixQ\"\>", 
   ",", "\<\"HessenbergDecomposition\"\>", ",", "\<\"HeunB\"\>", 
   ",", "\<\"HeunBPrime\"\>", ",", "\<\"HeunC\"\>", ",", "\<\"HeunCPrime\"\>",
    ",", "\<\"HeunD\"\>", ",", "\<\"HeunDPrime\"\>", ",", "\<\"HeunG\"\>", 
   ",", "\<\"HeunGPrime\"\>", ",", "\<\"HeunT\"\>", ",", "\<\"HeunTPrime\"\>",
    ",", "\<\"HiddenMarkovProcess\"\>", ",", "\<\"HigmanSimsGroupHS\"\>", 
   ",", "\<\"HilbertCurve\"\>", ",", "\<\"HilbertFilter\"\>", 
   ",", "\<\"HilbertMatrix\"\>", ",", "\<\"HjorthDistribution\"\>", 
   ",", "\<\"HodgeDual\"\>", ",", "\<\"HoeffdingD\"\>", 
   ",", "\<\"HoeffdingDTest\"\>", ",", "\<\"HornerForm\"\>", 
   ",", "\<\"HotellingTSquareDistribution\"\>", 
   ",", "\<\"HoytDistribution\"\>", ",", "\<\"HurwitzLerchPhi\"\>", 
   ",", "\<\"HurwitzZeta\"\>", 
   ",", "\<\"InhomogeneousPoissonPointProcess\"\>", 
   ",", "\<\"InverseBilateralLaplaceTransform\"\>", 
   ",", "\<\"InverseFourier\"\>", ",", "\<\"InverseFourierCosTransform\"\>", 
   ",", "\<\"InverseFourierSequenceTransform\"\>", 
   ",", "\<\"InverseFourierSinTransform\"\>", 
   ",", "\<\"InverseFourierTransform\"\>", 
   ",", "\<\"InverseGaussianDistribution\"\>", 
   ",", "\<\"InverseGudermannian\"\>", ",", "\<\"InverseHankelTransform\"\>", 
   ",", "\<\"InverseJacobiCD\"\>", ",", "\<\"InverseJacobiCN\"\>", 
   ",", "\<\"InverseJacobiCS\"\>", ",", "\<\"InverseJacobiDC\"\>", 
   ",", "\<\"InverseJacobiDN\"\>", ",", "\<\"InverseJacobiDS\"\>", 
   ",", "\<\"InverseJacobiNC\"\>", ",", "\<\"InverseJacobiND\"\>", 
   ",", "\<\"InverseJacobiNS\"\>", ",", "\<\"InverseJacobiSC\"\>", 
   ",", "\<\"InverseJacobiSD\"\>", ",", "\<\"InverseJacobiSN\"\>", 
   ",", "\<\"InverseLaplaceTransform\"\>", 
   ",", "\<\"InverseMellinTransform\"\>", ",", "\<\"InverseRadon\"\>", 
   ",", "\<\"InverseRadonTransform\"\>", 
   ",", "\<\"InverseShortTimeFourier\"\>", ",", "\<\"InverseWeierstrassP\"\>",
    ",", "\<\"InverseWishartMatrixDistribution\"\>", 
   ",", "\<\"ItoProcess\"\>", ",", "\<\"JaccardDissimilarity\"\>", 
   ",", "\<\"JacobiAmplitude\"\>", ",", "\<\"JacobiCD\"\>", 
   ",", "\<\"JacobiCN\"\>", ",", "\<\"JacobiCS\"\>", ",", "\<\"JacobiDC\"\>", 
   ",", "\<\"JacobiDN\"\>", ",", "\<\"JacobiDS\"\>", 
   ",", "\<\"JacobiEpsilon\"\>", ",", "\<\"JacobiNC\"\>", 
   ",", "\<\"JacobiND\"\>", ",", "\<\"JacobiNS\"\>", ",", "\<\"JacobiP\"\>", 
   ",", "\<\"JacobiSC\"\>", ",", "\<\"JacobiSD\"\>", ",", "\<\"JacobiSN\"\>", 
   ",", "\<\"JacobiSymbol\"\>", ",", "\<\"JacobiZN\"\>", 
   ",", "\<\"JacobiZeta\"\>", ",", "\<\"JankoGroupJ1\"\>", 
   ",", "\<\"JankoGroupJ2\"\>", ",", "\<\"JankoGroupJ3\"\>", 
   ",", "\<\"JankoGroupJ4\"\>", ",", "\<\"JarqueBeraALMTest\"\>", 
   ",", "\<\"JohnsonDistribution\"\>", ",", "\<\"JordanDecomposition\"\>", 
   ",", "\<\"JordanModelDecomposition\"\>", ",", "\<\"JuliaSetBoettcher\"\>", 
   ",", "\<\"JuliaSetIterationCount\"\>", ",", "\<\"JuliaSetPlot\"\>", 
   ",", "\<\"JuliaSetPoints\"\>", ",", "\<\"JulianDate\"\>", 
   ",", "\<\"KaiserBesselWindow\"\>", ",", "\<\"KaiserWindow\"\>", 
   ",", "\<\"KalmanEstimator\"\>", ",", "\<\"KalmanFilter\"\>", 
   ",", "\<\"KarhunenLoeveDecomposition\"\>", ",", "\<\"KatzCentrality\"\>", 
   ",", "\<\"KelvinBei\"\>", ",", "\<\"KelvinBer\"\>", 
   ",", "\<\"KelvinKei\"\>", ",", "\<\"KelvinKer\"\>", 
   ",", "\<\"KendallTau\"\>", ",", "\<\"KendallTauTest\"\>", 
   ",", "\<\"Khinchin\"\>", ",", "\<\"KirchhoffGraph\"\>", 
   ",", "\<\"KirchhoffMatrix\"\>", ",", "\<\"KleinInvariantJ\"\>", 
   ",", "\<\"KochCurve\"\>", ",", "\<\"KolmogorovSmirnovTest\"\>", 
   ",", "\<\"KroneckerDelta\"\>", ",", "\<\"KroneckerModelDecomposition\"\>", 
   ",", "\<\"KroneckerProduct\"\>", ",", "\<\"KroneckerSymbol\"\>", 
   ",", "\<\"KuiperTest\"\>", ",", "\<\"KumaraswamyDistribution\"\>", 
   ",", "\<\"KuwaharaFilter\"\>", ",", "\<\"LaguerreL\"\>", 
   ",", "\<\"LameC\"\>", ",", "\<\"LameCPrime\"\>", 
   ",", "\<\"LameEigenvalueA\"\>", ",", "\<\"LameEigenvalueB\"\>", 
   ",", "\<\"LameS\"\>", ",", "\<\"LameSPrime\"\>", 
   ",", "\<\"LanczosWindow\"\>", ",", "\<\"LandauDistribution\"\>", 
   ",", "\<\"LaplaceDistribution\"\>", ",", "\<\"LaplaceTransform\"\>", 
   ",", "\<\"Laplacian\"\>", ",", "\<\"LaplacianFilter\"\>", 
   ",", "\<\"LaplacianGaussianFilter\"\>", ",", "\<\"LaplacianPDETerm\"\>", 
   ",", "\<\"LegendreP\"\>", ",", "\<\"LegendreQ\"\>", 
   ",", "\<\"LerchPhi\"\>", ",", "\<\"LeveneTest\"\>", 
   ",", "\<\"LeviCivitaTensor\"\>", ",", "\<\"LevyDistribution\"\>", 
   ",", "\<\"LindleyDistribution\"\>", ",", "\<\"LiouvilleLambda\"\>", 
   ",", "\<\"ListFourierSequenceTransform\"\>", ",", "\<\"LogBarnesG\"\>", 
   ",", "\<\"LucasL\"\>", ",", "\<\"LuccioSamiComponents\"\>", 
   ",", "\<\"LyapunovSolve\"\>", ",", "\<\"LyonsGroupLy\"\>", 
   ",", "\<\"MandelbrotSetBoettcher\"\>", 
   ",", "\<\"MandelbrotSetDistance\"\>", 
   ",", "\<\"MandelbrotSetIterationCount\"\>", 
   ",", "\<\"MandelbrotSetMemberQ\"\>", ",", "\<\"MandelbrotSetPlot\"\>", 
   ",", "\<\"MangoldtLambda\"\>", ",", "\<\"MannWhitneyTest\"\>", 
   ",", "\<\"MarchenkoPasturDistribution\"\>", ",", "\<\"MarcumQ\"\>", 
   ",", "\<\"MardiaCombinedTest\"\>", ",", "\<\"MardiaKurtosisTest\"\>", 
   ",", "\<\"MardiaSkewnessTest\"\>", ",", "\<\"MarkovProcessProperties\"\>", 
   ",", "\<\"MaternPointProcess\"\>", ",", "\<\"MathieuC\"\>", 
   ",", "\<\"MathieuCPrime\"\>", ",", "\<\"MathieuCharacteristicA\"\>", 
   ",", "\<\"MathieuCharacteristicB\"\>", 
   ",", "\<\"MathieuCharacteristicExponent\"\>", 
   ",", "\<\"MathieuGroupM11\"\>", ",", "\<\"MathieuGroupM12\"\>", 
   ",", "\<\"MathieuGroupM22\"\>", ",", "\<\"MathieuGroupM23\"\>", 
   ",", "\<\"MathieuGroupM24\"\>", ",", "\<\"MathieuS\"\>", 
   ",", "\<\"MathieuSPrime\"\>", ",", "\<\"MaxwellDistribution\"\>", 
   ",", "\<\"McLaughlinGroupMcL\"\>", ",", "\<\"MeijerG\"\>", 
   ",", "\<\"MeijerGReduce\"\>", ",", "\<\"MeixnerDistribution\"\>", 
   ",", "\<\"MellinConvolve\"\>", ",", "\<\"MellinTransform\"\>", 
   ",", "\<\"MengerMesh\"\>", ",", "\<\"MersennePrimeExponent\"\>", 
   ",", "\<\"MersennePrimeExponentQ\"\>", ",", "\<\"MeyerWavelet\"\>", 
   ",", "\<\"MinkowskiQuestionMark\"\>", ",", "\<\"MittagLefflerE\"\>", 
   ",", "\<\"MoebiusMu\"\>", ",", "\<\"MorletWavelet\"\>", 
   ",", "\<\"MorphologicalEulerNumber\"\>", ",", "\<\"MoyalDistribution\"\>", 
   ",", "\<\"MultivariatePoissonDistribution\"\>", 
   ",", "\<\"NakagamiDistribution\"\>", 
   ",", "\<\"NeedlemanWunschSimilarity\"\>", ",", "\<\"NeumannValue\"\>", 
   ",", "\<\"NevilleThetaC\"\>", ",", "\<\"NevilleThetaD\"\>", 
   ",", "\<\"NevilleThetaN\"\>", ",", "\<\"NevilleThetaS\"\>", 
   ",", "\<\"NeymanScottPointProcess\"\>", ",", "\<\"NicholsGridLines\"\>", 
   ",", "\<\"NicholsPlot\"\>", ",", "\<\"NoncentralStudentTDistribution\"\>", 
   ",", "\<\"NorlundB\"\>", ",", "\<\"NormalizedSquaredEuclideanDistance\"\>",
    ",", "\<\"NuttallWindow\"\>", ",", "\<\"NyquistGridLines\"\>", 
   ",", "\<\"NyquistPlot\"\>", ",", "\<\"ONanGroupON\"\>", 
   ",", "\<\"OrnsteinUhlenbeckProcess\"\>", ",", "\<\"OwenT\"\>", 
   ",", "\<\"PadeApproximant\"\>", ",", "\<\"ParetoDistribution\"\>", 
   ",", "\<\"ParetoPickandsDistribution\"\>", ",", "\<\"ParzenWindow\"\>", 
   ",", "\<\"PascalDistribution\"\>", ",", "\<\"PaulWavelet\"\>", 
   ",", "\<\"PauliMatrix\"\>", ",", "\<\"PeanoCurve\"\>", 
   ",", "\<\"PearsonChiSquareTest\"\>", ",", "\<\"PearsonCorrelationTest\"\>",
    ",", "\<\"PearsonDistribution\"\>", ",", "\<\"PenttinenPointProcess\"\>", 
   ",", "\<\"PeronaMalikFilter\"\>", ",", "\<\"PetersenGraph\"\>", 
   ",", "\<\"PillaiTrace\"\>", ",", "\<\"PillaiTraceTest\"\>", 
   ",", "\<\"PlanckRadiationLaw\"\>", ",", "\<\"Pochhammer\"\>", 
   ",", "\<\"PoissonConsulDistribution\"\>", 
   ",", "\<\"PoissonDistribution\"\>", ",", "\<\"PoissonPDEComponent\"\>", 
   ",", "\<\"PoissonPointProcess\"\>", ",", "\<\"PoissonProcess\"\>", 
   ",", "\<\"PoissonWindow\"\>", ",", "\<\"PolyaAeppliDistribution\"\>", 
   ",", "\<\"PriceGraphDistribution\"\>", ",", "\<\"QPochhammer\"\>", 
   ",", "\<\"Radon\"\>", ",", "\<\"RadonTransform\"\>", 
   ",", "\<\"RamanujanTau\"\>", ",", "\<\"RamanujanTauL\"\>", 
   ",", "\<\"RamanujanTauTheta\"\>", ",", "\<\"RamanujanTauZ\"\>", 
   ",", "\<\"RayleighDistribution\"\>", ",", "\<\"RiccatiSolve\"\>", 
   ",", "\<\"RiceDistribution\"\>", ",", "\<\"RiemannR\"\>", 
   ",", "\<\"RiemannSiegelTheta\"\>", ",", "\<\"RiemannSiegelZ\"\>", 
   ",", "\<\"RiemannXi\"\>", ",", "\<\"RipleyK\"\>", 
   ",", "\<\"RipleyRassonRegion\"\>", 
   ",", "\<\"RogersTanimotoDissimilarity\"\>", ",", "\<\"Root\"\>", 
   ",", "\<\"RootApproximant\"\>", ",", "\<\"RootIntervals\"\>", 
   ",", "\<\"RootLocusPlot\"\>", ",", "\<\"RootMeanSquare\"\>", 
   ",", "\<\"RootOfUnityQ\"\>", ",", "\<\"RootReduce\"\>", 
   ",", "\<\"RootSum\"\>", ",", "\<\"Roots\"\>", ",", "\<\"Rotate\"\>", 
   ",", "\<\"RotateLabel\"\>", ",", "\<\"RotateLeft\"\>", 
   ",", "\<\"RotateRight\"\>", ",", "\<\"RotationAction\"\>", 
   ",", "\<\"RotationMatrix\"\>", ",", "\<\"RotationTransform\"\>", 
   ",", "\<\"Round\"\>", ",", "\<\"RoundingRadius\"\>", ",", "\<\"Row\"\>", 
   ",", "\<\"RowAlignments\"\>", ",", "\<\"RowBox\"\>", 
   ",", "\<\"RowLines\"\>", ",", "\<\"RowMinHeight\"\>", 
   ",", "\<\"RowReduce\"\>", ",", "\<\"RowSpacings\"\>", 
   ",", "\<\"RowsEqual\"\>", ",", "\<\"RudinShapiro\"\>", 
   ",", "\<\"RudvalisGroupRu\"\>", ",", "\<\"Rule\"\>", 
   ",", "\<\"RuleDelayed\"\>", ",", "\<\"RulePlot\"\>", 
   ",", "\<\"RulerUnits\"\>", ",", "\<\"RulesTree\"\>", ",", "\<\"Run\"\>", 
   ",", "\<\"RunProcess\"\>", ",", "\<\"RunThrough\"\>", 
   ",", "\<\"RuntimeAttributes\"\>", ",", "\<\"RuntimeOptions\"\>", 
   ",", "\<\"RussellRaoDissimilarity\"\>", ",", "\<\"SARIMAProcess\"\>", 
   ",", "\<\"SARMAProcess\"\>", ",", "\<\"SASTriangle\"\>", 
   ",", "\<\"SSSTriangle\"\>", ",", "\<\"SameQ\"\>", ",", "\<\"SameTest\"\>", 
   ",", "\<\"SameTestProperties\"\>", ",", "\<\"SampleDepth\"\>", 
   ",", "\<\"SampleRate\"\>", ",", "\<\"SampledEntityClass\"\>", 
   ",", "\<\"SampledSoundFunction\"\>", ",", "\<\"SampledSoundList\"\>", 
   ",", "\<\"SamplingPeriod\"\>", ",", "\<\"SatelliteData\"\>", 
   ",", "\<\"SatisfiabilityCount\"\>", ",", "\<\"SatisfiabilityInstances\"\>",
    ",", "\<\"SatisfiableQ\"\>", ",", "\<\"Saturday\"\>", ",", "\<\"Save\"\>",
    ",", "\<\"SaveConnection\"\>", ",", "\<\"SaveDefinitions\"\>", 
   ",", "\<\"SavitzkyGolayMatrix\"\>", ",", "\<\"SawtoothWave\"\>", 
   ",", "\<\"Scale\"\>", ",", "\<\"ScaleDivisions\"\>", 
   ",", "\<\"ScaleOrigin\"\>", ",", "\<\"ScalePadding\"\>", 
   ",", "\<\"ScaleRangeStyle\"\>", ",", "\<\"ScaleRanges\"\>", 
   ",", "\<\"Scaled\"\>", ",", "\<\"ScalingFunctions\"\>", 
   ",", "\<\"SchurDecomposition\"\>", ",", "\<\"ScorerGi\"\>", 
   ",", "\<\"ScorerGiPrime\"\>", ",", "\<\"ScorerHi\"\>", 
   ",", "\<\"ScorerHiPrime\"\>", ",", "\<\"ShannonWavelet\"\>", 
   ",", "\<\"ShapiroWilkTest\"\>", ",", "\<\"ShenCastanMatrix\"\>", 
   ",", "\<\"ShiftedGompertzDistribution\"\>", 
   ",", "\<\"ShortTimeFourier\"\>", ",", "\<\"ShortTimeFourierData\"\>", 
   ",", "\<\"SiegelTheta\"\>", ",", "\<\"SiegelTukeyTest\"\>", 
   ",", "\<\"SierpinskiCurve\"\>", ",", "\<\"SierpinskiMesh\"\>", 
   ",", "\<\"SinghMaddalaDistribution\"\>", 
   ",", "\<\"SkellamDistribution\"\>", ",", "\<\"SmithDecomposition\"\>", 
   ",", "\<\"SmithDelayCompensator\"\>", 
   ",", "\<\"SmithWatermanSimilarity\"\>", 
   ",", "\<\"SokalSneathDissimilarity\"\>", ",", "\<\"SpearmanRankTest\"\>", 
   ",", "\<\"SpearmanRho\"\>", ",", "\<\"SphericalBesselJ\"\>", 
   ",", "\<\"SphericalBesselY\"\>", ",", "\<\"SphericalHankelH1\"\>", 
   ",", "\<\"SphericalHankelH2\"\>", ",", "\<\"SquaredEuclideanDistance\"\>", 
   ",", "\<\"Star\"\>", ",", "\<\"StarClusterData\"\>", 
   ",", "\<\"StarData\"\>", ",", "\<\"StarGraph\"\>", 
   ",", "\<\"StartExternalSession\"\>", ",", "\<\"StartOfLine\"\>", 
   ",", "\<\"StartOfString\"\>", ",", "\<\"StartProcess\"\>", 
   ",", "\<\"StartWebSession\"\>", ",", "\<\"StartingStepSize\"\>", 
   ",", "\<\"StateFeedbackGains\"\>", ",", "\<\"StateOutputEstimator\"\>", 
   ",", "\<\"StateResponse\"\>", ",", "\<\"StateSpaceModel\"\>", 
   ",", "\<\"StateSpaceRealization\"\>", ",", "\<\"StateSpaceTransform\"\>", 
   ",", "\<\"StateTransformationLinearize\"\>", 
   ",", "\<\"StationaryDistribution\"\>", 
   ",", "\<\"StationaryWaveletPacketTransform\"\>", 
   ",", "\<\"StationaryWaveletTransform\"\>", ",", "\<\"StatusArea\"\>", 
   ",", "\<\"StatusCentrality\"\>", ",", "\<\"StepMonitor\"\>", 
   ",", "\<\"StereochemistryElements\"\>", ",", "\<\"StieltjesGamma\"\>", 
   ",", "\<\"StippleShading\"\>", ",", "\<\"StirlingS1\"\>", 
   ",", "\<\"StirlingS2\"\>", ",", "\<\"StoppingPowerData\"\>", 
   ",", "\<\"StrataVariables\"\>", ",", "\<\"StratonovichProcess\"\>", 
   ",", "\<\"StraussHardcorePointProcess\"\>", 
   ",", "\<\"StraussPointProcess\"\>", ",", "\<\"StreamColorFunction\"\>", 
   ",", "\<\"StreamColorFunctionScaling\"\>", 
   ",", "\<\"StreamDensityPlot\"\>", ",", "\<\"StruveH\"\>", 
   ",", "\<\"StruveL\"\>", ",", "\<\"StudentTDistribution\"\>", 
   ",", "\<\"SuzukiDistribution\"\>", ",", "\<\"SuzukiGroupSuz\"\>", 
   ",", "\<\"SymmetrizedReplacePart\"\>", 
   ",", "\<\"SynchronousInitialization\"\>", 
   ",", "\<\"SynchronousUpdating\"\>", ",", "\<\"Synonyms\"\>", 
   ",", "\<\"SyntaxForm\"\>", ",", "\<\"SyntaxInformation\"\>", 
   ",", "\<\"SyntaxLength\"\>", ",", "\<\"SyntaxPacket\"\>", 
   ",", "\<\"SyntaxQ\"\>", ",", "\<\"SynthesizeMissingValues\"\>", 
   ",", "\<\"SystemCredential\"\>", ",", "\<\"SystemCredentialData\"\>", 
   ",", "\<\"SystemCredentialKey\"\>", ",", "\<\"SystemCredentialKeys\"\>", 
   ",", "\<\"SystemCredentialStoreObject\"\>", 
   ",", "\<\"SystemDialogInput\"\>", ",", "\<\"SystemInformation\"\>", 
   ",", "\<\"SystemInstall\"\>", ",", "\<\"SystemModel\"\>", 
   ",", "\<\"SystemModelExamples\"\>", ",", "\<\"SystemModelLinearize\"\>", 
   ",", "\<\"SystemModelParametricSimulate\"\>", 
   ",", "\<\"SystemModelPlot\"\>", 
   ",", "\<\"SystemModelProgressReporting\"\>", 
   ",", "\<\"SystemModelReliability\"\>", ",", "\<\"SystemModelSimulate\"\>", 
   ",", "\<\"SystemModelSimulateSensitivity\"\>", 
   ",", "\<\"SystemModelSimulationData\"\>", ",", "\<\"SystemModeler\"\>", 
   ",", "\<\"SystemModels\"\>", ",", "\<\"SystemOpen\"\>", 
   ",", "\<\"SystemOptions\"\>", ",", "\<\"SystemProcessData\"\>", 
   ",", "\<\"SystemProcesses\"\>", ",", "\<\"SystemsConnectionsModel\"\>", 
   ",", "\<\"SystemsModelControllerData\"\>", 
   ",", "\<\"SystemsModelDelay\"\>", 
   ",", "\<\"SystemsModelDelayApproximate\"\>", 
   ",", "\<\"SystemsModelDelete\"\>", ",", "\<\"SystemsModelDimensions\"\>", 
   ",", "\<\"SystemsModelExtract\"\>", 
   ",", "\<\"SystemsModelFeedbackConnect\"\>", 
   ",", "\<\"SystemsModelLabels\"\>", ",", "\<\"SystemsModelLinearity\"\>", 
   ",", "\<\"SystemsModelMerge\"\>", ",", "\<\"SystemsModelOrder\"\>", 
   ",", "\<\"SystemsModelParallelConnect\"\>", 
   ",", "\<\"SystemsModelSeriesConnect\"\>", 
   ",", "\<\"SystemsModelStateFeedbackConnect\"\>", 
   ",", "\<\"SystemsModelVectorRelativeOrders\"\>", ",", "\<\"TTest\"\>", 
   ",", "\<\"TabView\"\>", ",", "\<\"Table\"\>", 
   ",", "\<\"TableAlignments\"\>", ",", "\<\"TableDepth\"\>", 
   ",", "\<\"TableDirections\"\>", ",", "\<\"TableForm\"\>", 
   ",", "\<\"TableHeadings\"\>", ",", "\<\"TableSpacing\"\>", 
   ",", "\<\"TableView\"\>", ",", "\<\"TagBox\"\>", 
   ",", "\<\"TagBoxOptions\"\>", ",", "\<\"TagSet\"\>", 
   ",", "\<\"TagSetDelayed\"\>", ",", "\<\"TagUnset\"\>", 
   ",", "\<\"TaggingRules\"\>", ",", "\<\"Take\"\>", ",", "\<\"TakeDrop\"\>", 
   ",", "\<\"TakeLargest\"\>", ",", "\<\"TakeLargestBy\"\>", 
   ",", "\<\"TakeList\"\>", ",", "\<\"TakeSmallest\"\>", 
   ",", "\<\"TakeSmallestBy\"\>", ",", "\<\"TakeWhile\"\>", 
   ",", "\<\"Tally\"\>", ",", "\<\"Tan\"\>", ",", "\<\"Tanh\"\>", 
   ",", "\<\"TargetDevice\"\>", ",", "\<\"TargetFunctions\"\>", 
   ",", "\<\"TargetSystem\"\>", ",", "\<\"TargetUnits\"\>", 
   ",", "\<\"TaskAbort\"\>", ",", "\<\"TaskExecute\"\>", 
   ",", "\<\"TaskObject\"\>", ",", "\<\"TaskRemove\"\>", 
   ",", "\<\"TaskResume\"\>", ",", "\<\"TaskSuspend\"\>", 
   ",", "\<\"TaskWait\"\>", ",", "\<\"Tasks\"\>", ",", "\<\"TautologyQ\"\>", 
   ",", "\<\"TeXForm\"\>", ",", "\<\"TelegraphProcess\"\>", 
   ",", "\<\"TemplateApply\"\>", ",", "\<\"TemplateBox\"\>", 
   ",", "\<\"TemplateBoxOptions\"\>", ",", "\<\"TemplateExpression\"\>", 
   ",", "\<\"TemplateIf\"\>", ",", "\<\"TemplateObject\"\>", 
   ",", "\<\"TemplateSequence\"\>", ",", "\<\"TemplateSlot\"\>", 
   ",", "\<\"TemplateWith\"\>", ",", "\<\"TemporalData\"\>", 
   ",", "\<\"TemporalRegularity\"\>", ",", "\<\"Temporary\"\>", 
   ",", "\<\"TensorContract\"\>", ",", "\<\"TensorDimensions\"\>", 
   ",", "\<\"TensorExpand\"\>", ",", "\<\"TensorProduct\"\>", 
   ",", "\<\"TensorRank\"\>", ",", "\<\"ThomasPointProcess\"\>", 
   ",", "\<\"ThompsonGroupTh\"\>", ",", "\<\"ThueMorse\"\>", 
   ",", "\<\"TitsGroupT\"\>", ",", "\<\"ToeplitzMatrix\"\>", 
   ",", "\<\"TracyWidomDistribution\"\>", 
   ",", "\<\"TsallisQExponentialDistribution\"\>", 
   ",", "\<\"TsallisQGaussianDistribution\"\>", 
   ",", "\<\"TukeyLambdaDistribution\"\>", ",", "\<\"TukeyWindow\"\>", 
   ",", "\<\"TuranGraph\"\>", ",", "\<\"TuringMachine\"\>", 
   ",", "\<\"TuttePolynomial\"\>", ",", "\<\"VectorAngle\"\>", 
   ",", "\<\"VectorAround\"\>", ",", "\<\"VectorAspectRatio\"\>", 
   ",", "\<\"VectorColorFunction\"\>", 
   ",", "\<\"VectorColorFunctionScaling\"\>", 
   ",", "\<\"VectorDensityPlot\"\>", ",", "\<\"VectorDisplacementPlot\"\>", 
   ",", "\<\"VectorDisplacementPlot3D\"\>", ",", "\<\"VectorGreater\"\>", 
   ",", "\<\"VectorGreaterEqual\"\>", ",", "\<\"VectorLess\"\>", 
   ",", "\<\"VectorLessEqual\"\>", ",", "\<\"VectorMarkers\"\>", 
   ",", "\<\"VectorPlot\"\>", ",", "\<\"VectorPlot3D\"\>", 
   ",", "\<\"VectorPoints\"\>", ",", "\<\"VectorQ\"\>", 
   ",", "\<\"VectorRange\"\>", ",", "\<\"VectorScaling\"\>", 
   ",", "\<\"VectorSizes\"\>", ",", "\<\"VectorStyle\"\>", 
   ",", "\<\"Vectors\"\>", ",", "\<\"Vee\"\>", ",", "\<\"Verbatim\"\>", 
   ",", "\<\"VerificationTest\"\>", ",", "\<\"VerifyConvergence\"\>", 
   ",", "\<\"VerifyDerivedKey\"\>", ",", "\<\"VerifyDigitalSignature\"\>", 
   ",", "\<\"VerifyFileSignature\"\>", ",", "\<\"VerifyInterpretation\"\>", 
   ",", "\<\"VerifySecurityCertificates\"\>", ",", "\<\"VerifySolutions\"\>", 
   ",", "\<\"VerifyTestAssumptions\"\>", ",", "\<\"VersionedPreferences\"\>", 
   ",", "\<\"VertexAdd\"\>", ",", "\<\"VertexCapacity\"\>", 
   ",", "\<\"VertexChromaticNumber\"\>", ",", "\<\"VertexColors\"\>", 
   ",", "\<\"VertexComponent\"\>", ",", "\<\"VertexConnectivity\"\>", 
   ",", "\<\"VertexContract\"\>", ",", "\<\"VertexCoordinates\"\>", 
   ",", "\<\"VertexCorrelationSimilarity\"\>", 
   ",", "\<\"VertexCosineSimilarity\"\>", ",", "\<\"VertexCount\"\>", 
   ",", "\<\"VertexCoverQ\"\>", ",", "\<\"VertexDataCoordinates\"\>", 
   ",", "\<\"VertexDegree\"\>", ",", "\<\"VertexDelete\"\>", 
   ",", "\<\"VertexDiceSimilarity\"\>", ",", "\<\"VertexEccentricity\"\>", 
   ",", "\<\"VertexInComponent\"\>", ",", "\<\"VertexInComponentGraph\"\>", 
   ",", "\<\"VertexInDegree\"\>", ",", "\<\"VertexIndex\"\>", 
   ",", "\<\"VertexJaccardSimilarity\"\>", ",", "\<\"VertexLabelStyle\"\>", 
   ",", "\<\"VertexLabels\"\>", ",", "\<\"VertexList\"\>", 
   ",", "\<\"VertexNormals\"\>", ",", "\<\"VertexOutComponent\"\>", 
   ",", "\<\"VertexOutComponentGraph\"\>", ",", "\<\"VertexOutDegree\"\>", 
   ",", "\<\"VertexQ\"\>", ",", "\<\"VertexReplace\"\>", 
   ",", "\<\"VertexShape\"\>", ",", "\<\"VertexShapeFunction\"\>", 
   ",", "\<\"VertexSize\"\>", ",", "\<\"VertexStyle\"\>", 
   ",", "\<\"VertexTextureCoordinates\"\>", 
   ",", "\<\"VertexTransitiveGraphQ\"\>", ",", "\<\"VertexWeight\"\>", 
   ",", "\<\"VertexWeightedGraphQ\"\>", ",", "\<\"VerticalBar\"\>", 
   ",", "\<\"VerticalGauge\"\>", ",", "\<\"VerticalSeparator\"\>", 
   ",", "\<\"VerticalSlider\"\>", ",", "\<\"VerticalTilde\"\>", 
   ",", "\<\"Video\"\>", ",", "\<\"VideoCombine\"\>", 
   ",", "\<\"VideoDelete\"\>", ",", "\<\"VideoEncoding\"\>", 
   ",", "\<\"VideoExtractFrames\"\>", ",", "\<\"VideoFrameList\"\>", 
   ",", "\<\"VideoFrameMap\"\>", ",", "\<\"VideoGenerator\"\>", 
   ",", "\<\"VideoInsert\"\>", ",", "\<\"VideoIntervals\"\>", 
   ",", "\<\"VideoJoin\"\>", ",", "\<\"VideoMap\"\>", 
   ",", "\<\"VideoMapList\"\>", ",", "\<\"VideoMapTimeSeries\"\>", 
   ",", "\<\"VideoPause\"\>", ",", "\<\"VideoPlay\"\>", ",", "\<\"VideoQ\"\>",
    ",", "\<\"VideoRecord\"\>", ",", "\<\"VideoReplace\"\>", 
   ",", "\<\"VideoSplit\"\>", ",", "\<\"VideoStop\"\>", 
   ",", "\<\"VideoStream\"\>", ",", "\<\"VideoStreams\"\>", 
   ",", "\<\"VideoTimeStretch\"\>", ",", "\<\"VideoTrackSelection\"\>", 
   ",", "\<\"VideoTranscode\"\>", ",", "\<\"VideoTrim\"\>", 
   ",", "\<\"ViewAngle\"\>", ",", "\<\"ViewCenter\"\>", 
   ",", "\<\"VoigtDistribution\"\>", ",", "\<\"VonMisesDistribution\"\>", 
   ",", "\<\"VoronoiMesh\"\>", ",", "\<\"WakebyDistribution\"\>", 
   ",", "\<\"WalleniusHypergeometricDistribution\"\>", 
   ",", "\<\"WaringYuleDistribution\"\>", ",", "\<\"WatsonUSquareTest\"\>", 
   ",", "\<\"WattsStrogatzGraphDistribution\"\>", ",", "\<\"WeberE\"\>", 
   ",", "\<\"WeibullDistribution\"\>", ",", "\<\"WeierstrassE1\"\>", 
   ",", "\<\"WeierstrassE2\"\>", ",", "\<\"WeierstrassE3\"\>", 
   ",", "\<\"WeierstrassEta1\"\>", ",", "\<\"WeierstrassEta2\"\>", 
   ",", "\<\"WeierstrassEta3\"\>", ",", "\<\"WeierstrassHalfPeriodW1\"\>", 
   ",", "\<\"WeierstrassHalfPeriodW2\"\>", 
   ",", "\<\"WeierstrassHalfPeriodW3\"\>", 
   ",", "\<\"WeierstrassHalfPeriods\"\>", 
   ",", "\<\"WeierstrassInvariantG2\"\>", 
   ",", "\<\"WeierstrassInvariantG3\"\>", 
   ",", "\<\"WeierstrassInvariants\"\>", ",", "\<\"WeierstrassP\"\>", 
   ",", "\<\"WeierstrassPPrime\"\>", ",", "\<\"WeierstrassSigma\"\>", 
   ",", "\<\"WeierstrassZeta\"\>", ",", "\<\"WelchWindow\"\>", 
   ",", "\<\"WhittakerM\"\>", ",", "\<\"WhittakerW\"\>", 
   ",", "\<\"WienerFilter\"\>", ",", "\<\"WienerProcess\"\>", 
   ",", "\<\"WignerD\"\>", ",", "\<\"WignerSemicircleDistribution\"\>", 
   ",", "\<\"WilksW\"\>", ",", "\<\"WilksWTest\"\>", 
   ",", "\<\"WinsorizedMean\"\>", ",", "\<\"WinsorizedVariance\"\>", 
   ",", "\<\"WishartMatrixDistribution\"\>", ",", "\<\"WolframAlpha\"\>", 
   ",", "\<\"WolframLanguageData\"\>", ",", "\<\"Wronskian\"\>", 
   ",", "\<\"YuleDissimilarity\"\>", ",", "\<\"ZernikeR\"\>", 
   ",", "\<\"ZipfDistribution\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8701983071704483`*^9, 3.870198319768955*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"5da20866-9549-4cfe-8af3-d13eb45c245d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"CanonicalName", "[", "%55", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8701983384970117`*^9, 3.870198340444169*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"62c281a5-3fa6-4321-90f2-b54aed27351a"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"$RequesterWolframID\"\>"},
    {"\<\"$RequesterWolframUUID\"\>"},
    {"\<\"$WolframID\"\>"},
    {"\<\"$WolframUUID\"\>"},
    {"\<\"AbelianGroup\"\>"},
    {"\<\"AiryAi\"\>"},
    {"\<\"AiryAiPrime\"\>"},
    {"\<\"AiryAiZero\"\>"},
    {"\<\"AiryBi\"\>"},
    {"\<\"AiryBiPrime\"\>"},
    {"\<\"AiryBiZero\"\>"},
    {"\<\"AndersonDarlingTest\"\>"},
    {"\<\"AngerJ\"\>"},
    {"\<\"Antihermitian\"\>"},
    {"\<\"AntihermitianMatrixQ\"\>"},
    {"\<\"AppellF1\"\>"},
    {"\<\"BarabasiAlbertGraphDistribution\"\>"},
    {"\<\"BaringhausHenzeTest\"\>"},
    {"\<\"BarlowProschanImportance\"\>"},
    {"\<\"BarnesG\"\>"},
    {"\<\"BartlettHannWindow\"\>"},
    {"\<\"BartlettWindow\"\>"},
    {"\<\"BatesDistribution\"\>"},
    {"\<\"BattleLemarieWavelet\"\>"},
    {"\<\"BayesianMaximization\"\>"},
    {"\<\"BayesianMaximizationObject\"\>"},
    {"\<\"BayesianMinimization\"\>"},
    {"\<\"BayesianMinimizationObject\"\>"},
    {"\<\"BeckmannDistribution\"\>"},
    {"\<\"BellB\"\>"},
    {"\<\"BellY\"\>"},
    {"\<\"BenfordDistribution\"\>"},
    {"\<\"BeniniDistribution\"\>"},
    {"\<\"BenktanderGibratDistribution\"\>"},
    {"\<\"BenktanderWeibullDistribution\"\>"},
    {"\<\"BernoulliB\"\>"},
    {"\<\"BernoulliDistribution\"\>"},
    {"\<\"BernoulliGraphDistribution\"\>"},
    {"\<\"BernoulliProcess\"\>"},
    {"\<\"BernsteinBasis\"\>"},
    {"\<\"BesagL\"\>"},
    {"\<\"BesselFilterModel\"\>"},
    {"\<\"BesselI\"\>"},
    {"\<\"BesselJ\"\>"},
    {"\<\"BesselJZero\"\>"},
    {"\<\"BesselK\"\>"},
    {"\<\"BesselY\"\>"},
    {"\<\"BesselYZero\"\>"},
    {"\<\"BezierCurve\"\>"},
    {"\<\"BezierFunction\"\>"},
    {"\<\"BilateralLaplaceTransform\"\>"},
    {"\<\"BirnbaumImportance\"\>"},
    {"\<\"BirnbaumSaundersDistribution\"\>"},
    {"\<\"BlackmanHarrisWindow\"\>"},
    {"\<\"BlackmanNuttallWindow\"\>"},
    {"\<\"BlackmanWindow\"\>"},
    {"\<\"BlomqvistBeta\"\>"},
    {"\<\"BlomqvistBetaTest\"\>"},
    {"\<\"BodePlot\"\>"},
    {"\<\"BohmanWindow\"\>"},
    {"\<\"Boole\"\>"},
    {"\<\"BooleanConsecutiveFunction\"\>"},
    {"\<\"BooleanConvert\"\>"},
    {"\<\"BooleanCountingFunction\"\>"},
    {"\<\"BooleanFunction\"\>"},
    {"\<\"BooleanGraph\"\>"},
    {"\<\"BooleanMaxterms\"\>"},
    {"\<\"BooleanMinimize\"\>"},
    {"\<\"BooleanMinterms\"\>"},
    {"\<\"BooleanQ\"\>"},
    {"\<\"BooleanRegion\"\>"},
    {"\<\"BooleanStrings\"\>"},
    {"\<\"BooleanTable\"\>"},
    {"\<\"BooleanVariables\"\>"},
    {"\<\"Booleans\"\>"},
    {"\<\"BorelTannerDistribution\"\>"},
    {"\<\"BrayCurtisDistance\"\>"},
    {"\<\"BrownForsytheTest\"\>"},
    {"\<\"BrownianBridgeProcess\"\>"},
    {"\<\"ButterworthFilterModel\"\>"},
    {"\<\"CantorMesh\"\>"},
    {"\<\"CantorStaircase\"\>"},
    {"\<\"CarlemanLinearize\"\>"},
    {"\<\"CarlsonRC\"\>"},
    {"\<\"CarlsonRD\"\>"},
    {"\<\"CarlsonRE\"\>"},
    {"\<\"CarlsonRF\"\>"},
    {"\<\"CarlsonRG\"\>"},
    {"\<\"CarlsonRJ\"\>"},
    {"\<\"CarlsonRK\"\>"},
    {"\<\"CarlsonRM\"\>"},
    {"\<\"CarmichaelLambda\"\>"},
    {"\<\"Casoratian\"\>"},
    {"\<\"Catalan\"\>"},
    {"\<\"CatalanNumber\"\>"},
    {"\<\"CauchyDistribution\"\>"},
    {"\<\"CauchyPointProcess\"\>"},
    {"\<\"CauchyWindow\"\>"},
    {"\<\"CayleyGraph\"\>"},
    {"\<\"ChampernowneNumber\"\>"},
    {"\<\"ChanVeseBinarize\"\>"},
    {"\<\"Chebyshev1FilterModel\"\>"},
    {"\<\"Chebyshev2FilterModel\"\>"},
    {"\<\"ChebyshevT\"\>"},
    {"\<\"ChebyshevU\"\>"},
    {"\<\"CholeskyDecomposition\"\>"},
    {"\<\"ClebschGordan\"\>"},
    {"\<\"CoifletWavelet\"\>"},
    {"\<\"CompoundPoissonDistribution\"\>"},
    {"\<\"CompoundPoissonProcess\"\>"},
    {"\<\"ConnesWindow\"\>"},
    {"\<\"ConoverTest\"\>"},
    {"\<\"ContinuousMarkovProcess\"\>"},
    {"\<\"ConwayGroupCo1\"\>"},
    {"\<\"ConwayGroupCo2\"\>"},
    {"\<\"ConwayGroupCo3\"\>"},
    {"\<\"CoulombF\"\>"},
    {"\<\"CoulombG\"\>"},
    {"\<\"CoulombH1\"\>"},
    {"\<\"CoulombH2\"\>"},
    {"\<\"CoxIngersollRossProcess\"\>"},
    {"\<\"CoxModel\"\>"},
    {"\<\"CoxModelFit\"\>"},
    {"\<\"CoxianDistribution\"\>"},
    {"\<\"CramerVonMisesTest\"\>"},
    {"\<\"DGaussianWavelet\"\>"},
    {"\<\"DagumDistribution\"\>"},
    {"\<\"DamerauLevenshteinDistance\"\>"},
    {"\<\"DaubechiesWavelet\"\>"},
    {"\<\"DavisDistribution\"\>"},
    {"\<\"DawsonF\"\>"},
    {"\<\"DeBruijnGraph\"\>"},
    {"\<\"DeBruijnSequence\"\>"},
    {"\<\"DedekindEta\"\>"},
    {"\<\"DelaunayMesh\"\>"},
    {"\<\"DiggleGatesPointProcess\"\>"},
    {"\<\"DiggleGrattonPointProcess\"\>"},
    {"\<\"DiracComb\"\>"},
    {"\<\"DiracDelta\"\>"},
    {"\<\"DirichletBeta\"\>"},
    {"\<\"DirichletCharacter\"\>"},
    {"\<\"DirichletCondition\"\>"},
    {"\<\"DirichletConvolve\"\>"},
    {"\<\"DirichletDistribution\"\>"},
    {"\<\"DirichletEta\"\>"},
    {"\<\"DirichletL\"\>"},
    {"\<\"DirichletLambda\"\>"},
    {"\<\"DirichletTransform\"\>"},
    {"\<\"DirichletWindow\"\>"},
    {"\<\"DiscreteHadamardTransform\"\>"},
    {"\<\"DiscreteLyapunovSolve\"\>"},
    {"\<\"DiscreteMarkovProcess\"\>"},
    {"\<\"DiscreteRiccatiSolve\"\>"},
    {"\<\"DrazinInverse\"\>"},
    {"\<\"ErlangB\"\>"},
    {"\<\"ErlangC\"\>"},
    {"\<\"ErlangDistribution\"\>"},
    {"\<\"EuclideanDistance\"\>"},
    {"\<\"EulerAngles\"\>"},
    {"\<\"EulerCharacteristic\"\>"},
    {"\<\"EulerE\"\>"},
    {"\<\"EulerGamma\"\>"},
    {"\<\"EulerMatrix\"\>"},
    {"\<\"EulerPhi\"\>"},
    {"\<\"EulerianGraphQ\"\>"},
    {"\<\"ExactBlackmanWindow\"\>"},
    {"\<\"FareySequence\"\>"},
    {"\<\"Fibonacci\"\>"},
    {"\<\"Fibonorial\"\>"},
    {"\<\"FindEulerianCycle\"\>"},
    {"\<\"FindHamiltonianCycle\"\>"},
    {"\<\"FindHamiltonianPath\"\>"},
    {"\<\"FindHiddenMarkovStates\"\>"},
    {"\<\"FiniteAbelianGroupCount\"\>"},
    {"\<\"FischerGroupFi22\"\>"},
    {"\<\"FischerGroupFi23\"\>"},
    {"\<\"FischerGroupFi24Prime\"\>"},
    {"\<\"FisherHypergeometricDistribution\"\>"},
    {"\<\"FisherRatioTest\"\>"},
    {"\<\"FisherZDistribution\"\>"},
    {"\<\"Fourier\"\>"},
    {"\<\"FourierCoefficient\"\>"},
    {"\<\"FourierCosCoefficient\"\>"},
    {"\<\"FourierCosSeries\"\>"},
    {"\<\"FourierCosTransform\"\>"},
    {"\<\"FourierDCT\"\>"},
    {"\<\"FourierDCTFilter\"\>"},
    {"\<\"FourierDCTMatrix\"\>"},
    {"\<\"FourierDST\"\>"},
    {"\<\"FourierDSTMatrix\"\>"},
    {"\<\"FourierMatrix\"\>"},
    {"\<\"FourierParameters\"\>"},
    {"\<\"FourierSequenceTransform\"\>"},
    {"\<\"FourierSeries\"\>"},
    {"\<\"FourierSinCoefficient\"\>"},
    {"\<\"FourierSinSeries\"\>"},
    {"\<\"FourierSinTransform\"\>"},
    {"\<\"FourierTransform\"\>"},
    {"\<\"FourierTrigSeries\"\>"},
    {"\<\"FoxH\"\>"},
    {"\<\"FoxHReduce\"\>"},
    {"\<\"FractionalBrownianMotionProcess\"\>"},
    {"\<\"FractionalGaussianNoiseProcess\"\>"},
    {"\<\"FrechetDistribution\"\>"},
    {"\<\"FrenetSerretSystem\"\>"},
    {"\<\"FresnelC\"\>"},
    {"\<\"FresnelF\"\>"},
    {"\<\"FresnelG\"\>"},
    {"\<\"FresnelS\"\>"},
    {"\<\"FrobeniusNumber\"\>"},
    {"\<\"FrobeniusSolve\"\>"},
    {"\<\"FromJulianDate\"\>"},
    {"\<\"FussellVeselyImportance\"\>"},
    {"\<\"GaborFilter\"\>"},
    {"\<\"GaborMatrix\"\>"},
    {"\<\"GaborWavelet\"\>"},
    {"\<\"GaussianFilter\"\>"},
    {"\<\"GaussianIntegers\"\>"},
    {"\<\"GaussianMatrix\"\>"},
    {"\<\"GaussianOrthogonalMatrixDistribution\"\>"},
    {"\<\"GaussianSymplecticMatrixDistribution\"\>"},
    {"\<\"GaussianUnitaryMatrixDistribution\"\>"},
    {"\<\"GaussianWindow\"\>"},
    {"\<\"GegenbauerC\"\>"},
    {"\<\"GeometricBrownianMotionProcess\"\>"},
    {"\<\"GibbsPointProcess\"\>"},
    {"\<\"Glaisher\"\>"},
    {"\<\"GompertzMakehamDistribution\"\>"},
    {"\<\"GoochShading\"\>"},
    {"\<\"GoodmanKruskalGamma\"\>"},
    {"\<\"GoodmanKruskalGammaTest\"\>"},
    {"\<\"GreenFunction\"\>"},
    {"\<\"GroebnerBasis\"\>"},
    {"\<\"Gudermannian\"\>"},
    {"\<\"GumbelDistribution\"\>"},
    {"\<\"HaarWavelet\"\>"},
    {"\<\"HadamardMatrix\"\>"},
    {"\<\"HamiltonianGraphQ\"\>"},
    {"\<\"HammingDistance\"\>"},
    {"\<\"HammingWindow\"\>"},
    {"\<\"HankelH1\"\>"},
    {"\<\"HankelH2\"\>"},
    {"\<\"HankelMatrix\"\>"},
    {"\<\"HankelTransform\"\>"},
    {"\<\"HannPoissonWindow\"\>"},
    {"\<\"HannWindow\"\>"},
    {"\<\"HaradaNortonGroupHN\"\>"},
    {"\<\"HararyGraph\"\>"},
    {"\<\"HeavisideLambda\"\>"},
    {"\<\"HeavisidePi\"\>"},
    {"\<\"HeavisideTheta\"\>"},
    {"\<\"HeldGroupHe\"\>"},
    {"\<\"HelmholtzPDEComponent\"\>"},
    {"\<\"HermiteDecomposition\"\>"},
    {"\<\"HermiteH\"\>"},
    {"\<\"Hermitian\"\>"},
    {"\<\"HermitianMatrixQ\"\>"},
    {"\<\"HessenbergDecomposition\"\>"},
    {"\<\"HeunB\"\>"},
    {"\<\"HeunBPrime\"\>"},
    {"\<\"HeunC\"\>"},
    {"\<\"HeunCPrime\"\>"},
    {"\<\"HeunD\"\>"},
    {"\<\"HeunDPrime\"\>"},
    {"\<\"HeunG\"\>"},
    {"\<\"HeunGPrime\"\>"},
    {"\<\"HeunT\"\>"},
    {"\<\"HeunTPrime\"\>"},
    {"\<\"HiddenMarkovProcess\"\>"},
    {"\<\"HigmanSimsGroupHS\"\>"},
    {"\<\"HilbertCurve\"\>"},
    {"\<\"HilbertFilter\"\>"},
    {"\<\"HilbertMatrix\"\>"},
    {"\<\"HjorthDistribution\"\>"},
    {"\<\"HodgeDual\"\>"},
    {"\<\"HoeffdingD\"\>"},
    {"\<\"HoeffdingDTest\"\>"},
    {"\<\"HornerForm\"\>"},
    {"\<\"HotellingTSquareDistribution\"\>"},
    {"\<\"HoytDistribution\"\>"},
    {"\<\"HurwitzLerchPhi\"\>"},
    {"\<\"HurwitzZeta\"\>"},
    {"\<\"InhomogeneousPoissonPointProcess\"\>"},
    {"\<\"InverseBilateralLaplaceTransform\"\>"},
    {"\<\"InverseFourier\"\>"},
    {"\<\"InverseFourierCosTransform\"\>"},
    {"\<\"InverseFourierSequenceTransform\"\>"},
    {"\<\"InverseFourierSinTransform\"\>"},
    {"\<\"InverseFourierTransform\"\>"},
    {"\<\"InverseGaussianDistribution\"\>"},
    {"\<\"InverseGudermannian\"\>"},
    {"\<\"InverseHankelTransform\"\>"},
    {"\<\"InverseJacobiCD\"\>"},
    {"\<\"InverseJacobiCN\"\>"},
    {"\<\"InverseJacobiCS\"\>"},
    {"\<\"InverseJacobiDC\"\>"},
    {"\<\"InverseJacobiDN\"\>"},
    {"\<\"InverseJacobiDS\"\>"},
    {"\<\"InverseJacobiNC\"\>"},
    {"\<\"InverseJacobiND\"\>"},
    {"\<\"InverseJacobiNS\"\>"},
    {"\<\"InverseJacobiSC\"\>"},
    {"\<\"InverseJacobiSD\"\>"},
    {"\<\"InverseJacobiSN\"\>"},
    {"\<\"InverseLaplaceTransform\"\>"},
    {"\<\"InverseMellinTransform\"\>"},
    {"\<\"InverseRadon\"\>"},
    {"\<\"InverseRadonTransform\"\>"},
    {"\<\"InverseShortTimeFourier\"\>"},
    {"\<\"InverseWeierstrassP\"\>"},
    {"\<\"InverseWishartMatrixDistribution\"\>"},
    {"\<\"ItoProcess\"\>"},
    {"\<\"JaccardDissimilarity\"\>"},
    {"\<\"JacobiAmplitude\"\>"},
    {"\<\"JacobiCD\"\>"},
    {"\<\"JacobiCN\"\>"},
    {"\<\"JacobiCS\"\>"},
    {"\<\"JacobiDC\"\>"},
    {"\<\"JacobiDN\"\>"},
    {"\<\"JacobiDS\"\>"},
    {"\<\"JacobiEpsilon\"\>"},
    {"\<\"JacobiNC\"\>"},
    {"\<\"JacobiND\"\>"},
    {"\<\"JacobiNS\"\>"},
    {"\<\"JacobiP\"\>"},
    {"\<\"JacobiSC\"\>"},
    {"\<\"JacobiSD\"\>"},
    {"\<\"JacobiSN\"\>"},
    {"\<\"JacobiSymbol\"\>"},
    {"\<\"JacobiZN\"\>"},
    {"\<\"JacobiZeta\"\>"},
    {"\<\"JankoGroupJ1\"\>"},
    {"\<\"JankoGroupJ2\"\>"},
    {"\<\"JankoGroupJ3\"\>"},
    {"\<\"JankoGroupJ4\"\>"},
    {"\<\"JarqueBeraALMTest\"\>"},
    {"\<\"JohnsonDistribution\"\>"},
    {"\<\"JordanDecomposition\"\>"},
    {"\<\"JordanModelDecomposition\"\>"},
    {"\<\"JuliaSetBoettcher\"\>"},
    {"\<\"JuliaSetIterationCount\"\>"},
    {"\<\"JuliaSetPlot\"\>"},
    {"\<\"JuliaSetPoints\"\>"},
    {"\<\"JulianDate\"\>"},
    {"\<\"KaiserBesselWindow\"\>"},
    {"\<\"KaiserWindow\"\>"},
    {"\<\"KalmanEstimator\"\>"},
    {"\<\"KalmanFilter\"\>"},
    {"\<\"KarhunenLoeveDecomposition\"\>"},
    {"\<\"KatzCentrality\"\>"},
    {"\<\"KelvinBei\"\>"},
    {"\<\"KelvinBer\"\>"},
    {"\<\"KelvinKei\"\>"},
    {"\<\"KelvinKer\"\>"},
    {"\<\"KendallTau\"\>"},
    {"\<\"KendallTauTest\"\>"},
    {"\<\"Khinchin\"\>"},
    {"\<\"KirchhoffGraph\"\>"},
    {"\<\"KirchhoffMatrix\"\>"},
    {"\<\"KleinInvariantJ\"\>"},
    {"\<\"KochCurve\"\>"},
    {"\<\"KolmogorovSmirnovTest\"\>"},
    {"\<\"KroneckerDelta\"\>"},
    {"\<\"KroneckerModelDecomposition\"\>"},
    {"\<\"KroneckerProduct\"\>"},
    {"\<\"KroneckerSymbol\"\>"},
    {"\<\"KuiperTest\"\>"},
    {"\<\"KumaraswamyDistribution\"\>"},
    {"\<\"KuwaharaFilter\"\>"},
    {"\<\"LaguerreL\"\>"},
    {"\<\"LameC\"\>"},
    {"\<\"LameCPrime\"\>"},
    {"\<\"LameEigenvalueA\"\>"},
    {"\<\"LameEigenvalueB\"\>"},
    {"\<\"LameS\"\>"},
    {"\<\"LameSPrime\"\>"},
    {"\<\"LanczosWindow\"\>"},
    {"\<\"LandauDistribution\"\>"},
    {"\<\"LaplaceDistribution\"\>"},
    {"\<\"LaplaceTransform\"\>"},
    {"\<\"Laplacian\"\>"},
    {"\<\"LaplacianFilter\"\>"},
    {"\<\"LaplacianGaussianFilter\"\>"},
    {"\<\"LaplacianPDETerm\"\>"},
    {"\<\"LegendreP\"\>"},
    {"\<\"LegendreQ\"\>"},
    {"\<\"LerchPhi\"\>"},
    {"\<\"LeveneTest\"\>"},
    {"\<\"LeviCivitaTensor\"\>"},
    {"\<\"LevyDistribution\"\>"},
    {"\<\"LindleyDistribution\"\>"},
    {"\<\"LiouvilleLambda\"\>"},
    {"\<\"ListFourierSequenceTransform\"\>"},
    {"\<\"LogBarnesG\"\>"},
    {"\<\"LucasL\"\>"},
    {"\<\"LuccioSamiComponents\"\>"},
    {"\<\"LyapunovSolve\"\>"},
    {"\<\"LyonsGroupLy\"\>"},
    {"\<\"MandelbrotSetBoettcher\"\>"},
    {"\<\"MandelbrotSetDistance\"\>"},
    {"\<\"MandelbrotSetIterationCount\"\>"},
    {"\<\"MandelbrotSetMemberQ\"\>"},
    {"\<\"MandelbrotSetPlot\"\>"},
    {"\<\"MangoldtLambda\"\>"},
    {"\<\"MannWhitneyTest\"\>"},
    {"\<\"MarchenkoPasturDistribution\"\>"},
    {"\<\"MarcumQ\"\>"},
    {"\<\"MardiaCombinedTest\"\>"},
    {"\<\"MardiaKurtosisTest\"\>"},
    {"\<\"MardiaSkewnessTest\"\>"},
    {"\<\"MarkovProcessProperties\"\>"},
    {"\<\"MaternPointProcess\"\>"},
    {"\<\"MathieuC\"\>"},
    {"\<\"MathieuCPrime\"\>"},
    {"\<\"MathieuCharacteristicA\"\>"},
    {"\<\"MathieuCharacteristicB\"\>"},
    {"\<\"MathieuCharacteristicExponent\"\>"},
    {"\<\"MathieuGroupM11\"\>"},
    {"\<\"MathieuGroupM12\"\>"},
    {"\<\"MathieuGroupM22\"\>"},
    {"\<\"MathieuGroupM23\"\>"},
    {"\<\"MathieuGroupM24\"\>"},
    {"\<\"MathieuS\"\>"},
    {"\<\"MathieuSPrime\"\>"},
    {"\<\"MaxwellDistribution\"\>"},
    {"\<\"McLaughlinGroupMcL\"\>"},
    {"\<\"MeijerG\"\>"},
    {"\<\"MeijerGReduce\"\>"},
    {"\<\"MeixnerDistribution\"\>"},
    {"\<\"MellinConvolve\"\>"},
    {"\<\"MellinTransform\"\>"},
    {"\<\"MengerMesh\"\>"},
    {"\<\"MersennePrimeExponent\"\>"},
    {"\<\"MersennePrimeExponentQ\"\>"},
    {"\<\"MeyerWavelet\"\>"},
    {"\<\"MinkowskiQuestionMark\"\>"},
    {"\<\"MittagLefflerE\"\>"},
    {"\<\"MoebiusMu\"\>"},
    {"\<\"MorletWavelet\"\>"},
    {"\<\"MorphologicalEulerNumber\"\>"},
    {"\<\"MoyalDistribution\"\>"},
    {"\<\"MultivariatePoissonDistribution\"\>"},
    {"\<\"NakagamiDistribution\"\>"},
    {"\<\"NeedlemanWunschSimilarity\"\>"},
    {"\<\"NeumannValue\"\>"},
    {"\<\"NevilleThetaC\"\>"},
    {"\<\"NevilleThetaD\"\>"},
    {"\<\"NevilleThetaN\"\>"},
    {"\<\"NevilleThetaS\"\>"},
    {"\<\"NeymanScottPointProcess\"\>"},
    {"\<\"NicholsGridLines\"\>"},
    {"\<\"NicholsPlot\"\>"},
    {"\<\"NoncentralStudentTDistribution\"\>"},
    {"\<\"NorlundB\"\>"},
    {"\<\"NormalizedSquaredEuclideanDistance\"\>"},
    {"\<\"NuttallWindow\"\>"},
    {"\<\"NyquistGridLines\"\>"},
    {"\<\"NyquistPlot\"\>"},
    {"\<\"ONanGroupON\"\>"},
    {"\<\"OrnsteinUhlenbeckProcess\"\>"},
    {"\<\"OwenT\"\>"},
    {"\<\"PadeApproximant\"\>"},
    {"\<\"ParetoDistribution\"\>"},
    {"\<\"ParetoPickandsDistribution\"\>"},
    {"\<\"ParzenWindow\"\>"},
    {"\<\"PascalDistribution\"\>"},
    {"\<\"PaulWavelet\"\>"},
    {"\<\"PauliMatrix\"\>"},
    {"\<\"PeanoCurve\"\>"},
    {"\<\"PearsonChiSquareTest\"\>"},
    {"\<\"PearsonCorrelationTest\"\>"},
    {"\<\"PearsonDistribution\"\>"},
    {"\<\"PenttinenPointProcess\"\>"},
    {"\<\"PeronaMalikFilter\"\>"},
    {"\<\"PetersenGraph\"\>"},
    {"\<\"PillaiTrace\"\>"},
    {"\<\"PillaiTraceTest\"\>"},
    {"\<\"PlanckRadiationLaw\"\>"},
    {"\<\"Pochhammer\"\>"},
    {"\<\"PoissonConsulDistribution\"\>"},
    {"\<\"PoissonDistribution\"\>"},
    {"\<\"PoissonPDEComponent\"\>"},
    {"\<\"PoissonPointProcess\"\>"},
    {"\<\"PoissonProcess\"\>"},
    {"\<\"PoissonWindow\"\>"},
    {"\<\"PolyaAeppliDistribution\"\>"},
    {"\<\"PriceGraphDistribution\"\>"},
    {"\<\"QPochhammer\"\>"},
    {"\<\"Radon\"\>"},
    {"\<\"RadonTransform\"\>"},
    {"\<\"RamanujanTau\"\>"},
    {"\<\"RamanujanTauL\"\>"},
    {"\<\"RamanujanTauTheta\"\>"},
    {"\<\"RamanujanTauZ\"\>"},
    {"\<\"RayleighDistribution\"\>"},
    {"\<\"RiccatiSolve\"\>"},
    {"\<\"RiceDistribution\"\>"},
    {"\<\"RiemannR\"\>"},
    {"\<\"RiemannSiegelTheta\"\>"},
    {"\<\"RiemannSiegelZ\"\>"},
    {"\<\"RiemannXi\"\>"},
    {"\<\"RipleyK\"\>"},
    {"\<\"RipleyRassonRegion\"\>"},
    {"\<\"RogersTanimotoDissimilarity\"\>"},
    {"\<\"Root\"\>"},
    {"\<\"RootApproximant\"\>"},
    {"\<\"RootIntervals\"\>"},
    {"\<\"RootLocusPlot\"\>"},
    {"\<\"RootMeanSquare\"\>"},
    {"\<\"RootOfUnityQ\"\>"},
    {"\<\"RootReduce\"\>"},
    {"\<\"RootSum\"\>"},
    {"\<\"Roots\"\>"},
    {"\<\"Rotate\"\>"},
    {"\<\"RotateLabel\"\>"},
    {"\<\"RotateLeft\"\>"},
    {"\<\"RotateRight\"\>"},
    {"\<\"RotationAction\"\>"},
    {"\<\"RotationMatrix\"\>"},
    {"\<\"RotationTransform\"\>"},
    {"\<\"Round\"\>"},
    {"\<\"RoundingRadius\"\>"},
    {"\<\"Row\"\>"},
    {"\<\"RowAlignments\"\>"},
    {"\<\"RowBox\"\>"},
    {"\<\"RowLines\"\>"},
    {"\<\"RowMinHeight\"\>"},
    {"\<\"RowReduce\"\>"},
    {"\<\"RowSpacings\"\>"},
    {"\<\"RowsEqual\"\>"},
    {"\<\"RudinShapiro\"\>"},
    {"\<\"RudvalisGroupRu\"\>"},
    {"\<\"Rule\"\>"},
    {"\<\"RuleDelayed\"\>"},
    {"\<\"RulePlot\"\>"},
    {"\<\"RulerUnits\"\>"},
    {"\<\"RulesTree\"\>"},
    {"\<\"Run\"\>"},
    {"\<\"RunProcess\"\>"},
    {"\<\"RunThrough\"\>"},
    {"\<\"RuntimeAttributes\"\>"},
    {"\<\"RuntimeOptions\"\>"},
    {"\<\"RussellRaoDissimilarity\"\>"},
    {"\<\"SARIMAProcess\"\>"},
    {"\<\"SARMAProcess\"\>"},
    {"\<\"SASTriangle\"\>"},
    {"\<\"SSSTriangle\"\>"},
    {"\<\"SameQ\"\>"},
    {"\<\"SameTest\"\>"},
    {"\<\"SameTestProperties\"\>"},
    {"\<\"SampleDepth\"\>"},
    {"\<\"SampleRate\"\>"},
    {"\<\"SampledEntityClass\"\>"},
    {"\<\"SampledSoundFunction\"\>"},
    {"\<\"SampledSoundList\"\>"},
    {"\<\"SamplingPeriod\"\>"},
    {"\<\"SatelliteData\"\>"},
    {"\<\"SatisfiabilityCount\"\>"},
    {"\<\"SatisfiabilityInstances\"\>"},
    {"\<\"SatisfiableQ\"\>"},
    {"\<\"Saturday\"\>"},
    {"\<\"Save\"\>"},
    {"\<\"SaveConnection\"\>"},
    {"\<\"SaveDefinitions\"\>"},
    {"\<\"SavitzkyGolayMatrix\"\>"},
    {"\<\"SawtoothWave\"\>"},
    {"\<\"Scale\"\>"},
    {"\<\"ScaleDivisions\"\>"},
    {"\<\"ScaleOrigin\"\>"},
    {"\<\"ScalePadding\"\>"},
    {"\<\"ScaleRangeStyle\"\>"},
    {"\<\"ScaleRanges\"\>"},
    {"\<\"Scaled\"\>"},
    {"\<\"ScalingFunctions\"\>"},
    {"\<\"SchurDecomposition\"\>"},
    {"\<\"ScorerGi\"\>"},
    {"\<\"ScorerGiPrime\"\>"},
    {"\<\"ScorerHi\"\>"},
    {"\<\"ScorerHiPrime\"\>"},
    {"\<\"ShannonWavelet\"\>"},
    {"\<\"ShapiroWilkTest\"\>"},
    {"\<\"ShenCastanMatrix\"\>"},
    {"\<\"ShiftedGompertzDistribution\"\>"},
    {"\<\"ShortTimeFourier\"\>"},
    {"\<\"ShortTimeFourierData\"\>"},
    {"\<\"SiegelTheta\"\>"},
    {"\<\"SiegelTukeyTest\"\>"},
    {"\<\"SierpinskiCurve\"\>"},
    {"\<\"SierpinskiMesh\"\>"},
    {"\<\"SinghMaddalaDistribution\"\>"},
    {"\<\"SkellamDistribution\"\>"},
    {"\<\"SmithDecomposition\"\>"},
    {"\<\"SmithDelayCompensator\"\>"},
    {"\<\"SmithWatermanSimilarity\"\>"},
    {"\<\"SokalSneathDissimilarity\"\>"},
    {"\<\"SpearmanRankTest\"\>"},
    {"\<\"SpearmanRho\"\>"},
    {"\<\"SphericalBesselJ\"\>"},
    {"\<\"SphericalBesselY\"\>"},
    {"\<\"SphericalHankelH1\"\>"},
    {"\<\"SphericalHankelH2\"\>"},
    {"\<\"SquaredEuclideanDistance\"\>"},
    {"\<\"Star\"\>"},
    {"\<\"StarClusterData\"\>"},
    {"\<\"StarData\"\>"},
    {"\<\"StarGraph\"\>"},
    {"\<\"StartExternalSession\"\>"},
    {"\<\"StartOfLine\"\>"},
    {"\<\"StartOfString\"\>"},
    {"\<\"StartProcess\"\>"},
    {"\<\"StartWebSession\"\>"},
    {"\<\"StartingStepSize\"\>"},
    {"\<\"StateFeedbackGains\"\>"},
    {"\<\"StateOutputEstimator\"\>"},
    {"\<\"StateResponse\"\>"},
    {"\<\"StateSpaceModel\"\>"},
    {"\<\"StateSpaceRealization\"\>"},
    {"\<\"StateSpaceTransform\"\>"},
    {"\<\"StateTransformationLinearize\"\>"},
    {"\<\"StationaryDistribution\"\>"},
    {"\<\"StationaryWaveletPacketTransform\"\>"},
    {"\<\"StationaryWaveletTransform\"\>"},
    {"\<\"StatusArea\"\>"},
    {"\<\"StatusCentrality\"\>"},
    {"\<\"StepMonitor\"\>"},
    {"\<\"StereochemistryElements\"\>"},
    {"\<\"StieltjesGamma\"\>"},
    {"\<\"StippleShading\"\>"},
    {"\<\"StirlingS1\"\>"},
    {"\<\"StirlingS2\"\>"},
    {"\<\"StoppingPowerData\"\>"},
    {"\<\"StrataVariables\"\>"},
    {"\<\"StratonovichProcess\"\>"},
    {"\<\"StraussHardcorePointProcess\"\>"},
    {"\<\"StraussPointProcess\"\>"},
    {"\<\"StreamColorFunction\"\>"},
    {"\<\"StreamColorFunctionScaling\"\>"},
    {"\<\"StreamDensityPlot\"\>"},
    {"\<\"StruveH\"\>"},
    {"\<\"StruveL\"\>"},
    {"\<\"StudentTDistribution\"\>"},
    {"\<\"SuzukiDistribution\"\>"},
    {"\<\"SuzukiGroupSuz\"\>"},
    {"\<\"SymmetrizedReplacePart\"\>"},
    {"\<\"SynchronousInitialization\"\>"},
    {"\<\"SynchronousUpdating\"\>"},
    {"\<\"Synonyms\"\>"},
    {"\<\"SyntaxForm\"\>"},
    {"\<\"SyntaxInformation\"\>"},
    {"\<\"SyntaxLength\"\>"},
    {"\<\"SyntaxPacket\"\>"},
    {"\<\"SyntaxQ\"\>"},
    {"\<\"SynthesizeMissingValues\"\>"},
    {"\<\"SystemCredential\"\>"},
    {"\<\"SystemCredentialData\"\>"},
    {"\<\"SystemCredentialKey\"\>"},
    {"\<\"SystemCredentialKeys\"\>"},
    {"\<\"SystemCredentialStoreObject\"\>"},
    {"\<\"SystemDialogInput\"\>"},
    {"\<\"SystemInformation\"\>"},
    {"\<\"SystemInstall\"\>"},
    {"\<\"SystemModel\"\>"},
    {"\<\"SystemModelExamples\"\>"},
    {"\<\"SystemModelLinearize\"\>"},
    {"\<\"SystemModelParametricSimulate\"\>"},
    {"\<\"SystemModelPlot\"\>"},
    {"\<\"SystemModelProgressReporting\"\>"},
    {"\<\"SystemModelReliability\"\>"},
    {"\<\"SystemModelSimulate\"\>"},
    {"\<\"SystemModelSimulateSensitivity\"\>"},
    {"\<\"SystemModelSimulationData\"\>"},
    {"\<\"SystemModeler\"\>"},
    {"\<\"SystemModels\"\>"},
    {"\<\"SystemOpen\"\>"},
    {"\<\"SystemOptions\"\>"},
    {"\<\"SystemProcessData\"\>"},
    {"\<\"SystemProcesses\"\>"},
    {"\<\"SystemsConnectionsModel\"\>"},
    {"\<\"SystemsModelControllerData\"\>"},
    {"\<\"SystemsModelDelay\"\>"},
    {"\<\"SystemsModelDelayApproximate\"\>"},
    {"\<\"SystemsModelDelete\"\>"},
    {"\<\"SystemsModelDimensions\"\>"},
    {"\<\"SystemsModelExtract\"\>"},
    {"\<\"SystemsModelFeedbackConnect\"\>"},
    {"\<\"SystemsModelLabels\"\>"},
    {"\<\"SystemsModelLinearity\"\>"},
    {"\<\"SystemsModelMerge\"\>"},
    {"\<\"SystemsModelOrder\"\>"},
    {"\<\"SystemsModelParallelConnect\"\>"},
    {"\<\"SystemsModelSeriesConnect\"\>"},
    {"\<\"SystemsModelStateFeedbackConnect\"\>"},
    {"\<\"SystemsModelVectorRelativeOrders\"\>"},
    {"\<\"TTest\"\>"},
    {"\<\"TabView\"\>"},
    {"\<\"Table\"\>"},
    {"\<\"TableAlignments\"\>"},
    {"\<\"TableDepth\"\>"},
    {"\<\"TableDirections\"\>"},
    {"\<\"TableForm\"\>"},
    {"\<\"TableHeadings\"\>"},
    {"\<\"TableSpacing\"\>"},
    {"\<\"TableView\"\>"},
    {"\<\"TagBox\"\>"},
    {"\<\"TagBoxOptions\"\>"},
    {"\<\"TagSet\"\>"},
    {"\<\"TagSetDelayed\"\>"},
    {"\<\"TagUnset\"\>"},
    {"\<\"TaggingRules\"\>"},
    {"\<\"Take\"\>"},
    {"\<\"TakeDrop\"\>"},
    {"\<\"TakeLargest\"\>"},
    {"\<\"TakeLargestBy\"\>"},
    {"\<\"TakeList\"\>"},
    {"\<\"TakeSmallest\"\>"},
    {"\<\"TakeSmallestBy\"\>"},
    {"\<\"TakeWhile\"\>"},
    {"\<\"Tally\"\>"},
    {"\<\"Tan\"\>"},
    {"\<\"Tanh\"\>"},
    {"\<\"TargetDevice\"\>"},
    {"\<\"TargetFunctions\"\>"},
    {"\<\"TargetSystem\"\>"},
    {"\<\"TargetUnits\"\>"},
    {"\<\"TaskAbort\"\>"},
    {"\<\"TaskExecute\"\>"},
    {"\<\"TaskObject\"\>"},
    {"\<\"TaskRemove\"\>"},
    {"\<\"TaskResume\"\>"},
    {"\<\"TaskSuspend\"\>"},
    {"\<\"TaskWait\"\>"},
    {"\<\"Tasks\"\>"},
    {"\<\"TautologyQ\"\>"},
    {"\<\"TeXForm\"\>"},
    {"\<\"TelegraphProcess\"\>"},
    {"\<\"TemplateApply\"\>"},
    {"\<\"TemplateBox\"\>"},
    {"\<\"TemplateBoxOptions\"\>"},
    {"\<\"TemplateExpression\"\>"},
    {"\<\"TemplateIf\"\>"},
    {"\<\"TemplateObject\"\>"},
    {"\<\"TemplateSequence\"\>"},
    {"\<\"TemplateSlot\"\>"},
    {"\<\"TemplateWith\"\>"},
    {"\<\"TemporalData\"\>"},
    {"\<\"TemporalRegularity\"\>"},
    {"\<\"Temporary\"\>"},
    {"\<\"TensorContract\"\>"},
    {"\<\"TensorDimensions\"\>"},
    {"\<\"TensorExpand\"\>"},
    {"\<\"TensorProduct\"\>"},
    {"\<\"TensorRank\"\>"},
    {"\<\"ThomasPointProcess\"\>"},
    {"\<\"ThompsonGroupTh\"\>"},
    {"\<\"ThueMorse\"\>"},
    {"\<\"TitsGroupT\"\>"},
    {"\<\"ToeplitzMatrix\"\>"},
    {"\<\"TracyWidomDistribution\"\>"},
    {"\<\"TsallisQExponentialDistribution\"\>"},
    {"\<\"TsallisQGaussianDistribution\"\>"},
    {"\<\"TukeyLambdaDistribution\"\>"},
    {"\<\"TukeyWindow\"\>"},
    {"\<\"TuranGraph\"\>"},
    {"\<\"TuringMachine\"\>"},
    {"\<\"TuttePolynomial\"\>"},
    {"\<\"VectorAngle\"\>"},
    {"\<\"VectorAround\"\>"},
    {"\<\"VectorAspectRatio\"\>"},
    {"\<\"VectorColorFunction\"\>"},
    {"\<\"VectorColorFunctionScaling\"\>"},
    {"\<\"VectorDensityPlot\"\>"},
    {"\<\"VectorDisplacementPlot\"\>"},
    {"\<\"VectorDisplacementPlot3D\"\>"},
    {"\<\"VectorGreater\"\>"},
    {"\<\"VectorGreaterEqual\"\>"},
    {"\<\"VectorLess\"\>"},
    {"\<\"VectorLessEqual\"\>"},
    {"\<\"VectorMarkers\"\>"},
    {"\<\"VectorPlot\"\>"},
    {"\<\"VectorPlot3D\"\>"},
    {"\<\"VectorPoints\"\>"},
    {"\<\"VectorQ\"\>"},
    {"\<\"VectorRange\"\>"},
    {"\<\"VectorScaling\"\>"},
    {"\<\"VectorSizes\"\>"},
    {"\<\"VectorStyle\"\>"},
    {"\<\"Vectors\"\>"},
    {"\<\"Vee\"\>"},
    {"\<\"Verbatim\"\>"},
    {"\<\"VerificationTest\"\>"},
    {"\<\"VerifyConvergence\"\>"},
    {"\<\"VerifyDerivedKey\"\>"},
    {"\<\"VerifyDigitalSignature\"\>"},
    {"\<\"VerifyFileSignature\"\>"},
    {"\<\"VerifyInterpretation\"\>"},
    {"\<\"VerifySecurityCertificates\"\>"},
    {"\<\"VerifySolutions\"\>"},
    {"\<\"VerifyTestAssumptions\"\>"},
    {"\<\"VersionedPreferences\"\>"},
    {"\<\"VertexAdd\"\>"},
    {"\<\"VertexCapacity\"\>"},
    {"\<\"VertexChromaticNumber\"\>"},
    {"\<\"VertexColors\"\>"},
    {"\<\"VertexComponent\"\>"},
    {"\<\"VertexConnectivity\"\>"},
    {"\<\"VertexContract\"\>"},
    {"\<\"VertexCoordinates\"\>"},
    {"\<\"VertexCorrelationSimilarity\"\>"},
    {"\<\"VertexCosineSimilarity\"\>"},
    {"\<\"VertexCount\"\>"},
    {"\<\"VertexCoverQ\"\>"},
    {"\<\"VertexDataCoordinates\"\>"},
    {"\<\"VertexDegree\"\>"},
    {"\<\"VertexDelete\"\>"},
    {"\<\"VertexDiceSimilarity\"\>"},
    {"\<\"VertexEccentricity\"\>"},
    {"\<\"VertexInComponent\"\>"},
    {"\<\"VertexInComponentGraph\"\>"},
    {"\<\"VertexInDegree\"\>"},
    {"\<\"VertexIndex\"\>"},
    {"\<\"VertexJaccardSimilarity\"\>"},
    {"\<\"VertexLabelStyle\"\>"},
    {"\<\"VertexLabels\"\>"},
    {"\<\"VertexList\"\>"},
    {"\<\"VertexNormals\"\>"},
    {"\<\"VertexOutComponent\"\>"},
    {"\<\"VertexOutComponentGraph\"\>"},
    {"\<\"VertexOutDegree\"\>"},
    {"\<\"VertexQ\"\>"},
    {"\<\"VertexReplace\"\>"},
    {"\<\"VertexShape\"\>"},
    {"\<\"VertexShapeFunction\"\>"},
    {"\<\"VertexSize\"\>"},
    {"\<\"VertexStyle\"\>"},
    {"\<\"VertexTextureCoordinates\"\>"},
    {"\<\"VertexTransitiveGraphQ\"\>"},
    {"\<\"VertexWeight\"\>"},
    {"\<\"VertexWeightedGraphQ\"\>"},
    {"\<\"VerticalBar\"\>"},
    {"\<\"VerticalGauge\"\>"},
    {"\<\"VerticalSeparator\"\>"},
    {"\<\"VerticalSlider\"\>"},
    {"\<\"VerticalTilde\"\>"},
    {"\<\"Video\"\>"},
    {"\<\"VideoCombine\"\>"},
    {"\<\"VideoDelete\"\>"},
    {"\<\"VideoEncoding\"\>"},
    {"\<\"VideoExtractFrames\"\>"},
    {"\<\"VideoFrameList\"\>"},
    {"\<\"VideoFrameMap\"\>"},
    {"\<\"VideoGenerator\"\>"},
    {"\<\"VideoInsert\"\>"},
    {"\<\"VideoIntervals\"\>"},
    {"\<\"VideoJoin\"\>"},
    {"\<\"VideoMap\"\>"},
    {"\<\"VideoMapList\"\>"},
    {"\<\"VideoMapTimeSeries\"\>"},
    {"\<\"VideoPause\"\>"},
    {"\<\"VideoPlay\"\>"},
    {"\<\"VideoQ\"\>"},
    {"\<\"VideoRecord\"\>"},
    {"\<\"VideoReplace\"\>"},
    {"\<\"VideoSplit\"\>"},
    {"\<\"VideoStop\"\>"},
    {"\<\"VideoStream\"\>"},
    {"\<\"VideoStreams\"\>"},
    {"\<\"VideoTimeStretch\"\>"},
    {"\<\"VideoTrackSelection\"\>"},
    {"\<\"VideoTranscode\"\>"},
    {"\<\"VideoTrim\"\>"},
    {"\<\"ViewAngle\"\>"},
    {"\<\"ViewCenter\"\>"},
    {"\<\"VoigtDistribution\"\>"},
    {"\<\"VonMisesDistribution\"\>"},
    {"\<\"VoronoiMesh\"\>"},
    {"\<\"WakebyDistribution\"\>"},
    {"\<\"WalleniusHypergeometricDistribution\"\>"},
    {"\<\"WaringYuleDistribution\"\>"},
    {"\<\"WatsonUSquareTest\"\>"},
    {"\<\"WattsStrogatzGraphDistribution\"\>"},
    {"\<\"WeberE\"\>"},
    {"\<\"WeibullDistribution\"\>"},
    {"\<\"WeierstrassE1\"\>"},
    {"\<\"WeierstrassE2\"\>"},
    {"\<\"WeierstrassE3\"\>"},
    {"\<\"WeierstrassEta1\"\>"},
    {"\<\"WeierstrassEta2\"\>"},
    {"\<\"WeierstrassEta3\"\>"},
    {"\<\"WeierstrassHalfPeriodW1\"\>"},
    {"\<\"WeierstrassHalfPeriodW2\"\>"},
    {"\<\"WeierstrassHalfPeriodW3\"\>"},
    {"\<\"WeierstrassHalfPeriods\"\>"},
    {"\<\"WeierstrassInvariantG2\"\>"},
    {"\<\"WeierstrassInvariantG3\"\>"},
    {"\<\"WeierstrassInvariants\"\>"},
    {"\<\"WeierstrassP\"\>"},
    {"\<\"WeierstrassPPrime\"\>"},
    {"\<\"WeierstrassSigma\"\>"},
    {"\<\"WeierstrassZeta\"\>"},
    {"\<\"WelchWindow\"\>"},
    {"\<\"WhittakerM\"\>"},
    {"\<\"WhittakerW\"\>"},
    {"\<\"WienerFilter\"\>"},
    {"\<\"WienerProcess\"\>"},
    {"\<\"WignerD\"\>"},
    {"\<\"WignerSemicircleDistribution\"\>"},
    {"\<\"WilksW\"\>"},
    {"\<\"WilksWTest\"\>"},
    {"\<\"WinsorizedMean\"\>"},
    {"\<\"WinsorizedVariance\"\>"},
    {"\<\"WishartMatrixDistribution\"\>"},
    {"\<\"WolframAlpha\"\>"},
    {"\<\"WolframLanguageData\"\>"},
    {"\<\"Wronskian\"\>"},
    {"\<\"YuleDissimilarity\"\>"},
    {"\<\"ZernikeR\"\>"},
    {"\<\"ZipfDistribution\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.870198340769303*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"34104b73-dd1d-4895-b9b2-73f2df0ce3a3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"name", ",", 
     RowBox[{"WolframLanguageData", "[", 
      RowBox[{"name", ",", "\"\<EponymousPeople\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"name", ",", 
     RowBox[{"CanonicalName", "[", "%55", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.870198358322734*^9, 3.870198431698797*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"893cbbbb-b085-4ae0-b2ff-74f04e7f7952"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"\"$RequesterWolframID\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Stephen Wolfram\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"$RequesterWolframUUID\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Stephen Wolfram\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"$WolframID\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Stephen Wolfram\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"$WolframUUID\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Stephen Wolfram\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"AbelianGroup\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Niels Henrik Abel\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"NielsHenrikAbel::66z74\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"NielsHenrikAbel::66z74\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{"\"AiryAi\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Biddell Airy\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"GeorgeBiddellAiry::zq9kk\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"GeorgeBiddellAiry::zq9kk\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"AiryAiPrime\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Biddell Airy\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"GeorgeBiddellAiry::zq9kk\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"GeorgeBiddellAiry::zq9kk\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"AiryAiZero\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Biddell Airy\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"GeorgeBiddellAiry::zq9kk\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"GeorgeBiddellAiry::zq9kk\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"AiryBi\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Biddell Airy\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"GeorgeBiddellAiry::zq9kk\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"GeorgeBiddellAiry::zq9kk\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"AiryBiPrime\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Biddell Airy\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"GeorgeBiddellAiry::zq9kk\""}], 
                   "]"}], 
                 "\"Entity[\\\"Person\\\", \
\\\"GeorgeBiddellAiry::zq9kk\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"AiryBiZero\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Biddell Airy\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"GeorgeBiddellAiry::zq9kk\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"GeorgeBiddellAiry::zq9kk\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"AndersonDarlingTest\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 TemplateBox[{"\"Theodore Wilbur Anderson\"", 
                   RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Person\"", ",", "\"TheodoreWilburAnderson::w2pd3\""}], 
                    "]"}], "\"Entity[\\\"Person\\\", \
\\\"TheodoreWilburAnderson::w2pd3\\\"]\"", "\"person\""}, "Entity"], ",", 
                 TemplateBox[{"\"Donald Allan Darling\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Person\"", ",", "\"DonaldADarling::s3h6z\""}], 
                    "]"}], "\"Entity[\\\"Person\\\", \
\\\"DonaldADarling::s3h6z\\\"]\"", "\"person\""}, "Entity"]}], "}"}]}], "}"}],
          ",", 
         TemplateBox[{"893"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"\"WignerSemicircleDistribution\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Eugene Wigner\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"EugeneWigner::62q37\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"EugeneWigner::62q37\\\
\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WilksW\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Samuel Stanley Wilks\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"SamuelStanleyWilks::xr3z7\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"SamuelStanleyWilks::xr3z7\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WilksWTest\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Samuel Stanley Wilks\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"SamuelStanleyWilks::xr3z7\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"SamuelStanleyWilks::xr3z7\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WinsorizedMean\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Charles P. Winsor\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"CharlesPWinsor::6t9v7\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"CharlesPWinsor::6t9v7\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WinsorizedVariance\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Charles P. Winsor\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"CharlesPWinsor::6t9v7\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"CharlesPWinsor::6t9v7\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WishartMatrixDistribution\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"John Wishart\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"JohnWishart::d3dfc\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"JohnWishart::d3dfc\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WolframAlpha\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Stephen Wolfram\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"WolframLanguageData\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Stephen Wolfram\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"Wronskian\"", ",", 
             RowBox[{"{", 
               
               TemplateBox[{
                "\"J\[OAcute]zef Maria Hoene\[Hyphen]Wro\:0144ski\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", 
                    "\"Josef-MariaHoeneDeWronski::489s3\""}], "]"}], 
                 "\"Entity[\\\"Person\\\", \
\\\"Josef-MariaHoeneDeWronski::489s3\\\"]\"", "\"person\""}, "Entity"], 
               "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"YuleDissimilarity\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Udny Yule\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"GeorgeUdnyYule::nwx49\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"GeorgeUdnyYule::nwx49\
\\\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZernikeR\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"Frits Zernike\"", 
                 RowBox[{"Entity", "[", 
                   RowBox[{"\"Person\"", ",", "\"FritsZernike::gb58m\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \\\"FritsZernike::gb58m\\\
\"]\"", "\"person\""}, "Entity"], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"\"ZipfDistribution\"", ",", 
             RowBox[{"{", 
               TemplateBox[{"\"George Kingsley Zipf\"", 
                 RowBox[{"Entity", "[", 
                   
                   RowBox[{
                    "\"Person\"", ",", "\"GeorgeKingsleyZipf::4525c\""}], 
                   "]"}], "\"Entity[\\\"Person\\\", \
\\\"GeorgeKingsleyZipf::4525c\\\"]\"", "\"person\""}, "Entity"], "}"}]}], 
           "}"}]}], "}"}], Short[#, 5]& ], "line" -> 66, "sessionID" -> 
   19466872866887747024, "byteCount" -> 233928, "size" -> 5, "stored" -> 
   False, "expr" -> Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.870198394247995*^9, 3.8701984229319983`*^9}, 
   3.8701985804336925`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"4141451f-01cd-4dfb-83cc-f87e9f8164a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WolframLanguageData", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8701983696472363`*^9, 3.8701983728482475`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9f8a09d5-bb37-409f-9619-08f6d814c749"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"attributes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Attributes\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Attributes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"character count\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CharacterCount\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CharacterCount\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cloud support notes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CloudSupportNotes\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CloudSupportNotes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"cloud support status\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CloudSupportStatus\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CloudSupportStatus\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"common option values\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"CommonOptionValues\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"CommonOptionValues\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"date introduced\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateIntroduced\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateIntroduced\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"date last modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DateLastModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DateLastModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"dates modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"DatesModified\""}], "]"}],
      "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"DatesModified\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation basic examples\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationBasicExamples\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationBasicExamples\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation example counts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleCounts\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleCounts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation example inputs\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleInputs\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleInputs\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"documentation example text\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"DocumentationExampleText\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"DocumentationExampleText\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"entity classes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EntityClasses\""}], "]"}],
      "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"EntityClasses\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"eponymous people\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"EponymousPeople\""}], 
       "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EponymousPeople\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"equal\[Hyphen]precedence symbols\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"EqualPrecedenceSymbols\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"EqualPrecedenceSymbols\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"frequencies of usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Frequencies\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Frequencies\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full version introduced\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FullVersionIntroduced\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionIntroduced\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full version last modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"FullVersionLastModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionLastModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"full versions modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FullVersionsModified\""}],
        "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FullVersionsModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"functionality areas\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionalityAreas\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"FunctionalityAreas\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbol background\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"FunctionEssay\""}], "]"}],
      "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"FunctionEssay\\\"]\
\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"keyboard shortcuts\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"KeyboardShortcuts\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"KeyboardShortcuts\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"link trails\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"LinkTrails\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"LinkTrails\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"memberships\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Memberships\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Memberships\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"name\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Name\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Name\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"option names\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"OptionNames\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"OptionNames\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"options\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Options\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Options\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"plaintext usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PlaintextUsage\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PlaintextUsage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"precedence ranks\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"PrecedenceRanks\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"PrecedenceRanks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"ranks of usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Ranks\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Ranks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related entities\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedEntities\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedEntities\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related guide pages\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedGuidePages\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedGuidePages\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related links\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedLinks\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedLinks\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"related symbols\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelatedSymbols\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelatedSymbols\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"relationship community graph\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"RelationshipCommunityGraph\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipCommunityGraph\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"relationship graph\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"RelationshipGraph\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"RelationshipGraph\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"short notations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"ShortNotations\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"ShortNotations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"subject classifications\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SubjectClassifications\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SubjectClassifications\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbols linking to\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SymbolsLinkingTo\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsLinkingTo\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbols using as attribute\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsAttribute\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsAttribute\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"symbols using as option\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"SymbolsUsingAsOption\""}],
        "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"SymbolsUsingAsOption\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"text strings\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TextStrings\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"TextStrings\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"timeline\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Timeline\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"Timeline\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"timeline events\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TimelineEvents\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TimelineEvents\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"translations\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"Translations\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"Translations\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typeset usage\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TypesetUsage\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TypesetUsage\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"typeset usage notes\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"TypesetUsageNotes\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"TypesetUsageNotes\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"URL\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"URL\""}], "]"}], 
     "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \\\"URL\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"version introduced\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionIntroduced\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionIntroduced\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"version last modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionLastModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionLastModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"versions modified\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"WolframLanguageSymbol\"", ",", "\"VersionsModified\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"VersionsModified\\\"]\""},
    "EntityProperty"], ",", 
   TemplateBox[{"\"Wolfram documentation link\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{
        "\"WolframLanguageSymbol\"", ",", "\"WolframDocumentationLink\""}], 
       "]"}], "\"EntityProperty[\\\"WolframLanguageSymbol\\\", \
\\\"WolframDocumentationLink\\\"]\""},
    "EntityProperty"]}], "}"}]], "Output",
 CellChangeTimes->{3.8701983733262653`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"7a88a8f1-6161-41cb-8266-c5537db4fef9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalName", "[", 
  RowBox[{"WolframLanguageData", "[", "\"\<Properties\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8701984048015757`*^9, 3.8701984079178514`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"694e69d4-2e9c-4fbe-b4c0-b1c6fabc32d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Attributes\"\>", ",", "\<\"CharacterCount\"\>", 
   ",", "\<\"CloudSupportNotes\"\>", ",", "\<\"CloudSupportStatus\"\>", 
   ",", "\<\"CommonOptionValues\"\>", ",", "\<\"DateIntroduced\"\>", 
   ",", "\<\"DateLastModified\"\>", ",", "\<\"DatesModified\"\>", 
   ",", "\<\"DocumentationBasicExamples\"\>", 
   ",", "\<\"DocumentationExampleCounts\"\>", 
   ",", "\<\"DocumentationExampleInputs\"\>", 
   ",", "\<\"DocumentationExampleText\"\>", ",", "\<\"EntityClasses\"\>", 
   ",", "\<\"EponymousPeople\"\>", ",", "\<\"EqualPrecedenceSymbols\"\>", 
   ",", "\<\"Frequencies\"\>", ",", "\<\"FullVersionIntroduced\"\>", 
   ",", "\<\"FullVersionLastModified\"\>", 
   ",", "\<\"FullVersionsModified\"\>", ",", "\<\"FunctionalityAreas\"\>", 
   ",", "\<\"FunctionEssay\"\>", ",", "\<\"KeyboardShortcuts\"\>", 
   ",", "\<\"LinkTrails\"\>", ",", "\<\"Memberships\"\>", ",", "\<\"Name\"\>",
    ",", "\<\"OptionNames\"\>", ",", "\<\"Options\"\>", 
   ",", "\<\"PlaintextUsage\"\>", ",", "\<\"PrecedenceRanks\"\>", 
   ",", "\<\"Ranks\"\>", ",", "\<\"RelatedEntities\"\>", 
   ",", "\<\"RelatedGuidePages\"\>", ",", "\<\"RelatedLinks\"\>", 
   ",", "\<\"RelatedSymbols\"\>", ",", "\<\"RelationshipCommunityGraph\"\>", 
   ",", "\<\"RelationshipGraph\"\>", ",", "\<\"ShortNotations\"\>", 
   ",", "\<\"SubjectClassifications\"\>", ",", "\<\"SymbolsLinkingTo\"\>", 
   ",", "\<\"SymbolsUsingAsAttribute\"\>", 
   ",", "\<\"SymbolsUsingAsOption\"\>", ",", "\<\"TextStrings\"\>", 
   ",", "\<\"Timeline\"\>", ",", "\<\"TimelineEvents\"\>", 
   ",", "\<\"Translations\"\>", ",", "\<\"TypesetUsage\"\>", 
   ",", "\<\"TypesetUsageNotes\"\>", ",", "\<\"URL\"\>", 
   ",", "\<\"VersionIntroduced\"\>", ",", "\<\"VersionLastModified\"\>", 
   ",", "\<\"VersionsModified\"\>", ",", "\<\"WolframDocumentationLink\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{3.8701984083308783`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"88aac95f-3819-4bab-88db-5b0294378ca2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"be2a426f-99dd-41e2-85c3-b09f161b2e37"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 153, 3, 98, "Title",ExpressionUUID->"ef7afc9a-a405-4fec-bb62-56bca82d332b"],
Cell[736, 27, 154, 3, 38, "CodeText",ExpressionUUID->"84594cf8-f889-4f79-9297-5be37a19a2a8"],
Cell[893, 32, 626, 11, 101, "CodeText",ExpressionUUID->"0d70c5aa-9a47-498d-a415-2c7436503e16"],
Cell[CellGroupData[{
Cell[1544, 47, 233, 3, 28, "Input",ExpressionUUID->"18594ac4-4460-48db-aa0a-79de2f994a04"],
Cell[1780, 52, 14793, 317, 254, "Output",ExpressionUUID->"dfee45f8-56a6-47de-8d1d-aa3daa15b5de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16610, 374, 477, 9, 39, "Input",ExpressionUUID->"3e2eb532-9339-4e6e-8dfa-3035ae40ff91"],
Cell[17090, 385, 169, 2, 32, "Output",ExpressionUUID->"08ac3305-c275-4b9d-9dcb-783713c8cc8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17296, 392, 575, 11, 39, "Input",ExpressionUUID->"c531d379-8a5b-4624-b6eb-baa46b3fa3ac"],
Cell[17874, 405, 408, 9, 43, "Output",ExpressionUUID->"a3b869bd-9d3c-46a0-b21a-a61d23f4c069"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18319, 419, 691, 14, 39, "Input",ExpressionUUID->"aae703e7-4244-407f-92ed-6c2ee3f4a656"],
Cell[19013, 435, 5806, 138, 107, "Output",ExpressionUUID->"91516e31-31cf-4044-b3ea-8a0f54ab97fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24856, 578, 277, 4, 28, "Input",ExpressionUUID->"7f826ced-5e98-45a6-b14e-4dc04123f73c"],
Cell[25136, 584, 168, 3, 32, "Output",ExpressionUUID->"72670abd-a43e-41a7-8ce1-99d99aff10e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25341, 592, 284, 5, 28, "Input",ExpressionUUID->"82afabcb-2bf8-47f8-bcf3-f11bed3ae4a4"],
Cell[25628, 599, 410, 9, 43, "Output",ExpressionUUID->"c0b5d9e3-f69d-4ef3-95d7-d7ddd90de8ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26075, 613, 213, 3, 28, "Input",ExpressionUUID->"67b31af8-efa6-4298-adb6-bf3c3fe96a93"],
Cell[26291, 618, 9632, 150, 661, "Output",ExpressionUUID->"33bd3754-2a02-4a5b-8360-0f55afb73dcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35960, 773, 246, 4, 28, "Input",ExpressionUUID->"220c2409-a1ae-4c94-b92e-728df9245eea"],
Cell[36209, 779, 2794441, 64556, 31275, "Output",ExpressionUUID->"6db0a870-5bcb-4915-ad77-4b9ac5f08d75"]
}, Closed]],
Cell[CellGroupData[{
Cell[2830687, 65340, 228, 3, 24, "Input",ExpressionUUID->"73aa65c7-7123-438d-87db-f8043b65516a"],
Cell[2830918, 65345, 55933, 1006, 144, "Output",ExpressionUUID->"a0990697-e056-4595-af36-415807f5411a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2886888, 66356, 277, 4, 28, "Input",ExpressionUUID->"b9c2ca94-82e2-4900-9063-db86561d1d37"],
Cell[2887168, 66362, 168, 3, 32, "Output",ExpressionUUID->"9a6afa41-979b-40cb-82c1-2a319026ae06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2887373, 66370, 284, 5, 28, "Input",ExpressionUUID->"18cac9f6-f631-49b0-b4f8-88feaaf96b7d"],
Cell[2887660, 66377, 410, 9, 43, "Output",ExpressionUUID->"29f05964-5e2f-43bc-a33d-4cbd33e41dff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2888107, 66391, 312, 6, 28, "Input",ExpressionUUID->"7069e254-4271-43fa-8327-8d6b5a2a3f70"],
Cell[2888422, 66399, 152, 2, 32, "Output",ExpressionUUID->"8530200e-5ff5-42fd-86a6-2862476bd024"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2888611, 66406, 319, 6, 28, "Input",ExpressionUUID->"5c6744ba-22a2-4643-b059-4a8709da8ea7"],
Cell[2888933, 66414, 155, 2, 32, "Output",ExpressionUUID->"803179a4-dfd8-475b-bdc7-60ee2111c0ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2889125, 66421, 254, 4, 28, "Input",ExpressionUUID->"2ccb3a28-6f18-430e-aafb-f060d2d6530c"],
Cell[2889382, 66427, 198971, 3089, 14037, "Output",ExpressionUUID->"e0d5d97a-e5ad-401b-90d4-956529020f56"]
}, Closed]],
Cell[CellGroupData[{
Cell[3088390, 69521, 346, 7, 24, "Input",ExpressionUUID->"9faa5954-21b0-4dc3-a5cb-457e324304e0"],
Cell[3088739, 69530, 484, 12, 43, "Output",ExpressionUUID->"0254e124-ee3c-4af1-9e70-d6f77cd0ffcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3089260, 69547, 509, 12, 28, "Input",ExpressionUUID->"cfce49c8-e84e-4748-86be-f87f075b10d3"],
Cell[3089772, 69561, 544, 11, 46, "Message",ExpressionUUID->"ea6a5bed-fba0-4a4e-a429-e3785f919664"],
Cell[3090319, 69574, 362, 9, 28, "Message",ExpressionUUID->"0b4209f0-31b6-421c-bf62-a62a45aadffc"],
Cell[3090684, 69585, 546, 11, 46, "Message",ExpressionUUID->"d8290e8b-de2e-4081-aad5-61ab40004e8f"],
Cell[3091233, 69598, 362, 9, 28, "Message",ExpressionUUID->"4675d0a8-df25-4f8b-80b5-9ef0bea278dd"],
Cell[3091598, 69609, 547, 11, 46, "Message",ExpressionUUID->"db61cab1-4257-4280-bd35-273f98272f60"],
Cell[3092148, 69622, 459, 10, 28, "Message",ExpressionUUID->"1b787e8d-507f-4dae-9784-9e8f727640ad"],
Cell[3092610, 69634, 363, 9, 28, "Message",ExpressionUUID->"bf8aa5b8-0fb7-419a-95ae-f03e9500e969"],
Cell[3092976, 69645, 459, 10, 28, "Message",ExpressionUUID->"c7db036d-84c6-47d2-a4d2-6a2f3a83af15"],
Cell[3093438, 69657, 262289, 5711, 3734, "Output",ExpressionUUID->"ab514dac-f2d4-454e-86f6-3a57ea7af626"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3355764, 75373, 215, 3, 28, "Input",ExpressionUUID->"1ac7db1d-7c9a-401e-ab3e-8506bfd8ef29"],
Cell[3355982, 75378, 31488, 492, 2221, "Output",ExpressionUUID->"5da20866-9549-4cfe-8af3-d13eb45c245d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3387507, 75875, 248, 4, 28, "Input",ExpressionUUID->"62c281a5-3fa6-4321-90f2-b54aed27351a"],
Cell[3387758, 75881, 30587, 925, 15790, "Output",ExpressionUUID->"34104b73-dd1d-4895-b9b2-73f2df0ce3a3"]
}, Closed]],
Cell[CellGroupData[{
Cell[3418382, 76811, 476, 11, 24, "Input",ExpressionUUID->"893cbbbb-b085-4ae0-b2ff-74f04e7f7952"],
Cell[3418861, 76824, 11471, 247, 307, "Output",ExpressionUUID->"4141451f-01cd-4dfb-83cc-f87e9f8164a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3430369, 77076, 238, 3, 28, "Input",ExpressionUUID->"9f8a09d5-bb37-409f-9619-08f6d814c749"],
Cell[3430610, 77081, 14795, 317, 254, "Output",ExpressionUUID->"7a88a8f1-6161-41cb-8266-c5537db4fef9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3445442, 77403, 281, 5, 28, "Input",ExpressionUUID->"694e69d4-2e9c-4fbe-b4c0-b1c6fabc32d1"],
Cell[3445726, 77410, 1992, 32, 147, "Output",ExpressionUUID->"88aac95f-3819-4bab-88db-5b0294378ca2"]
}, Open  ]]
}, Open  ]]
}
]
*)

